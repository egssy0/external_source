namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto prefabID = 0x48;
		constexpr auto globalBroadcast = 0x4c;
		constexpr auto net = 0x50;
		constexpr auto IsDestroyedk__BackingField = 0x58;
		constexpr auto _prefabName = 0x60;
		constexpr auto _prefabNameWithoutExtension = 0x68;

		constexpr auto get_JustCreated = 0x3025c0;
		constexpr auto set_JustCreated = 0x3027b0;
		constexpr auto ClientSpawn = 0x300d20;
		constexpr auto ClientOnEnable = 0x300ca0;
		constexpr auto ClientInit = 0x300ab0;
		constexpr auto OnNetworkUpdate = 0x302090;
		constexpr auto PreNetworkUpdate = 0x2f6e50;
		constexpr auto PostNetworkUpdate = 0x2f6e50;
		constexpr auto ShouldDestroyWithGroup = 0x2f8b40;
		constexpr auto ShouldDestroyImmediately = 0x2f6010;
		constexpr auto NetworkDestroy = 0x301c20;
		constexpr auto DoClientDestroy = 0x3010f0;
		constexpr auto DoNetworkDestroy = 0x2f6e50;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x300890;
		constexpr auto PostProcess = 0x302210;
		constexpr auto GetParentEntity = 0x301550;
		constexpr auto HasParent = 0x301560;
		constexpr auto AddChild = 0x300800;
		constexpr auto OnChildAdded = 0x2f6e50;
		constexpr auto RemoveChild = 0x302290;
		constexpr auto OnChildRemoved = 0x2f6e50;
		constexpr auto get_gameManager = 0x3026e0;
		constexpr auto get_prefabAttribute = 0x302740;
		constexpr auto get_IsDestroyed = 0x3025b0;
		constexpr auto set_IsDestroyed = 0x3027a0;
		constexpr auto get_PrefabName = 0x3025d0;
		constexpr auto get_ShortPrefabName = 0x302650;
		constexpr auto GetNetworkPosition = 0x3014c0;
		constexpr auto GetNetworkRotation = 0x301510;
		constexpr auto InvokeString = 0x301570;
		constexpr auto LookupPrefab = 0x301b80;
		constexpr auto EqualNetID = 0x301400;
		constexpr auto ResetState = 0x302300;
		constexpr auto InitShared = 0x2f6e50;
		constexpr auto PreInitShared = 0x2f6e50;
		constexpr auto PostInitShared = 0x2f6e50;
		constexpr auto DestroyShared = 0x2f6e50;
		constexpr auto OnNetworkGroupEnter = 0x2f6e50;
		constexpr auto OnNetworkGroupLeave = 0x2f6e50;
		constexpr auto OnNetworkGroupChange = 0x301f50;
		constexpr auto OnNetworkSubscribersEnter = 0x2f6e50;
		constexpr auto OnNetworkSubscribersLeave = 0x2f6e50;
		constexpr auto EntityDestroy = 0x301310;
		constexpr auto DoEntityDestroy = 0x3011b0;
		constexpr auto SpawnShared = 0x302350;
		constexpr auto Load = 0x3017c0;
		constexpr auto get_isServer = 0x2f6010;
		constexpr auto get_isClient = 0x2f8b40;
		constexpr auto OnRpcMessage = 0x2f6010;
		constexpr auto ctor = 0x302510;
		constexpr auto cctor = 0x302460;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x238;
		constexpr auto __menuOption_Drink = 0x290;
		constexpr auto __menuOption_InviteToTeam = 0x2e8;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x340;
		constexpr auto __menuOption_Menu_LootPlayer = 0x398;
		constexpr auto __menuOption_Promote = 0x3f0;
		constexpr auto __menuOption_SaltWater = 0x448;
		constexpr auto currentViewMode = 0x4a0;
		constexpr auto selectedViewMode = 0x4a4;
		constexpr auto lastRevivePoint = 0x4a8;
		constexpr auto lastReviveDirection = 0x4b4;
		constexpr auto playerModel = 0x4c0;
		constexpr auto Frozen = 0x4c8;
		constexpr auto voiceRecorder = 0x4d0;
		constexpr auto voiceSpeaker = 0x4d8;
		constexpr auto input = 0x4e0;
		constexpr auto movement = 0x4e8;
		constexpr auto collision = 0x4f0;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x4f8;
		constexpr auto _lookingAtEntity = 0x500;
		constexpr auto _lookingAtCollider = 0x508;
		constexpr auto lookingAtPointk__BackingField = 0x510;
		constexpr auto wakeTime = 0x51c;
		constexpr auto needsClothesRebuild = 0x520;
		constexpr auto wasSleeping = 0x521;
		constexpr auto wokeUpBefore = 0x522;
		constexpr auto wasDead = 0x523;
		constexpr auto lastClothesHash = 0x524;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x528;
		constexpr auto GestureViewModel = 0x530;
		constexpr auto timeSinceUpdatedLookingAt = 0x538;
		constexpr auto nextTopologyTestTime = 0x53c;
		constexpr auto usePressTime = 0x540;
		constexpr auto useHeldTime = 0x544;
		constexpr auto lookingAtTest = 0x548;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x550;
		constexpr auto gestureList = 0x560;
		constexpr auto gestureFinishedTime = 0x568;
		constexpr auto blockHeldInputTimer = 0x56c;
		constexpr auto currentGesture = 0x570;
		constexpr auto preGestureVm = 0x578;
		constexpr auto disabledHeldEntity = 0x580;
		constexpr auto nextGestureMenuOpenTime = 0x588;
		constexpr auto lastGestureCancel = 0x58c;
		constexpr auto client_lastHelloTime = 0x590;
		constexpr auto currentTeam = 0x598;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a0;
		constexpr auto lastReceivedTeamTime = 0x5a8;
		constexpr auto lastPresenceTeamId = 0x5b0;
		constexpr auto lastPresenceTeamSize = 0x5b8;
		constexpr auto playerGroupKey = 0x5c0;
		constexpr auto playerGroupSizeKey = 0x5c8;
		constexpr auto clActiveItem = 0x5d0;
		constexpr auto ClientCurrentMapNote = 0x5d8;
		constexpr auto ClientCurrentDeathNote = 0x5e0;
		constexpr auto missions = 0x5e8;
		constexpr auto _activeMission = 0x5f0;
		constexpr auto modelState = 0x5f8;
		constexpr auto mounted = 0x600;
		constexpr auto nextSeatSwapTime = 0x610;
		constexpr auto cachedBuildingPrivilegeTime = 0x614;
		constexpr auto cachedBuildingPrivilege = 0x618;
		constexpr auto maxProjectileID = 0x620;
		constexpr auto lastUpdateTime = 0x624;
		constexpr auto cachedThreatLevel = 0x628;
		constexpr auto serverTickRate = 0x62c;
		constexpr auto clientTickRate = 0x630;
		constexpr auto serverTickInterval = 0x634;
		constexpr auto clientTickInterval = 0x638;
		constexpr auto lastSentTickTime = 0x63c;
		constexpr auto lastSentTick = 0x640;
		constexpr auto nextVisThink = 0x648;
		constexpr auto lastTimeSeen = 0x64c;
		constexpr auto debugPrevVisible = 0x650;
		constexpr auto fallDamageEffect = 0x658;
		constexpr auto drownEffect = 0x660;
		constexpr auto playerFlags = 0x668;
		constexpr auto eyes = 0x670;
		constexpr auto inventory = 0x678;
		constexpr auto blueprints = 0x680;
		constexpr auto metabolism = 0x688;
		constexpr auto modifiers = 0x690;
		constexpr auto playerCollider = 0x698;
		constexpr auto Belt = 0x6a0;
		constexpr auto playerRigidbody = 0x6a8;
		constexpr auto userID = 0x6b0;
		constexpr auto UserIDString = 0x6b8;
		constexpr auto gamemodeteam = 0x6c0;
		constexpr auto reputation = 0x6c4;
		constexpr auto _displayName = 0x6c8;
		constexpr auto _lastSetName = 0x6d0;
		constexpr auto playerColliderStanding = 0x6d8;
		constexpr auto playerColliderDucked = 0x6ec;
		constexpr auto playerColliderCrawling = 0x700;
		constexpr auto playerColliderLyingDown = 0x714;
		constexpr auto cachedProtection = 0x728;
		constexpr auto oldCameraFix = 0x28;
		constexpr auto lastHeadshotSoundTime = 0x730;
		constexpr auto nextColliderRefreshTime = 0x734;
		constexpr auto clothingBlocksAiming = 0x738;
		constexpr auto clothingMoveSpeedReduction = 0x73c;
		constexpr auto clothingWaterSpeedBonus = 0x740;
		constexpr auto clothingAccuracyBonus = 0x744;
		constexpr auto equippingBlocked = 0x748;
		constexpr auto eggVision = 0x74c;
		constexpr auto activeTelephone = 0x750;
		constexpr auto designingAIEntity = 0x758;

		constexpr auto GetMenuOptions = 0x312710;
		constexpr auto get_HasMenuOptions = 0x329b70;
		constexpr auto OnRpcMessage = 0x319ec0;
		constexpr auto CanBeLooted = 0x308cb0;
		constexpr auto Menu_LootPlayer = 0x318f10;
		constexpr auto Menu_LootPlayer_ShowIf = 0x318ef0;
		constexpr auto RPC_OpenLootPanel = 0x3229c0;
		constexpr auto PlayOpenSound = 0x320d40;
		constexpr auto InFirstPersonMode = 0x314ef0;
		constexpr auto UpdateViewMode = 0x328120;
		constexpr auto get_idealViewMode = 0x32a250;
		constexpr auto get_shouldDrawBody = 0x32a5d0;
		constexpr auto OnViewModeChanged = 0x3208d0;
		constexpr auto ModifyCamera = 0x318f80;
		constexpr auto Menu_AssistPlayer = 0x318eb0;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x318e70;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x318be0;
		constexpr auto get_lookingAt = 0x32a580;
		constexpr auto get_lookingAtEntity = 0x32a510;
		constexpr auto get_lookingAtCollider = 0x32a4c0;
		constexpr auto get_lookingAtPoint = 0x32a560;
		constexpr auto set_lookingAtPoint = 0x32a860;
		constexpr auto GetExtrapolationTime = 0x311a70;
		constexpr auto GetLocalVelocityClient = 0x312510;
		constexpr auto ClientInit = 0x30a7b0;
		constexpr auto CreatePlayerModel = 0x30eef0;
		constexpr auto CreatePlayerCollision = 0x30ed00;
		constexpr auto CreatePlayerMovement = 0x30f400;
		constexpr auto InitLocalPlayer = 0x314f20;
		constexpr auto InitRemotePlayer = 0x315200;
		constexpr auto HasLocalControls = 0x3145a0;
		constexpr auto SetNetworkPosition = 0x3255b0;
		constexpr auto SetNetworkRotation = 0x325660;
		constexpr auto DoClientDestroy = 0x30f880;
		constexpr auto PostNetworkUpdate = 0x321530;
		constexpr auto OnFirstWakeUp = 0x3198e0;
		constexpr auto get_TimeAwake = 0x32a090;
		constexpr auto CL_ClothingChanged = 0x308240;
		constexpr auto ForceRebuild = 0x310fc0;
		constexpr auto RebuildWorldModel = 0x322e60;
		constexpr auto SetDefaultFootstepEffects = 0x324d30;
		constexpr auto OnSignal = 0x3203f0;
		constexpr auto FindBone = 0x310660;
		constexpr auto GetBones = 0x310fe0;
		constexpr auto ShouldLerp = 0x325820;
		constexpr auto get_VisiblePlayerList = 0x32a0f0;
		constexpr auto ClearVisibility = 0x30a300;
		constexpr auto RegisterForVisibility = 0x323630;
		constexpr auto UnregisterFromVisibility = 0x325ed0;
		constexpr auto FindByID_Clientside = 0x310760;
		constexpr auto Find_Clientside = 0x310930;
		constexpr auto GetRandomFloatBasedOnUserID = 0x313dc0;
		constexpr auto DisplayHealthInfo = 0x2f6010;
		constexpr auto ShouldDestroyWithGroup = 0x3257f0;
		constexpr auto SetInheritedVelocity = 0x325200;
		constexpr auto GetPerformanceReport = 0x313cb0;
		constexpr auto OnBecameRagdoll = 0x319330;
		constexpr auto OnVoiceData = 0x320d00;
		constexpr auto RecieveAchievement = 0x323200;
		constexpr auto CraftMode = 0x30ea90;
		constexpr auto StartDesigningAI = 0x325a70;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x3196a0;
		constexpr auto ClientOnEnable = 0x30b570;
		constexpr auto get_IsWearingDiveGoggles = 0x32a080;
		constexpr auto set_IsWearingDiveGoggles = 0x32a710;
		constexpr auto UpdateClothesIfNeeded = 0x326020;
		constexpr auto MakeVisible = 0x3188f0;
		constexpr auto ClientUpdate_Sleeping = 0x30c860;
		constexpr auto ClientUpdate = 0x30cbf0;
		constexpr auto RebuildClothingItems = 0x322c40;
		constexpr auto UpdateClothingItems = 0x3264c0;
		constexpr auto UpdateHolsterOffsets = 0x326bf0;
		constexpr auto PostLateClientCycle = 0x321470;
		constexpr auto IsLocalPlayer = 0x316b60;
		constexpr auto ClientUpdateLocalPlayer = 0x30b6d0;
		constexpr auto UpdateTopologyStats = 0x327fc0;
		constexpr auto ClientTick = 0x30b620;
		constexpr auto DoMovement = 0x30fb70;
		constexpr auto MountableOverrideViewAngles = 0x319070;
		constexpr auto BlockSprint = 0x3079c0;
		constexpr auto BlockJump = 0x307920;
		constexpr auto ClientInput = 0x30aca0;
		constexpr auto UseAction = 0x328480;
		constexpr auto GetInteractionEntity = 0x312000;
		constexpr auto QuickUse = 0x322820;
		constexpr auto LongUse = 0x318830;
		constexpr auto UseStop = 0x328750;
		constexpr auto UpdateLookingAt = 0x326d80;
		constexpr auto ResetLookingAt = 0x323a10;
		constexpr auto SetLookingAt = 0x325390;
		constexpr auto CheckLookingAtVisible = 0x309b00;
		constexpr auto FindVehicleParentFor = 0x3107f0;
		constexpr auto OnDied = 0x319810;
		constexpr auto OnRespawnInformation = 0x319c10;
		constexpr auto RequestRespawnUpdates = 0x3238c0;
		constexpr auto OnLand = 0x319a20;
		constexpr auto StartLoading = 0x325c00;
		constexpr auto FinishLoading = 0x310bc0;
		constexpr auto FinishedLoadingRoutine = 0x310c90;
		constexpr auto DirectionalDamage = 0x30f6e0;
		constexpr auto UnlockedBlueprint = 0x325e60;
		constexpr auto CheckForRespawnInfo = 0x309a90;
		constexpr auto UpdateRichPresenceState = 0x327d20;
		constexpr auto HandleCompanionPairingResult = 0x3140a0;
		constexpr auto UpdateWaterDrinkingPoint = 0x328160;
		constexpr auto GetWaterDrinkingPoint = 0x314080;
		constexpr auto Drink = 0x30fe00;
		constexpr auto Drink_ShowIf = 0x30fc30;
		constexpr auto SaltWater = 0x2f6e50;
		constexpr auto SaltWater_ShowIf = 0x323b90;
		constexpr auto Climb = 0x30e260;
		constexpr auto Climb_ShowIf = 0x30dfd0;
		constexpr auto HasPlayerFlag = 0x314610;
		constexpr auto get_IsReceivingSnapshot = 0x32a070;
		constexpr auto get_IsAdmin = 0x329fb0;
		constexpr auto get_IsDeveloper = 0x32a040;
		constexpr auto get_IsAiming = 0x329fc0;
		constexpr auto get_IsFlying = 0x32a050;
		constexpr auto get_IsConnected = 0x329fd0;
		constexpr auto get_InGesture = 0x329f00;
		constexpr auto get_CurrentGestureBlocksMovement = 0x329a50;
		constexpr auto get_CurrentGestureIsDance = 0x329a90;
		constexpr auto get_CurrentGestureIsFullBody = 0x329ad0;
		constexpr auto get_InGestureCancelCooldown = 0x329ed0;
		constexpr auto SetGestureMenuOpen = 0x324e00;
		constexpr auto RequestStartGesture = 0x323960;
		constexpr auto Client_StartGesture = 0x30dae0;
		constexpr auto ProcessDanceAction = 0x321c00;
		constexpr auto SayingHello = 0x323e00;
		constexpr auto ProcessGestureStart = 0x3220f0;
		constexpr auto EndGesture = 0x310120;
		constexpr auto EndLocalGesture = 0x310280;
		constexpr auto EndGestureShared = 0x30ffb0;
		constexpr auto HideHeldEntity = 0x314d80;
		constexpr auto CancelGesture = 0x3097d0;
		constexpr auto RemoteGestureCancel = 0x323720;
		constexpr auto CancelGestureInput = 0x309370;
		constexpr auto ClearGestureCooldown = 0x30a1b0;
		constexpr auto ConVarRequestStartGesture = 0x30e830;
		constexpr auto Client_RemoteCancelledGesture = 0x30da90;
		constexpr auto IsGestureBlocked = 0x316490;
		constexpr auto get_clientTeamLifetime = 0x32a160;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x308000;
		constexpr auto UpdateSteamGroup = 0x327d70;
		constexpr auto ClearSteamGroup = 0x30a1e0;
		constexpr auto CLIENT_ClearTeam = 0x307a60;
		constexpr auto CLIENT_PendingInvite = 0x307c00;
		constexpr auto InviteToTeam = 0x315270;
		constexpr auto Promote = 0x322690;
		constexpr auto Menu_Promote_Start = 0x2f6e50;
		constexpr auto Promote_ShowIf = 0x3222c0;
		constexpr auto LocalPlayerIsLeader = 0x318340;
		constexpr auto Invite_ShowIf = 0x3157c0;
		constexpr auto GetHeldEntity = 0x311b60;
		constexpr auto GetHeldItem = 0x311d90;
		constexpr auto GetHeldItemID = 0x311d40;
		constexpr auto HeldEntityViewAngles = 0x314b60;
		constexpr auto HeldEntityFrame = 0x3146f0;
		constexpr auto HeldEntityInput = 0x3148c0;
		constexpr auto HeldItemUse = 0x314c80;
		constexpr auto HeldEntityStart = 0x314a90;
		constexpr auto HeldEntityEnd = 0x314620;
		constexpr auto IsHostileItem = 0x316870;
		constexpr auto IsItemHoldRestricted = 0x3169d0;
		constexpr auto MapInfoOnEnable = 0x3189a0;
		constexpr auto Client_ReceiveMarkers = 0x30d750;
		constexpr auto Client_UpdateDeathMarker = 0x30dea0;
		constexpr auto Client_AddNewDeathMarker = 0x30d610;
		constexpr auto AddPointOfInterest = 0x306ba0;
		constexpr auto ClearAllPointsOfInterest = 0x30a060;
		constexpr auto ClearAllMapMarkers = 0x309f00;
		constexpr auto HasAttemptedMission = 0x314150;
		constexpr auto CanAcceptMission = 0x3085d0;
		constexpr auto IsMissionActive = 0x316c40;
		constexpr auto HasCompletedMission = 0x3142c0;
		constexpr auto HasFailedMission = 0x314430;
		constexpr auto SetActiveMission = 0x324d10;
		constexpr auto GetActiveMission = 0x310fd0;
		constexpr auto HasActiveMission = 0x314140;
		constexpr auto LoadMissions = 0x317840;
		constexpr auto OnModelState = 0x319b80;
		constexpr auto OnModelStateChanged = 0x319ae0;
		constexpr auto get_isMounted = 0x32a3f0;
		constexpr auto get_isMountingHidingWeapon = 0x32a410;
		constexpr auto GetMounted = 0x3137f0;
		constexpr auto GetMountedVehicle = 0x313760;
		constexpr auto MarkSwapSeat = 0x3189f0;
		constexpr auto SwapSeatCooldown = 0x325c80;
		constexpr auto ClientUpdateMounted = 0x30c4b0;
		constexpr auto IsSleeping = 0x316f40;
		constexpr auto IsSpectating = 0x316f50;
		constexpr auto IsRelaxed = 0x316e60;
		constexpr auto IsServerFalling = 0x316f30;
		constexpr auto GetBuildingPrivilege = 0x3113f0;
		constexpr auto CanBuild = 0x308f80;
		constexpr auto IsBuildingBlocked = 0x316210;
		constexpr auto IsBuildingAuthed = 0x315dd0;
		constexpr auto CanPlaceBuildingPrivilege = 0x309110;
		constexpr auto NewProjectileID = 0x319100;
		constexpr auto NewProjectileSeed = 0x319110;
		constexpr auto SendProjectileAttack = 0x324a60;
		constexpr auto SendProjectileRicochet = 0x324ab0;
		constexpr auto SendProjectileUpdate = 0x324b00;
		constexpr auto Load = 0x317de0;
		constexpr auto GetThreatLevel = 0x314060;
		constexpr auto EnsureUpdated = 0x3103d0;
		constexpr auto SetHostileLength = 0x325150;
		constexpr auto SetWeaponDrawnDuration = 0x325750;
		constexpr auto ModifyInputState = 0x2f6e50;
		constexpr auto ForcePositionToParentOffset = 0x310d00;
		constexpr auto UpdateClientTickRate = 0x325fc0;
		constexpr auto ForcePositionTo = 0x310e30;
		constexpr auto SendVoiceData = 0x324b50;
		constexpr auto SendClientTick = 0x3243a0;
		constexpr auto NotifyUnderwearChange = 0x319120;
		constexpr auto UpdatePlayerVisibilities = 0x327a20;
		constexpr auto TimeSinceSeen = 0x325cb0;
		constexpr auto SetNextVisThink = 0x325700;
		constexpr auto WantsVisUpdate = 0x329290;
		constexpr auto IsAimingAt = 0x315a00;
		constexpr auto UpdateCullingSpheres = 0x326920;
		constexpr auto VisUpdateUsingCulling = 0x3288d0;
		constexpr auto VisUpdateUsingRays = 0x3289e0;
		constexpr auto LogDebugCull = 0x3184f0;
		constexpr auto OnVisibilityChanged = 0x320a00;
		constexpr auto VisUpdate = 0x328e00;
		constexpr auto VisPlayerArmed = 0x328810;
		constexpr auto AnyPartVisible = 0x306d30;
		constexpr auto CalcVisUpdateRate = 0x308490;
		constexpr auto PointSeePoint = 0x3211a0;
		constexpr auto IsWounded = 0x317230;
		constexpr auto IsCrawling = 0x3162c0;
		constexpr auto IsIncapacitated = 0x3169c0;
		constexpr auto ToPlayer = 0x325cd0;
		constexpr auto get_Connection = 0x329a40;
		constexpr auto get_displayName = 0x32a1b0;
		constexpr auto set_displayName = 0x32a720;
		constexpr auto SanitizePlayerNameString = 0x323d60;
		constexpr auto IsGod = 0x3167a0;
		constexpr auto GetNetworkRotation = 0x313880;
		constexpr auto CanInteract = 0x3090b0;
		constexpr auto StartHealth = 0x325be0;
		constexpr auto StartMaxHealth = 0x320d30;
		constexpr auto MaxHealth = 0x318a30;
		constexpr auto MaxVelocity = 0x318ae0;
		constexpr auto GetInheritedProjectileVelocity = 0x311e80;
		constexpr auto GetInheritedThrowVelocity = 0x311f40;
		constexpr auto GetInheritedDropVelocity = 0x311dc0;
		constexpr auto PreInitShared = 0x3217a0;
		constexpr auto DestroyShared = 0x30f660;
		constexpr auto InSafeZone = 0x314f10;
		constexpr auto LateClientCycle = 0x317240;
		constexpr auto ClientCycle = 0x30a4c0;
		constexpr auto GetBounds = 0x311070;
		constexpr auto GetCenter = 0x3114a0;
		constexpr auto GetOffset = 0x313960;
		constexpr auto GetSize = 0x313ec0;
		constexpr auto GetHeight = 0x311b40;
		constexpr auto GetRadius = 0x313db0;
		constexpr auto GetJumpHeight = 0x312500;
		constexpr auto TriggerPoint = 0x325d50;
		constexpr auto MaxDeployDistance = 0x318a20;
		constexpr auto ClientUpdatePersistantData = 0x30c830;
		constexpr auto GetMinSpeed = 0x313730;
		constexpr auto GetMaxSpeed = 0x3126e0;
		constexpr auto GetSpeed = 0x313f20;
		constexpr auto OnAttacked = 0x319160;
		constexpr auto EnablePlayerCollider = 0x30ff50;
		constexpr auto DisablePlayerCollider = 0x30f820;
		constexpr auto RefreshColliderSize = 0x323320;
		constexpr auto SetPlayerRigidbodyState = 0x325730;
		constexpr auto AddPlayerRigidbody = 0x306a20;
		constexpr auto RemovePlayerRigidbody = 0x323790;
		constexpr auto IsEnsnared = 0x3163a0;
		constexpr auto IsAttacking = 0x315bd0;
		constexpr auto CanAttack = 0x308a60;
		constexpr auto OnLadder = 0x319990;
		constexpr auto IsSwimming = 0x3171e0;
		constexpr auto IsHeadUnderwater = 0x316820;
		constexpr auto IsOnGround = 0x316db0;
		constexpr auto IsRunning = 0x316e70;
		constexpr auto IsDucked = 0x3162e0;
		constexpr auto RecentlyTeleported = 0x323160;
		constexpr auto ShowToast = 0x325880;
		constexpr auto ChatMessage = 0x3098a0;
		constexpr auto ConsoleMessage = 0x30e9e0;
		constexpr auto PenetrationResistance = 0x320d30;
		constexpr auto ScaleDamage = 0x324110;
		constexpr auto UpdateMoveSpeedFromClothing = 0x327650;
		constexpr auto UpdateProtectionFromClothing = 0x327c00;
		constexpr auto Categorize = 0x309870;
		constexpr auto ToString = 0x325ce0;
		constexpr auto GetDebugStatus = 0x311730;
		constexpr auto GetItem = 0x312450;
		constexpr auto get_Traits = 0x32a0d0;
		constexpr auto WaterFactor = 0x3292b0;
		constexpr auto AirFactor = 0x306c80;
		constexpr auto GetOxygenTime = 0x3139b0;
		constexpr auto ShouldInheritNetworkGroup = 0x316f50;
		constexpr auto AnyPlayersVisibleToEntity = 0x307370;
		constexpr auto IsStandingOnEntity = 0x316f60;
		constexpr auto SetActiveTelephone = 0x324d20;
		constexpr auto get_HasActiveTelephone = 0x329b10;
		constexpr auto get_IsDesigningAI = 0x329fe0;
		constexpr auto ClearDesigningAIEntity = 0x30a190;
		constexpr auto ctor = 0x3298c0;
		constexpr auto cctor = 0x329780;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x300520;
		constexpr auto set_Owner = 0x3003d0;
		constexpr auto get_InheritedVelocity = 0x3004c0;
		constexpr auto set_InheritedVelocity = 0x3005c0;
		constexpr auto get_TargetMovement = 0x300570;
		constexpr auto set_TargetMovement = 0x3005e0;
		constexpr auto get_Running = 0x300560;
		constexpr auto set_Running = 0x3005d0;
		constexpr auto get_Ducking = 0x3004a0;
		constexpr auto set_Ducking = 0x3005a0;
		constexpr auto get_Crawling = 0x300490;
		constexpr auto set_Crawling = 0x300590;
		constexpr auto get_Grounded = 0x3004b0;
		constexpr auto set_Grounded = 0x3005b0;
		constexpr auto get_IsRunning = 0x300510;
		constexpr auto get_IsDucked = 0x3004f0;
		constexpr auto get_IsCrawling = 0x3004e0;
		constexpr auto get_IsGrounded = 0x300500;
		constexpr auto CurrentVelocity = 0x300100;
		constexpr auto CurrentMoveSpeed = 0x2fe570;
		constexpr auto GetCollider = 0x2fe1c0;
		constexpr auto Init = 0x3003d0;
		constexpr auto BlockJump = 0x2f6e50;
		constexpr auto BlockSprint = 0x2f6e50;
		constexpr auto get_RecentlyTeleported = 0x300530;
		constexpr auto ClientInput = 0x2f6e50;
		constexpr auto DoFixedUpdate = 0x2f6e50;
		constexpr auto FrameUpdate = 0x300280;
		constexpr auto TeleportTo = 0x3003e0;
		constexpr auto Push = 0x2f6e50;
		constexpr auto SetParent = 0x2f6e50;
		constexpr auto FixedUpdate = 0x300170;
		constexpr auto PlayerAttemptedMount = 0x2f6e50;
		constexpr auto PlayerCompletedMount = 0x2f6e50;
		constexpr auto ctor = 0x300480;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x278;
		constexpr auto damageScale = 0x27c;
		constexpr auto distanceScale = 0x280;
		constexpr auto projectileVelocityScale = 0x284;
		constexpr auto automatic = 0x288;
		constexpr auto usableByTurret = 0x289;
		constexpr auto turretDamageScale = 0x28c;
		constexpr auto attackFX = 0x290;
		constexpr auto silencedAttack = 0x298;
		constexpr auto muzzleBrakeAttack = 0x2a0;
		constexpr auto MuzzlePoint = 0x2a8;
		constexpr auto reloadTime = 0x2b0;
		constexpr auto canUnloadAmmo = 0x2b4;
		constexpr auto primaryMagazine = 0x2b8;
		constexpr auto fractionalReload = 0x2c0;
		constexpr auto reloadStartDuration = 0x2c4;
		constexpr auto reloadFractionDuration = 0x2c8;
		constexpr auto reloadEndDuration = 0x2cc;
		constexpr auto aimSway = 0x2d0;
		constexpr auto aimSwaySpeed = 0x2d4;
		constexpr auto recoil = 0x2d8;
		constexpr auto aimconeCurve = 0x2e0;
		constexpr auto aimCone = 0x2e8;
		constexpr auto hipAimCone = 0x2ec;
		constexpr auto aimconePenaltyPerShot = 0x2f0;
		constexpr auto aimConePenaltyMax = 0x2f4;
		constexpr auto aimconePenaltyRecoverTime = 0x2f8;
		constexpr auto aimconePenaltyRecoverDelay = 0x2fc;
		constexpr auto stancePenaltyScale = 0x300;
		constexpr auto hasADS = 0x304;
		constexpr auto noAimingWhileCycling = 0x305;
		constexpr auto manualCycle = 0x306;
		constexpr auto needsCycle = 0x307;
		constexpr auto isCycling = 0x308;
		constexpr auto aiming = 0x309;
		constexpr auto resetDuration = 0x30c;
		constexpr auto numShotsFired = 0x310;
		constexpr auto nextReloadTime = 0x314;
		constexpr auto startReloadTime = 0x318;
		constexpr auto stancePenalty = 0x31c;
		constexpr auto aimconePenalty = 0x320;
		constexpr auto isReloading = 0x324;
		constexpr auto swaySampleTime = 0x328;
		constexpr auto lastShotTime = 0x32c;
		constexpr auto reloadPressTime = 0x330;
		constexpr auto ammoTypePreReload = 0x338;
		constexpr auto fractionalReloadDesiredCount = 0x340;
		constexpr auto fractionalReloadNumAdded = 0x344;
		constexpr auto triggerReady = 0x348;
		constexpr auto nextHeightCheckTime = 0x34c;
		constexpr auto cachedUnderground = 0x350;
		constexpr auto createdProjectiles = 0x358;

		constexpr auto OnRpcMessage = 0x913b40;
		constexpr auto GetInheritedVelocity = 0x911220;
		constexpr auto GetDamageScale = 0x911200;
		constexpr auto GetDistanceScale = 0x911210;
		constexpr auto GetProjectileVelocityScale = 0x302fd0;
		constexpr auto StartReloadCooldown = 0x915150;
		constexpr auto ResetReloadCooldown = 0x9145d0;
		constexpr auto HasReloadCooldown = 0x912110;
		constexpr auto GetReloadCooldown = 0x911a10;
		constexpr auto GetReloadIdle = 0x911b70;
		constexpr auto OnDrawGizmos = 0x913380;
		constexpr auto GetRecoil = 0x911a00;
		constexpr auto get_isSemiAuto = 0x9154b0;
		constexpr auto GetAimCone = 0x910960;
		constexpr auto ScaleRepeatDelay = 0x9145e0;
		constexpr auto GetProjectileModifier = 0x9113c0;
		constexpr auto DidAttackClientside = 0x90f110;
		constexpr auto GetItemOptions = 0x911270;
		constexpr auto EditViewAngles = 0x90ff60;
		constexpr auto OnFrame = 0x913750;
		constexpr auto ShotFired = 0x914910;
		constexpr auto SimulateAimcone = 0x914970;
		constexpr auto CanAttack = 0x90ec40;
		constexpr auto CanAim = 0x90ec10;
		constexpr auto OnInput = 0x913760;
		constexpr auto ReadyToAim = 0x914520;
		constexpr auto ReadyToFire = 0x914570;
		constexpr auto AmmoTypeClicked = 0x90eaf0;
		constexpr auto AddAmmoOption = 0x90e940;
		constexpr auto GetReloadMenu = 0x911bf0;
		constexpr auto PredictAmmoType = 0x9142f0;
		constexpr auto HasMoreThanOneAmmoType = 0x911e60;
		constexpr auto OnDeploy = 0x913340;
		constexpr auto DoReload = 0x90f9e0;
		constexpr auto InsertAmmoFraction = 0x912140;
		constexpr auto CancelFractionalReloading = 0x90ec60;
		constexpr auto ClientFinishFractionalReload = 0x90ed00;
		constexpr auto ClientSingleReload = 0x90ee40;
		constexpr auto DoAttack = 0x90f120;
		constexpr auto BeginCycle = 0x90eb80;
		constexpr auto LaunchProjectile = 0x913150;
		constexpr auto DryFire = 0x90fea0;
		constexpr auto GetReloadDuration = 0x911a90;
		constexpr auto GetAvailableAmmo = 0x910ff0;
		constexpr auto IsSilenced = 0x9121a0;
		constexpr auto FiredUnderground = 0x9108d0;
		constexpr auto OnSignal = 0x913c30;
		constexpr auto LaunchProjectileClientside = 0x912380;
		constexpr auto CreateProjectile = 0x90ef80;
		constexpr auto UpdateAmmoDisplay = 0x9151a0;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x2f6010;
		constexpr auto Load = 0x9132a0;
		constexpr auto ctor = 0x915250;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto wasGrounded = 0x141;
		constexpr auto climbing = 0x142;
		constexpr auto wasClimbing = 0x143;
		constexpr auto sliding = 0x144;
		constexpr auto wasSliding = 0x145;
		constexpr auto swimming = 0x146;
		constexpr auto wasSwimming = 0x147;
		constexpr auto jumping = 0x148;
		constexpr auto wasJumping = 0x149;
		constexpr auto falling = 0x14a;
		constexpr auto wasFalling = 0x14b;
		constexpr auto flying = 0x14c;
		constexpr auto wasFlying = 0x14d;
		constexpr auto forcedDuckDelta = 0x150;

		constexpr auto Awake = 0xbb2ba0;
		constexpr auto GetCollider = 0x5f9750;
		constexpr auto OnDisable = 0xbb7b70;
		constexpr auto Init = 0xbb5340;
		constexpr auto OnCollisionEnter = 0xbb79b0;
		constexpr auto OnCollisionStay = 0xbb7a90;
		constexpr auto GroundCheck = 0xbb4b00;
		constexpr auto TeleportTo = 0xbb8220;
		constexpr auto UpdateCurrentLadder = 0xbb8590;
		constexpr auto ClientInput = 0xbb2e90;
		constexpr auto Movement_Water = 0xbb6d90;
		constexpr auto Movement_Mounted = 0xbb5ea0;
		constexpr auto Movement_Ladder = 0xbb5840;
		constexpr auto Movement_Noclip = 0xbb5fb0;
		constexpr auto Movement_Walking = 0xbb6540;
		constexpr auto GetHeldEntityMovementMultiplier = 0xbb4a50;
		constexpr auto HandleGrounded = 0xbb4dd0;
		constexpr auto HandleRunDuckCrawl = 0xbb4f50;
		constexpr auto GetForcedDuck = 0xbb4960;
		constexpr auto HandleJumping = 0xbb4e20;
		constexpr auto CanJump = 0xbb2d10;
		constexpr auto BlockJump = 0xbb2c80;
		constexpr auto BlockSprint = 0xbb2cc0;
		constexpr auto SetKinematic = 0xbb7ff0;
		constexpr auto ApplyForce = 0xbb2b60;
		constexpr auto CanSprint = 0xbb2e20;
		constexpr auto Jump = 0xbb5510;
		constexpr auto DoFixedUpdate = 0xbb3240;
		constexpr auto DoStepUp = 0xbb3a90;
		constexpr auto UpdateVelocity = 0xbb8a90;
		constexpr auto UpdateGravity = 0xbb8740;
		constexpr auto FrameUpdate = 0xbb44c0;
		constexpr auto TransformState = 0xbb8340;
		constexpr auto SetParent = 0xbb8020;
		constexpr auto FallVelocity = 0xbb4410;
		constexpr auto CurrentVelocity = 0xbb3200;
		constexpr auto CurrentMoveSpeed = 0xbb31b0;
		constexpr auto PlayerAttemptedMount = 0xbb7f90;
		constexpr auto PlayerCompletedMount = 0xbb7fc0;
		constexpr auto ctor = 0xbb95e0;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1a5f6a0;
		constexpr auto set_color = 0x1a5fc40;
		constexpr auto get_backgroundColor = 0x1a5f550;
		constexpr auto set_backgroundColor = 0x1a5fb50;
		constexpr auto get_contentColor = 0x1a5f760;
		constexpr auto set_contentColor = 0x1a5fcf0;
		constexpr auto get_changed = 0x1a5f630;
		constexpr auto set_changed = 0x1a5fbc0;
		constexpr auto get_enabled = 0x1a5f7e0;
		constexpr auto set_enabled = 0x1a5fd60;
		constexpr auto get_usePageScrollbars = 0x1a5fae0;
		constexpr auto get_blendMaterial = 0x1a5f5d0;
		constexpr auto get_blitMaterial = 0x1a5f600;
		constexpr auto get_roundedRectMaterial = 0x1a5f900;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1a5f930;
		constexpr auto GrabMouseControl = 0x1a5d6a0;
		constexpr auto HasMouseControl = 0x1a5e490;
		constexpr auto ReleaseMouseControl = 0x1a5eba0;
		constexpr auto SetNextControlName = 0x1a5ee30;
		constexpr auto InternalRepaintEditorWindow = 0x1a5e7b0;
		constexpr auto cctor = 0x1a5f290;
		constexpr auto get_scrollTroughSide = 0x1a5f960;
		constexpr auto set_scrollTroughSide = 0x1a5fec0;
		constexpr auto get_nextScrollStepTime = 0x1a5f8a0;
		constexpr auto set_nextScrollStepTime = 0x1a5fe00;
		constexpr auto set_skin = 0x1a5ff80;
		constexpr auto get_skin = 0x1a5fa80;
		constexpr auto DoSetSkin = 0x1a5bb20;
		constexpr auto get_matrix = 0x1a5f810;
		constexpr auto set_matrix = 0x1a5fda0;
		constexpr auto Label = 0x1a5e8d0;
		constexpr auto DrawTexture = 0x1a5ccb0;
		constexpr auto CalculateScaledTextureRects = 0x1a59e70;
		constexpr auto Box = 0x1a59260;
		constexpr auto Button = 0x1a59320;
		constexpr auto PasswordFieldGetStrToShow = 0x1a5ea70;
		constexpr auto DoTextField = 0x1a5bfa0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1a5ded0;
		constexpr auto HandleTextFieldEventForDesktop = 0x1a5d6e0;
		constexpr auto Toggle = 0x1a5f0d0;
		constexpr auto SelectionGrid = 0x1a5ecd0;
		constexpr auto CalcTotalHorizSpacing = 0x1a59c60;
		constexpr auto DoControl = 0x1a5b450;
		constexpr auto DoLabel = 0x1a5b890;
		constexpr auto DoToggle = 0x1a5c160;
		constexpr auto DoButton = 0x1a5b320;
		constexpr auto DoButtonGrid = 0x1a5a630;
		constexpr auto CalcMouseRects = 0x1a59740;
		constexpr auto HorizontalSlider = 0x1a5e5a0;
		constexpr auto Slider = 0x1a5ee70;
		constexpr auto BeginGroup = 0x1a58c40;
		constexpr auto EndGroup = 0x1a5d660;
		constexpr auto get_scrollViewStates = 0x1a5fa20;
		constexpr auto CallWindowDelegate = 0x1a5a1a0;
		constexpr auto get_color_Injected = 0x1a5f660;
		constexpr auto set_color_Injected = 0x1a5fc00;
		constexpr auto get_backgroundColor_Injected = 0x1a5f510;
		constexpr auto set_backgroundColor_Injected = 0x1a5fb10;
		constexpr auto get_contentColor_Injected = 0x1a5f720;
		constexpr auto set_contentColor_Injected = 0x1a5fcb0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1a567a0;
		constexpr auto set_rawName = 0x1a56b70;
		constexpr auto get_font = 0x1a56290;
		constexpr auto get_imagePosition = 0x1a562d0;
		constexpr auto set_alignment = 0x1a56a10;
		constexpr auto get_wordWrap = 0x1a56860;
		constexpr auto get_contentOffset = 0x1a561c0;
		constexpr auto set_contentOffset = 0x1a56aa0;
		constexpr auto get_fixedWidth = 0x1a56250;
		constexpr auto get_fixedHeight = 0x1a56210;
		constexpr auto get_stretchWidth = 0x1a56820;
		constexpr auto set_stretchWidth = 0x1a56c10;
		constexpr auto get_stretchHeight = 0x1a567e0;
		constexpr auto set_stretchHeight = 0x1a56bc0;
		constexpr auto set_fontSize = 0x1a56ae0;
		constexpr auto set_Internal_clipOffset = 0x1a569d0;
		constexpr auto Internal_Create = 0x1a555d0;
		constexpr auto Internal_Copy = 0x1a55580;
		constexpr auto Internal_Destroy = 0x1a55610;
		constexpr auto GetStyleStatePtr = 0x1a553b0;
		constexpr auto GetRectOffsetPtr = 0x1a55370;
		constexpr auto Internal_GetLineHeight = 0x1a55ca0;
		constexpr auto Internal_Draw = 0x1a55a20;
		constexpr auto Internal_Draw2 = 0x1a556c0;
		constexpr auto Internal_DrawCursor = 0x1a557a0;
		constexpr auto Internal_DrawWithTextSelection = 0x1a558c0;
		constexpr auto Internal_GetCursorPixelPosition = 0x1a55b50;
		constexpr auto Internal_GetCursorStringIndex = 0x1a55c40;
		constexpr auto Internal_GetSelectedRenderedText = 0x1a55d50;
		constexpr auto Internal_CalcSize = 0x1a542c0;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1a54260;
		constexpr auto Internal_CalcHeight = 0x1a54180;
		constexpr auto Internal_CalcMinMaxWidth = 0x1a55450;
		constexpr auto SetMouseTooltip = 0x1a55e50;
		constexpr auto Internal_GetCursorFlashOffset = 0x1a55ab0;
		constexpr auto SetDefaultFont = 0x1a55dc0;
		constexpr auto ctor = 0x1a560f0;
		constexpr auto Finalize = 0x1a55190;
		constexpr auto get_name = 0x1a56510;
		constexpr auto set_name = 0x1a56b20;
		constexpr auto get_normal = 0x1a56630;
		constexpr auto get_margin = 0x1a56460;
		constexpr auto get_padding = 0x1a566f0;
		constexpr auto get_lineHeight = 0x1a563b0;
		constexpr auto Draw = 0x1a54f60;
		constexpr auto DrawCursor = 0x1a54320;
		constexpr auto DrawWithTextSelection = 0x1a547e0;
		constexpr auto op_Implicit = 0x1a568a0;
		constexpr auto get_none = 0x1a56570;
		constexpr auto GetCursorPixelPosition = 0x1a55290;
		constexpr auto GetCursorStringIndex = 0x1a55310;
		constexpr auto CalcSize = 0x1a542c0;
		constexpr auto CalcSizeWithConstraints = 0x1a54260;
		constexpr auto CalcHeight = 0x1a54180;
		constexpr auto get_isHeightDependantOnWidth = 0x1a56310;
		constexpr auto CalcMinMaxWidth = 0x1a541e0;
		constexpr auto ToString = 0x1a55ed0;
		constexpr auto cctor = 0x1a55fe0;
		constexpr auto get_contentOffset_Injected = 0x1a56170;
		constexpr auto set_contentOffset_Injected = 0x1a56a50;
		constexpr auto set_Internal_clipOffset_Injected = 0x1a56980;
		constexpr auto Internal_Draw_Injected = 0x1a55990;
		constexpr auto Internal_Draw2_Injected = 0x1a55650;
		constexpr auto Internal_DrawCursor_Injected = 0x1a55730;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1a55810;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1a55ae0;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1a55bd0;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1a55ce0;
		constexpr auto Internal_CalcSize_Injected = 0x1a55520;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1a554b0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1a553f0;
		constexpr auto SetMouseTooltip_Injected = 0x1a55e00;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1a45ec0;
		constexpr auto get_mousePosition = 0x1a45df0;
		constexpr auto set_mousePosition = 0x1a461d0;
		constexpr auto get_delta = 0x1a45b70;
		constexpr auto get_pointerType = 0x1a45e40;
		constexpr auto get_button = 0x1a45960;
		constexpr auto get_modifiers = 0x1a45d60;
		constexpr auto set_modifiers = 0x1a46140;
		constexpr auto get_pressure = 0x1a45e80;
		constexpr auto get_clickCount = 0x1a459e0;
		constexpr auto get_character = 0x1a459a0;
		constexpr auto set_character = 0x1a45f80;
		constexpr auto get_keyCode = 0x1a45d20;
		constexpr auto set_keyCode = 0x1a46100;
		constexpr auto get_displayIndex = 0x1a45bc0;
		constexpr auto set_displayIndex = 0x1a460c0;
		constexpr auto get_type = 0x1a45f40;
		constexpr auto set_type = 0x1a46210;
		constexpr auto get_commandName = 0x1a45a20;
		constexpr auto set_commandName = 0x1a45fd0;
		constexpr auto Internal_Use = 0x1a43840;
		constexpr auto Internal_Create = 0x1a43640;
		constexpr auto Internal_Destroy = 0x1a43680;
		constexpr auto Internal_Copy = 0x1a43600;
		constexpr auto GetTypeForControl = 0x1a435c0;
		constexpr auto CopyFromPtr = 0x1a430a0;
		constexpr auto PopEvent = 0x1a44b10;
		constexpr auto Internal_SetNativeEvent = 0x1a43800;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1a436c0;
		constexpr auto ctor = 0x1a45890;
		constexpr auto Finalize = 0x1a433b0;
		constexpr auto CopyFrom = 0x1a430f0;
		constexpr auto get_shift = 0x1a45f00;
		constexpr auto get_control = 0x1a45aa0;
		constexpr auto get_alt = 0x1a45920;
		constexpr auto get_command = 0x1a45a60;
		constexpr auto get_current = 0x1a45ae0;
		constexpr auto set_current = 0x1a46020;
		constexpr auto get_isKey = 0x1a45c70;
		constexpr auto get_isMouse = 0x1a45cc0;
		constexpr auto get_isDirectManipulationDevice = 0x1a45c00;
		constexpr auto KeyboardEvent = 0x1a43880;
		constexpr auto GetHashCode = 0x1a43490;
		constexpr auto Equals = 0x1a43160;
		constexpr auto ToString = 0x1a44b50;
		constexpr auto Use = 0x1a45630;
		constexpr auto get_mousePosition_Injected = 0x1a45da0;
		constexpr auto set_mousePosition_Injected = 0x1a46180;
		constexpr auto get_delta_Injected = 0x1a45b20;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x2310670;
		constexpr auto GetKeyUpInt = 0x23106b0;
		constexpr auto GetKeyDownInt = 0x2310630;
		constexpr auto GetAxis = 0x23105b0;
		constexpr auto GetAxisRaw = 0x2310570;
		constexpr auto GetButtonDown = 0x23105f0;
		constexpr auto GetMouseButton = 0x2310770;
		constexpr auto GetMouseButtonDown = 0x23106f0;
		constexpr auto GetMouseButtonUp = 0x2310730;
		constexpr auto GetTouch = 0x23107f0;
		constexpr auto GetKey = 0x2310670;
		constexpr auto GetKeyUp = 0x23106b0;
		constexpr auto GetKeyDown = 0x2310630;
		constexpr auto get_anyKey = 0x2310880;
		constexpr auto get_anyKeyDown = 0x2310850;
		constexpr auto get_mousePosition = 0x23109d0;
		constexpr auto get_mouseScrollDelta = 0x2310a80;
		constexpr auto get_imeCompositionMode = 0x2310960;
		constexpr auto set_imeCompositionMode = 0x2310cd0;
		constexpr auto get_compositionString = 0x2310930;
		constexpr auto get_compositionCursorPos = 0x23108f0;
		constexpr auto set_compositionCursorPos = 0x2310c90;
		constexpr auto get_mousePresent = 0x2310a10;
		constexpr auto get_touchCount = 0x2310ac0;
		constexpr auto get_touchSupported = 0x2310af0;
		constexpr auto get_touches = 0x2310b20;
		constexpr auto GetTouch_Injected = 0x23107b0;
		constexpr auto get_mousePosition_Injected = 0x2310990;
		constexpr auto get_mouseScrollDelta_Injected = 0x2310a40;
		constexpr auto get_compositionCursorPos_Injected = 0x23108b0;
		constexpr auto set_compositionCursorPos_Injected = 0x2310c50;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x497460;
		constexpr auto Capsule = 0x4970b0;
		constexpr auto Sphere = 0x4987e0;
		constexpr auto SphereGizmo = 0x498530;
		constexpr auto Line = 0x497730;
		constexpr auto Arrow = 0x496280;
		constexpr auto ArrowPadded = 0x495b30;
		constexpr auto Bounds = 0x4964b0;
		constexpr auto Box = 0x496a00;
		constexpr auto Text = 0x498a80;
		constexpr auto ScreenText = 0x4983f0;
		constexpr auto Awake = 0x496440;
		constexpr auto OnPreRender = 0x498060;
		constexpr auto OnPostRender = 0x497d20;
		constexpr auto OnGUI = 0x497b50;
		constexpr auto CreateLineMaterial = 0x497300;
		constexpr auto get_skin = 0x498c40;
		constexpr auto ctor = 0x498bd0;
		constexpr auto cctor = 0x2f6e50;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x19a10c0;
		constexpr auto get_whiteTexture = 0x19a1140;
		constexpr auto get_blackTexture = 0x19a1090;
		constexpr auto Compress = 0x199fa60;
		constexpr auto Internal_CreateImpl = 0x19a0070;
		constexpr auto Internal_Create = 0x19a00d0;
		constexpr auto get_isReadable = 0x19a1100;
		constexpr auto ApplyImpl = 0x199f8b0;
		constexpr auto ResizeImpl = 0x19a05a0;
		constexpr auto SetPixelImpl = 0x19a08e0;
		constexpr auto GetPixelImpl = 0x199fcd0;
		constexpr auto GetPixelBilinearImpl = 0x199fb10;
		constexpr auto ResizeWithFormatImpl = 0x19a05f0;
		constexpr auto ReadPixelsImpl = 0x19a0390;
		constexpr auto SetPixelsImpl = 0x19a0ae0;
		constexpr auto LoadRawTextureDataImpl = 0x19a01a0;
		constexpr auto set_requestedMipmapLevel = 0x19a11b0;
		constexpr auto set_minimumMipmapLevel = 0x19a1170;
		constexpr auto ClearRequestedMipmapLevel = 0x199fa20;
		constexpr auto ClearMinimumMipmapLevel = 0x199f9e0;
		constexpr auto SetAllPixels32 = 0x19a07c0;
		constexpr auto SetBlockOfPixels32 = 0x19a0820;
		constexpr auto GetPixels = 0x199ff70;
		constexpr auto GetPixels32 = 0x199fe70;
		constexpr auto ctor = 0x19a0ef0;
		constexpr auto SetPixel = 0x19a0950;
		constexpr auto SetPixels = 0x19a0b40;
		constexpr auto GetPixel = 0x199fd50;
		constexpr auto GetPixelBilinear = 0x199fb90;
		constexpr auto LoadRawTextureData = 0x19a0200;
		constexpr auto Apply = 0x199f930;
		constexpr auto Resize = 0x19a0720;
		constexpr auto ReadPixels = 0x19a04d0;
		constexpr auto SetPixels32 = 0x19a07c0;
		constexpr auto SetPixelImpl_Injected = 0x19a0880;
		constexpr auto GetPixelImpl_Injected = 0x199fc70;
		constexpr auto GetPixelBilinearImpl_Injected = 0x199fab0;
		constexpr auto ReadPixelsImpl_Injected = 0x19a0320;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x1e895f0;
		constexpr auto HasFlag = 0x1e88ad0;
		constexpr auto SetFlag = 0x1e89580;
		constexpr auto get_ducked = 0x1e89640;
		constexpr auto set_ducked = 0x1e89730;
		constexpr auto get_jumped = 0x1e89660;
		constexpr auto set_jumped = 0x1e89770;
		constexpr auto get_onground = 0x1e896a0;
		constexpr auto set_onground = 0x1e897f0;
		constexpr auto get_sleeping = 0x1e896d0;
		constexpr auto set_sleeping = 0x1e89850;
		constexpr auto get_sprinting = 0x1e896e0;
		constexpr auto set_sprinting = 0x1e89870;
		constexpr auto get_onLadder = 0x1e89680;
		constexpr auto set_onLadder = 0x1e897b0;
		constexpr auto get_flying = 0x1e89650;
		constexpr auto set_flying = 0x1e89750;
		constexpr auto get_aiming = 0x1e89620;
		constexpr auto set_aiming = 0x1e896f0;
		constexpr auto get_prone = 0x1e896b0;
		constexpr auto set_prone = 0x1e89810;
		constexpr auto get_mounted = 0x1e89670;
		constexpr auto set_mounted = 0x1e89790;
		constexpr auto get_relaxed = 0x1e896c0;
		constexpr auto set_relaxed = 0x1e89830;
		constexpr auto get_crawling = 0x1e89630;
		constexpr auto set_crawling = 0x1e89710;
		constexpr auto get_onPhone = 0x1e89690;
		constexpr auto set_onPhone = 0x1e897d0;
		constexpr auto Equal = 0x1e88770;
		constexpr auto ResetToPool = 0x1e88bb0;
		constexpr auto Dispose = 0x1e886f0;
		constexpr auto EnterPool = 0xfa5990;
		constexpr auto LeavePool = 0xfa59c0;
		constexpr auto CopyTo = 0x1e873d0;
		constexpr auto Copy = 0x1e87420;
		constexpr auto Deserialize = 0x1e88470;
		constexpr auto DeserializeLengthDelimited = 0x1e874c0;
		constexpr auto DeserializeLength = 0x1e87b50;
		constexpr auto FromProto = 0x1e88880;
		constexpr auto WriteToStream = 0x1e895b0;
		constexpr auto WriteToStreamDelta = 0x1e895d0;
		constexpr auto ReadFromStream = 0x1e88ae0;
		constexpr auto SerializeDelta = 0x1e88c60;
		constexpr auto Serialize = 0x1e892c0;
		constexpr auto ToProtoBytes = 0x1e895a0;
		constexpr auto ToProto = 0x1e895b0;
		constexpr auto SerializeToBytes = 0x1e891b0;
		constexpr auto SerializeLengthDelimited = 0x1e89100;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x1ff1570;
		constexpr auto Dispose = 0x1ff1210;
		constexpr auto EnterPool = 0xfa5990;
		constexpr auto LeavePool = 0xfa59c0;
		constexpr auto CopyTo = 0x1e5e0c0;
		constexpr auto Copy = 0x1ff00e0;
		constexpr auto Deserialize = 0x1ff0810;
		constexpr auto DeserializeLengthDelimited = 0x1ff0180;
		constexpr auto DeserializeLength = 0x1ff0780;
		constexpr auto FromProto = 0x1ff1340;
		constexpr auto WriteToStream = 0x1ff1f80;
		constexpr auto WriteToStreamDelta = 0x1ff1fa0;
		constexpr auto ReadFromStream = 0x1ff1550;
		constexpr auto SerializeDelta = 0x1ff16d0;
		constexpr auto Serialize = 0x1ff1ce0;
		constexpr auto ToProtoBytes = 0x1ff1f70;
		constexpr auto ToProto = 0x1ff1f80;
		constexpr auto SerializeToBytes = 0x1ff1bd0;
		constexpr auto SerializeLengthDelimited = 0x1ff1b20;
		constexpr auto ctor = 0xecd540;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x7cdf80;
		constexpr auto get_isAuthoritative = 0x7d2ce0;
		constexpr auto get_isAlive = 0x7d2ca0;
		constexpr auto Retire = 0x7d1a90;
		constexpr auto Cleanup = 0x7ce4d0;
		constexpr auto AdjustVelocity = 0x7cdd10;
		constexpr auto InitializeVelocity = 0x7d0d20;
		constexpr auto OnDisable = 0x7d0f40;
		constexpr auto Update = 0x7d2900;
		constexpr auto SetEffectScale = 0x7d2060;
		constexpr auto DoFlybySound = 0x7ce6d0;
		constexpr auto CalculateEffectScale = 0x7ce430;
		constexpr auto UpdateVelocity = 0x7d2620;
		constexpr auto DoVelocityUpdate = 0x7d0530;
		constexpr auto DoMovement = 0x7cf3f0;
		constexpr auto DoWaterHit = 0x7d0910;
		constexpr auto DoRicochet = 0x7d0110;
		constexpr auto DoHit = 0x7cece0;
		constexpr auto AdditiveImpactEffect = 0x2f6e50;
		constexpr auto Reflect = 0x7d1210;
		constexpr auto Refract = 0x7d1560;
		constexpr auto RandomRotation = 0x7d1110;
		constexpr auto Launch = 0x7d0eb0;
		constexpr auto FleshMaterialID = 0x7d0c20;
		constexpr auto WaterMaterialID = 0x7d2a00;
		constexpr auto IsWaterMaterial = 0x7d0d80;
		constexpr auto ShouldStopProjectile = 0x7d2560;
		constexpr auto ctor = 0x7d2b00;
		constexpr auto cctor = 0x2f6e50;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0x5c7a50;
		constexpr auto get_worldStandingPosition = 0x5c7c40;
		constexpr auto get_worldCrouchedPosition = 0x5c7950;
		constexpr auto get_worldCrawlingPosition = 0x5c7850;
		constexpr auto get_position = 0x5c7310;
		constexpr auto get_BodyLeanOffset = 0x5c69d0;
		constexpr auto get_center = 0x5c6d30;
		constexpr auto get_offset = 0x5c7050;
		constexpr auto get_rotation = 0x5c77a0;
		constexpr auto set_rotation = 0x5c7da0;
		constexpr auto get_bodyRotation = 0x5c6c50;
		constexpr auto set_bodyRotation = 0x5c7d70;
		constexpr auto get_headAngles = 0x5c7030;
		constexpr auto set_headAngles = 0x5c7d80;
		constexpr auto get_rotationLook = 0x5c7790;
		constexpr auto set_rotationLook = 0x5c7d90;
		constexpr auto get_parentRotation = 0x5c7180;
		constexpr auto get_canUpdateViewAngles = 0x5c6c60;
		constexpr auto get_IsAltLookingLegsThreshold = 0x5c6c40;
		constexpr auto set_IsAltLookingLegsThreshold = 0x5c7d60;
		constexpr auto FrameUpdate = 0x5c5590;
		constexpr auto UpdateCamera = 0x5c6670;
		constexpr auto DoFirstPersonCamera = 0x5c3a00;
		constexpr auto DoInEyeCamera = 0x5c3cc0;
		constexpr auto DoThirdPersonCamera = 0x5c4010;
		constexpr auto ApplyCameraMoves = 0x5c33d0;
		constexpr auto MovementForward = 0x5c62f0;
		constexpr auto MovementRight = 0x5c64b0;
		constexpr auto BodyRay = 0x5c35b0;
		constexpr auto BodyForward = 0x5c3460;
		constexpr auto BodyRight = 0x5c3760;
		constexpr auto BodyUp = 0x5c38b0;
		constexpr auto HeadRay = 0x5c5eb0;
		constexpr auto HeadForward = 0x5c5dc0;
		constexpr auto HeadRight = 0x5c6110;
		constexpr auto HeadUp = 0x5c6200;
		constexpr auto GetLookRotation = 0x5c5c40;
		constexpr auto GetAimRotation = 0x5c5b80;
		constexpr auto ctor = 0x5c6910;
		constexpr auto cctor = 0x5c6810;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x6ae6f0;
		constexpr auto OnDisable = 0x6aea60;
		constexpr auto Holster = 0x6ae9f0;
		constexpr auto Clear = 0x6ae580;
		constexpr auto OnFrame = 0x6aead0;
		constexpr auto Play = 0x6aebb0;
		constexpr auto ResetTrigger = 0x6aece0;
		constexpr auto Trigger = 0x6aeff0;
		constexpr auto CrossFade = 0x6ae650;
		constexpr auto SetBool = 0x6aee10;
		constexpr auto SetFloat = 0x6aef50;
		constexpr auto set_ironSights = 0x6af110;
		constexpr auto ctor = 0x2f8b30;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x360;
		constexpr auto arrowBack = 0x364;
		constexpr auto swapArrows = 0x368;
		constexpr auto wasAiming = 0x370;

		constexpr auto OnRpcMessage = 0x461010;
		constexpr auto ClientInit = 0x460770;
		constexpr auto OnSignal = 0x461100;
		constexpr auto UpdatePullbackThink = 0x4614c0;
		constexpr auto CancelPullbackThink = 0x460700;
		constexpr auto PullbackThink = 0x461380;
		constexpr auto OnInput = 0x460c90;
		constexpr auto OnHolstered = 0x460c50;
		constexpr auto DoAttack = 0x4607e0;
		constexpr auto IsAiming = 0x460a80;
		constexpr auto OnViewmodelEvent = 0x461270;
		constexpr auto OnFrame = 0x460b20;
		constexpr auto PostNetworkUpdate = 0x4612e0;
		constexpr auto TryReload = 0x461450;
		constexpr auto ctor = 0x2f65c0;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f0;
		constexpr auto repeatDelay = 0x1f4;
		constexpr auto animationDelay = 0x1f8;
		constexpr auto effectiveRange = 0x1fc;
		constexpr auto npcDamageScale = 0x200;
		constexpr auto attackLengthMin = 0x204;
		constexpr auto attackLengthMax = 0x208;
		constexpr auto attackSpacing = 0x20c;
		constexpr auto aiAimSwayOffset = 0x210;
		constexpr auto aiAimCone = 0x214;
		constexpr auto aiOnlyInRange = 0x218;
		constexpr auto effectiveRangeType = 0x219;
		constexpr auto CloseRangeAddition = 0x21c;
		constexpr auto MediumRangeAddition = 0x220;
		constexpr auto LongRangeAddition = 0x224;
		constexpr auto CanUseAtMediumRange = 0x228;
		constexpr auto CanUseAtLongRange = 0x229;
		constexpr auto reloadSounds = 0x230;
		constexpr auto thirdPersonMeleeSound = 0x238;
		constexpr auto recoilCompDelayOverride = 0x240;
		constexpr auto wantsRecoilComp = 0x244;
		constexpr auto nextAttackTime = 0x248;
		constexpr auto lastTickTime = 0x24c;
		constexpr auto nextTickTime = 0x250;
		constexpr auto timeSinceDeploy = 0x254;
		constexpr auto lastRecoilCompTime = 0x258;
		constexpr auto startAimingDirection = 0x25c;
		constexpr auto wasDoingRecoilComp = 0x268;
		constexpr auto reductionSpeed = 0x26c;

		constexpr auto GetInheritedVelocity = 0x8b1390;
		constexpr auto get_NextAttackTime = 0x8b1870;
		constexpr auto GetAttackStats = 0x2f6e50;
		constexpr auto StartAttackCooldownRaw = 0x8b15b0;
		constexpr auto StartAttackCooldown = 0x8b15e0;
		constexpr auto ResetAttackCooldown = 0x8b15a0;
		constexpr auto HasAttackCooldown = 0x8b1400;
		constexpr auto GetAttackCooldown = 0x8b1290;
		constexpr auto GetAttackIdle = 0x8b1310;
		constexpr auto CalculateCooldownTime = 0x8b0840;
		constexpr auto IsFullyDeployed = 0x8b1430;
		constexpr auto ProcessInputTime = 0x8b14d0;
		constexpr auto OnInput = 0x8b1470;
		constexpr auto OnDeploy = 0x8b1450;
		constexpr auto RecoilCompReady = 0x8b1520;
		constexpr auto AddPunch = 0x8b0690;
		constexpr auto DoRecoilCompensation = 0x8b0980;
		constexpr auto ctor = 0x8b1780;
		constexpr auto cctor = 0x8b1710;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x70;
		constexpr auto positionLerp = 0x78;
		constexpr auto menuOptions = 0x80;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x88;
		constexpr auto links = 0x90;
		constexpr auto linkedToNeighbours = 0x98;
		constexpr auto _pendingFileRequests = 0xa0;
		constexpr auto updateParentingAction = 0xa8;
		constexpr auto addedToParentEntity = 0xb0;
		constexpr auto itemSkin = 0xb8;
		constexpr auto entitySlots = 0xc0;
		constexpr auto triggers = 0xc8;
		constexpr auto isVisible = 0xd0;
		constexpr auto isAnimatorVisible = 0xd1;
		constexpr auto isShadowVisible = 0xd2;
		constexpr auto localOccludee = 0xd8;
		constexpr auto Weightk__BackingField = 0xf8;
		constexpr auto bounds = 0xfc;
		constexpr auto impactEffect = 0x118;
		constexpr auto enableSaving = 0x120;
		constexpr auto syncPosition = 0x121;
		constexpr auto model = 0x128;
		constexpr auto flags = 0x130;
		constexpr auto parentBone = 0x134;
		constexpr auto skinID = 0x138;
		constexpr auto _components = 0x140;
		constexpr auto HasBrain = 0x148;
		constexpr auto _name = 0x150;
		constexpr auto OwnerIDk__BackingField = 0x158;

		constexpr auto OnRpcMessage = 0x7a81b0;
		constexpr auto GetEntityMenu = 0x7a39a0;
		constexpr auto GetMenuOptions = 0x2f6e50;
		constexpr auto get_HasMenuOptions = 0x2f6010;
		constexpr auto GetItemOptions = 0x7a4050;
		constexpr auto GetMovementModify = 0x7a4ab0;
		constexpr auto GetExtrapolationTime = 0x7a3ae0;
		constexpr auto GetInterpolationDelay = 0x7a3ea0;
		constexpr auto GetInterpolationInertia = 0x7a3f30;
		constexpr auto GetInterpolationSmoothing = 0x7a3fc0;
		constexpr auto GetAngularVelocityClient = 0x7a3440;
		constexpr auto GetLocalVelocityClient = 0x7a42a0;
		constexpr auto DrawInterpolationState = 0x7a1a10;
		constexpr auto LerpIdleDisable = 0x7a6b40;
		constexpr auto ClientInit = 0x7a0c20;
		constexpr auto ClientOnEnable = 0x7a0cd0;
		constexpr auto OnPositionalFromNetwork = 0x7a7e50;
		constexpr auto StartLerping = 0x7ab100;
		constexpr auto StopLerping = 0x7ab280;
		constexpr auto ShouldLerp = 0x7aad00;
		constexpr auto SetNetworkPosition = 0x7aa7f0;
		constexpr auto SetNetworkRotation = 0x7aa960;
		constexpr auto DoDestroyEffects = 0x7a19f0;
		constexpr auto SpawnGibs = 0x7aae00;
		constexpr auto DoNetworkDestroy = 0x305a40;
		constexpr auto PostNetworkUpdate = 0x7a9480;
		constexpr auto OnBecameRagdoll = 0x7a7b90;
		constexpr auto GetMenuInformation = 0x7a4420;
		constexpr auto HideMenuItems = 0x7a5800;
		constexpr auto GetMenuItems = 0x7a4710;
		constexpr auto OnUse = 0x7a9270;
		constexpr auto OnUseHeld = 0x7a90e0;
		constexpr auto OnUseStopped = 0x2f6e50;
		constexpr auto OnRendered = 0x2f6e50;
		constexpr auto DoClientDestroy = 0x7a16b0;
		constexpr auto GetEyeTransform = 0x7a3b70;
		constexpr auto NeedsCrosshair = 0x7a7a80;
		constexpr auto AlwaysShowCrosshair = 0x2f6010;
		constexpr auto ShouldDestroyWithGroup = 0x7aac50;
		constexpr auto DetachEffects = 0x7a12b0;
		constexpr auto OnVoiceData = 0x2f6e50;
		constexpr auto LookingAtTick = 0x2f6e50;
		constexpr auto get_RealisticMass = 0x320d30;
		constexpr auto OnCollision = 0x7a7c40;
		constexpr auto ReceiveCollisionMessages = 0x7a9570;
		constexpr auto DebugClient = 0x2f6e50;
		constexpr auto OnDebugStart = 0x7a7c90;
		constexpr auto DebugText = 0x7a11f0;
		constexpr auto HasFlag = 0x7a57c0;
		constexpr auto ParentHasFlag = 0x7a93e0;
		constexpr auto SetFlag = 0x7aa620;
		constexpr auto IsOn = 0x79f5d0;
		constexpr auto IsOpen = 0x7a5e30;
		constexpr auto IsOnFire = 0x7a5e20;
		constexpr auto IsLocked = 0x7a5b70;
		constexpr auto IsDebugging = 0x7a5980;
		constexpr auto IsDisabled = 0x7a5990;
		constexpr auto IsBroken = 0x7a5970;
		constexpr auto IsBusy = 0x7a5800;
		constexpr auto GetLogColor = 0x7a43d0;
		constexpr auto OnFlagsChanged = 0x7a7d50;
		constexpr auto IsOccupied = 0x7a5c70;
		constexpr auto FindLink = 0x7a2600;
		constexpr auto EntityLinkBroadcast = 0x7a21c0;
		constexpr auto ReceivedEntityLinkBroadcast = 0x7a9600;
		constexpr auto GetEntityLinks = 0x7a3960;
		constexpr auto LinkToEntity = 0x7a6b70;
		constexpr auto LinkToNeighbours = 0x7a6dd0;
		constexpr auto InitEntityLinks = 0x7a5810;
		constexpr auto FreeEntityLinks = 0x7a3360;
		constexpr auto RefreshEntityLinks = 0x7a9670;
		constexpr auto RequestFileFromServer = 0x7a9ef0;
		constexpr auto CL_ReceiveFileRequest = 0x7a0930;
		constexpr auto CompletePendingFileRequests = 0x7a0ec0;
		constexpr auto UpdateChildren = 0x7ab440;
		constexpr auto UpdateParenting = 0x7ac290;
		constexpr auto SetParentTransform = 0x7aaa30;
		constexpr auto UpdateDisableState = 0x7ab7f0;
		constexpr auto HasClientTransformOffset = 0x7a5620;
		constexpr auto RemoveClientTransformOffset = 0x7a9980;
		constexpr auto AddClientTransformOffset = 0x7a02f0;
		constexpr auto OnParentChangingClient = 0x2f6e50;
		constexpr auto GetBuildingPrivilege = 0x7a38f0;
		constexpr auto ServerRPC = 0x7aa2e0;
		constexpr auto ServerRPCStart = 0x7aa130;
		constexpr auto ServerRPCSend = 0x7aa0c0;
		constexpr auto CL_RPCMessage = 0x7a0640;
		constexpr auto SendSignalBroadcast = 0x7aa010;
		constexpr auto SignalFromServerEx = 0x7aad20;
		constexpr auto SignalFromServer = 0x7aadb0;
		constexpr auto OnSignal = 0x2f6e50;
		constexpr auto OnSkinChanged = 0x7a8db0;
		constexpr auto OnSkinRefreshStart = 0x7a90c0;
		constexpr auto OnSkinRefreshEnd = 0x7a90a0;
		constexpr auto PreProcess = 0x7a94a0;
		constexpr auto HasAnySlot = 0x7a5540;
		constexpr auto GetSlot = 0x7a50c0;
		constexpr auto GetSlotAnchorName = 0x7a4f80;
		constexpr auto GetSlotAnchor = 0x7a5010;
		constexpr auto HasSlot = 0x2f6010;
		constexpr auto get_Traits = 0x2fe1c0;
		constexpr auto HasTrait = 0x7a57d0;
		constexpr auto HasAnyTrait = 0x7a55f0;
		constexpr auto EnterTrigger = 0x7a2110;
		constexpr auto LeaveTrigger = 0x7a6aa0;
		constexpr auto RemoveFromTriggers = 0x7a99e0;
		constexpr auto ForceUpdateTriggersAction = 0x7a28e0;
		constexpr auto ForceUpdateTriggers = 0x7a2910;
		constexpr auto MakeVisible = 0x7a7a60;
		constexpr auto UpdateCullingSpheres = 0x7ab670;
		constexpr auto RegisterForCulling = 0x7a9750;
		constexpr auto OnVisibilityChanged = 0x2f6e50;
		constexpr auto UnregisterFromCulling = 0x7ab3c0;
		constexpr auto UpdateCullingBounds = 0x7ab5a0;
		constexpr auto CheckVisibility = 0x7a0c00;
		constexpr auto CalcEntityVisUpdateRate = 0x7a0ae0;
		constexpr auto DebugDrawCullingBounds = 0x7a1120;
		constexpr auto get_Weight = 0x7aca70;
		constexpr auto set_Weight = 0x7aca90;
		constexpr auto get_Components = 0x7ac9f0;
		constexpr auto ToPlayer = 0x2fe1c0;
		constexpr auto get_IsNpc = 0x2f6010;
		constexpr auto InitShared = 0x7a5950;
		constexpr auto DestroyShared = 0x79c4c0;
		constexpr auto ResetState = 0x7a9fa0;
		constexpr auto InheritedVelocityScale = 0x2fe570;
		constexpr auto GetInheritedProjectileVelocity = 0x7a3cf0;
		constexpr auto GetInheritedThrowVelocity = 0x7a3e70;
		constexpr auto GetInheritedDropVelocity = 0x7a3c10;
		constexpr auto GetParentVelocity = 0x7a4cc0;
		constexpr auto GetWorldVelocity = 0x7a5120;
		constexpr auto GetLocalVelocity = 0x7a4330;
		constexpr auto GetAngularVelocity = 0x7a34d0;
		constexpr auto WorldSpaceBounds = 0x7ac720;
		constexpr auto PivotPoint = 0x4ae2f0;
		constexpr auto CenterPoint = 0x7a0bc0;
		constexpr auto ClosestPoint = 0x7a0e20;
		constexpr auto TriggerPoint = 0x7a0bc0;
		constexpr auto Distance = 0x7a1570;
		constexpr auto SqrDistance = 0x7aafc0;
		constexpr auto Distance2D = 0x7a13e0;
		constexpr auto SqrDistance2D = 0x7aae30;
		constexpr auto IsVisible = 0x7a66f0;
		constexpr auto IsVisibleAndCanSee = 0x7a6120;
		constexpr auto IsOlderThan = 0x7a5d80;
		constexpr auto IsOutside = 0x7a5e40;
		constexpr auto WaterFactor = 0x7ac2a0;
		constexpr auto AirFactor = 0x7a0390;
		constexpr auto WaterTestFromVolumes = 0x7ac460;
		constexpr auto IsInWaterVolume = 0x7a5a30;
		constexpr auto BlocksWaterFor = 0x2f6010;
		constexpr auto Health = 0x2fe570;
		constexpr auto MaxHealth = 0x2fe570;
		constexpr auto MaxVelocity = 0x2fe570;
		constexpr auto BoundsPadding = 0x7a03d0;
		constexpr auto PenetrationResistance = 0x2fe7e0;
		constexpr auto GetImpactEffect = 0x7a3c00;
		constexpr auto OnAttacked = 0x2f6e50;
		constexpr auto GetItem = 0x2fe1c0;
		constexpr auto GiveItem = 0x7a5510;
		constexpr auto CanBeLooted = 0x2f8b40;
		constexpr auto GetEntity = 0x325cd0;
		constexpr auto ToString = 0x7ab2d0;
		constexpr auto Categorize = 0x7a0b90;
		constexpr auto Log = 0x7a75b0;
		constexpr auto SetModel = 0x7aa740;
		constexpr auto GetModel = 0x7a4aa0;
		constexpr auto GetBones = 0x7a3570;
		constexpr auto FindBone = 0x7a2490;
		constexpr auto FindClosestBone = 0x7a2540;
		constexpr auto get_OwnerID = 0x7aca60;
		constexpr auto set_OwnerID = 0x7aca80;
		constexpr auto ShouldBlockProjectiles = 0x2f8b40;
		constexpr auto ShouldInheritNetworkGroup = 0x2f8b40;
		constexpr auto SupportsChildDeployables = 0x2f8b40;
		constexpr auto BroadcastEntityMessage = 0x7a03e0;
		constexpr auto OnEntityMessage = 0x2f6e50;
		constexpr auto Load = 0x7a70b0;
		constexpr auto ctor = 0x7ac8e0;
		constexpr auto cctor = 0x7ac860;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x21978f0;
		constexpr auto get_deltaTime = 0x2197740;
		constexpr auto get_fixedTime = 0x21977a0;
		constexpr auto get_unscaledTime = 0x2197950;
		constexpr auto get_unscaledDeltaTime = 0x2197920;
		constexpr auto get_fixedDeltaTime = 0x2197770;
		constexpr auto set_fixedDeltaTime = 0x2197980;
		constexpr auto get_maximumDeltaTime = 0x2197800;
		constexpr auto set_maximumDeltaTime = 0x21979c0;
		constexpr auto get_smoothDeltaTime = 0x2197890;
		constexpr auto get_timeScale = 0x21978c0;
		constexpr auto set_timeScale = 0x2197a00;
		constexpr auto get_frameCount = 0x21977d0;
		constexpr auto get_renderedFrameCount = 0x2197860;
		constexpr auto get_realtimeSinceStartup = 0x2197830;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x22a6950;
		constexpr auto get_queriesHitBackfaces = 0x22a6990;
		constexpr auto set_queriesHitBackfaces = 0x22a6a00;
		constexpr auto get_defaultPhysicsScene = 0x22a68d0;
		constexpr auto IgnoreCollision = 0x22a3180;
		constexpr auto Raycast = 0x22a50f0;
		constexpr auto Linecast = 0x22a32c0;
		constexpr auto CapsuleCast = 0x22a29c0;
		constexpr auto SphereCast = 0x22a6360;
		constexpr auto BoxCast = 0x22a2550;
		constexpr auto Internal_RaycastAll = 0x22a3250;
		constexpr auto RaycastAll = 0x22a3e30;
		constexpr auto RaycastNonAlloc = 0x22a4550;
		constexpr auto Query_SphereCastAll = 0x22a3cd0;
		constexpr auto SphereCastAll = 0x22a5dd0;
		constexpr auto SyncTransforms = 0x22a6830;
		constexpr auto get_autoSyncTransforms = 0x22a6860;
		constexpr auto set_autoSyncTransforms = 0x22a69c0;
		constexpr auto OverlapSphereNonAlloc = 0x22a3ba0;
		constexpr auto CheckSphere_Internal = 0x22a2fa0;
		constexpr auto CheckSphere = 0x22a3010;
		constexpr auto SphereCastNonAlloc = 0x22a5f60;
		constexpr auto CheckCapsule_Internal = 0x22a2d00;
		constexpr auto CheckCapsule = 0x22a2d70;
		constexpr auto CheckBox_Internal = 0x22a2b40;
		constexpr auto CheckBox = 0x22a2bb0;
		constexpr auto OverlapBox_Internal = 0x22a3880;
		constexpr auto OverlapBox = 0x22a38f0;
		constexpr auto OverlapBoxNonAlloc = 0x22a3720;
		constexpr auto OverlapCapsuleNonAlloc = 0x22a3ab0;
		constexpr auto get_gravity_Injected = 0x22a6910;
		constexpr auto get_defaultPhysicsScene_Injected = 0x22a6890;
		constexpr auto Internal_RaycastAll_Injected = 0x22a31e0;
		constexpr auto Query_SphereCastAll_Injected = 0x22a3c60;
		constexpr auto CheckSphere_Internal_Injected = 0x22a2f30;
		constexpr auto CheckCapsule_Internal_Injected = 0x22a2c90;
		constexpr auto CheckBox_Internal_Injected = 0x22a2ad0;
		constexpr auto OverlapBox_Internal_Injected = 0x22a3810;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x8ace20;
		constexpr auto LookupNameLower = 0x8acb60;
		constexpr auto LookupNameUpper = 0x8accc0;
		constexpr auto GetName = 0x8acaa0;
		constexpr auto GetNameLower = 0x8ac920;
		constexpr auto GetNameUpper = 0x8ac9e0;
		constexpr auto cctor = 0x8acf60;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x18e4990;
		constexpr auto get_gameObject = 0x18e4950;
		constexpr auto GetComponent = 0x18e4530;
		constexpr auto GetComponentFastPath = 0x18e43c0;
		constexpr auto GetComponentInChildren = 0x18e4420;
		constexpr auto GetComponentsInChildren = 0x18e4610;
		constexpr auto GetComponentInParent = 0x18e44b0;
		constexpr auto GetComponents = 0x18e4670;
		constexpr auto GetComponentsForListInternal = 0x18e45b0;
		constexpr auto CompareTag = 0x18e4340;
		constexpr auto SendMessageUpwards = 0x18e4760;
		constexpr auto SendMessage = 0x18e48a0;
		constexpr auto BroadcastMessage = 0x18e42d0;
		constexpr auto ctor = 0x18df320;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x18d1d70;
		constexpr auto get_position = 0x219a790;
		constexpr auto set_position = 0x219b110;
		constexpr auto get_localPosition = 0x219a460;
		constexpr auto set_localPosition = 0x219ae80;
		constexpr auto get_eulerAngles = 0x219a160;
		constexpr auto set_eulerAngles = 0x219abd0;
		constexpr auto get_localEulerAngles = 0x219a380;
		constexpr auto set_localEulerAngles = 0x219ad80;
		constexpr auto get_right = 0x219a7e0;
		constexpr auto set_right = 0x219b160;
		constexpr auto get_up = 0x219a9d0;
		constexpr auto set_up = 0x219b350;
		constexpr auto get_forward = 0x219a1f0;
		constexpr auto set_forward = 0x219ac80;
		constexpr auto get_rotation = 0x219a980;
		constexpr auto set_rotation = 0x219b300;
		constexpr auto get_localRotation = 0x219a500;
		constexpr auto set_localRotation = 0x219af20;
		constexpr auto get_localScale = 0x219a5a0;
		constexpr auto set_localScale = 0x219afc0;
		constexpr auto get_parent = 0x2198b80;
		constexpr auto set_parent = 0x219b010;
		constexpr auto get_parentInternal = 0x2198b80;
		constexpr auto set_parentInternal = 0x2199b60;
		constexpr auto GetParent = 0x2198b80;
		constexpr auto SetParent = 0x2199b60;
		constexpr auto get_worldToLocalMatrix = 0x219ab70;
		constexpr auto get_localToWorldMatrix = 0x219a640;
		constexpr auto SetPositionAndRotation = 0x2199c10;
		constexpr auto Translate = 0x2199f50;
		constexpr auto Rotate = 0x2199570;
		constexpr auto RotateAroundInternal = 0x21992d0;
		constexpr auto RotateAround = 0x2199330;
		constexpr auto LookAt = 0x2199100;
		constexpr auto Internal_LookAt = 0x2198ca0;
		constexpr auto TransformDirection = 0x2199d10;
		constexpr auto InverseTransformDirection = 0x2198d60;
		constexpr auto TransformVector = 0x2199e90;
		constexpr auto InverseTransformVector = 0x2198ee0;
		constexpr auto TransformPoint = 0x2199dd0;
		constexpr auto InverseTransformPoint = 0x2198e20;
		constexpr auto get_root = 0x2198bc0;
		constexpr auto GetRoot = 0x2198bc0;
		constexpr auto get_childCount = 0x219a120;
		constexpr auto DetachChildren = 0x2198990;
		constexpr auto SetAsFirstSibling = 0x2199a80;
		constexpr auto SetAsLastSibling = 0x2199ac0;
		constexpr auto SetSiblingIndex = 0x2199c70;
		constexpr auto GetSiblingIndex = 0x2198c00;
		constexpr auto FindRelativeTransformWithPath = 0x21989d0;
		constexpr auto Find = 0x2198a30;
		constexpr auto get_lossyScale = 0x219a6f0;
		constexpr auto IsChildOf = 0x2198f40;
		constexpr auto get_hasChanged = 0x219a340;
		constexpr auto set_hasChanged = 0x219ad30;
		constexpr auto GetEnumerator = 0x2198b10;
		constexpr auto GetChild = 0x2198ad0;
		constexpr auto get_position_Injected = 0x219a740;
		constexpr auto set_position_Injected = 0x219b0c0;
		constexpr auto get_localPosition_Injected = 0x219a410;
		constexpr auto set_localPosition_Injected = 0x219ae30;
		constexpr auto get_rotation_Injected = 0x219a930;
		constexpr auto set_rotation_Injected = 0x219b2b0;
		constexpr auto get_localRotation_Injected = 0x219a4b0;
		constexpr auto set_localRotation_Injected = 0x219aed0;
		constexpr auto get_localScale_Injected = 0x219a550;
		constexpr auto set_localScale_Injected = 0x219af70;
		constexpr auto get_worldToLocalMatrix_Injected = 0x219ab20;
		constexpr auto get_localToWorldMatrix_Injected = 0x219a5f0;
		constexpr auto SetPositionAndRotation_Injected = 0x2199bb0;
		constexpr auto RotateAroundInternal_Injected = 0x2199270;
		constexpr auto Internal_LookAt_Injected = 0x2198c40;
		constexpr auto TransformDirection_Injected = 0x2199cb0;
		constexpr auto InverseTransformDirection_Injected = 0x2198d00;
		constexpr auto TransformVector_Injected = 0x2199e30;
		constexpr auto InverseTransformVector_Injected = 0x2198e80;
		constexpr auto TransformPoint_Injected = 0x2199d70;
		constexpr auto InverseTransformPoint_Injected = 0x2198dc0;
		constexpr auto get_lossyScale_Injected = 0x219a6a0;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0x47b1f0;
		constexpr auto Trace = 0x47bae0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x59cdd0;
		constexpr auto HitNormalWorld = 0x59ccb0;
		constexpr auto BuildAttackMessage = 0x59c420;
		constexpr auto Clear = 0x59cbd0;
		constexpr auto ctor = 0x305a40;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x18d8120;
		constexpr auto Inverse = 0x18d84a0;
		constexpr auto Slerp = 0x18d8f20;
		constexpr auto SlerpUnclamped = 0x18d8e00;
		constexpr auto Lerp = 0x18d86d0;
		constexpr auto LerpUnclamped = 0x18d85b0;
		constexpr auto Internal_FromEulerRad = 0x18d8210;
		constexpr auto Internal_ToEulerRad = 0x18d83c0;
		constexpr auto AngleAxis = 0x18d7b00;
		constexpr auto LookRotation = 0x18d8930;
		constexpr auto ctor = 0x113ae0;
		constexpr auto get_identity = 0x18d9440;
		constexpr auto op_Multiply = 0x18d9860;
		constexpr auto IsEqualUsingDot = 0x18d8530;
		constexpr auto op_Equality = 0x18d94b0;
		constexpr auto op_Inequality = 0x18d9570;
		constexpr auto Dot = 0x18d7cc0;
		constexpr auto SetLookRotation = 0x21b1e0;
		constexpr auto Angle = 0x18d7ba0;
		constexpr auto Internal_MakePositive = 0x18d82a0;
		constexpr auto get_eulerAngles = 0x21b300;
		constexpr auto Euler = 0x18d7df0;
		constexpr auto RotateTowards = 0x18d89d0;
		constexpr auto GetHashCode = 0x21b170;
		constexpr auto Equals = 0x21b020;
		constexpr auto ToString = 0x21b2f0;
		constexpr auto cctor = 0x18d9210;
		constexpr auto FromToRotation_Injected = 0x18d80c0;
		constexpr auto Inverse_Injected = 0x18d8450;
		constexpr auto Slerp_Injected = 0x18d8eb0;
		constexpr auto SlerpUnclamped_Injected = 0x18d8d90;
		constexpr auto Lerp_Injected = 0x18d8660;
		constexpr auto LerpUnclamped_Injected = 0x18d8540;
		constexpr auto Internal_FromEulerRad_Injected = 0x18d81c0;
		constexpr auto Internal_ToEulerRad_Injected = 0x18d8370;
		constexpr auto AngleAxis_Injected = 0x18d7aa0;
		constexpr auto LookRotation_Injected = 0x18d8780;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x476c80;
		constexpr auto CheckCapsule = 0x476490;
		constexpr auto CheckOBB = 0x476b50;
		constexpr auto CheckBounds = 0x476330;
		constexpr auto CheckInsideNonConvexMesh = 0x4767a0;
		constexpr auto CheckInsideAnyCollider = 0x476610;
		constexpr auto OverlapSphere = 0x477da0;
		constexpr auto OverlapCapsule = 0x477b20;
		constexpr auto OverlapOBB = 0x477c50;
		constexpr auto OverlapBounds = 0x477980;
		constexpr auto BufferToList = 0x476190;
		constexpr auto Trace = 0x478420;
		constexpr auto TraceAll = 0x478350;
		constexpr auto TraceAllUnordered = 0x478080;
		constexpr auto LineOfSight = 0x4772f0;
		constexpr auto LineOfSightInternal = 0x476e50;
		constexpr auto Verify = 0x478620;
		constexpr auto HandleTerrainCollision = 0x476d40;
		constexpr auto Sort = 0x477f80;
		constexpr auto cctor = 0x478930;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xbfe560;
		constexpr auto Test = 0xc008b0;
		constexpr auto GetWaterDepth = 0xbfee80;
		constexpr auto GetOverallWaterDepth = 0xbfed30;
		constexpr auto GetBuoyancyWaterInfo = 0xbfe740;
		constexpr auto GetWaterInfo = 0xbff210;
		constexpr auto GetWaterInfoFromVolumes = 0xbfefc0;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x16b2ab0;
		constexpr auto Asin = 0x16b2ac0;
		constexpr auto Atan = 0x16b2ae0;
		constexpr auto Atan2 = 0x16b2ad0;
		constexpr auto Ceiling = 0x16b2af0;
		constexpr auto Cos = 0x16b2b00;
		constexpr auto Cosh = 0x16b2b10;
		constexpr auto Floor = 0x16b2b40;
		constexpr auto InternalRound = 0x16b2b50;
		constexpr auto InternalTruncate = 0x16b2db0;
		constexpr auto Sin = 0x16b3840;
		constexpr auto Tan = 0x16b3880;
		constexpr auto Sinh = 0x16b3850;
		constexpr auto Round = 0x16b3520;
		constexpr auto SplitFractionDouble = 0x16b3860;
		constexpr auto Truncate = 0x16b3890;
		constexpr auto Sqrt = 0x16b3870;
		constexpr auto Log = 0x16b2f80;
		constexpr auto Log10 = 0x16b2e10;
		constexpr auto Exp = 0x16b2b30;
		constexpr auto Pow = 0x16b3390;
		constexpr auto Abs = 0x16b29e0;
		constexpr auto AbsHelper = 0x16b2880;
		constexpr auto Max = 0x16b3030;
		constexpr auto Min = 0x16b3380;
		constexpr auto Sign = 0x16b3800;
		constexpr auto DivRem = 0x16b2b20;
		constexpr auto cctor = 0x16b3940;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x18c8740;
		constexpr auto IsPowerOfTwo = 0x18c8b60;
		constexpr auto NextPowerOfTwo = 0x18c92d0;
		constexpr auto GammaToLinearSpace = 0x18c8a30;
		constexpr auto LinearToGammaSpace = 0x18c8dc0;
		constexpr auto FloatToHalf = 0x18c8930;
		constexpr auto HalfToFloat = 0x18c8a70;
		constexpr auto PerlinNoise = 0x18c9310;
		constexpr auto Sin = 0x18c9560;
		constexpr auto Cos = 0x18c8780;
		constexpr auto Tan = 0x18c9a40;
		constexpr auto Asin = 0x18c84e0;
		constexpr auto Acos = 0x18c83d0;
		constexpr auto Atan = 0x18c85c0;
		constexpr auto Atan2 = 0x18c8540;
		constexpr auto Sqrt = 0x18c99e0;
		constexpr auto Abs = 0x18c8370;
		constexpr auto Min = 0x18c8f70;
		constexpr auto Max = 0x18c8f40;
		constexpr auto Pow = 0x18c9360;
		constexpr auto Exp = 0x18c88d0;
		constexpr auto Log = 0x18c8ec0;
		constexpr auto Log10 = 0x18c8e00;
		constexpr auto Ceil = 0x18c8680;
		constexpr auto Floor = 0x18c89d0;
		constexpr auto Round = 0x18c94e0;
		constexpr auto CeilToInt = 0x18c8620;
		constexpr auto FloorToInt = 0x18c8970;
		constexpr auto RoundToInt = 0x18c9480;
		constexpr auto Sign = 0x18c9540;
		constexpr auto Clamp = 0x18c8700;
		constexpr auto Clamp01 = 0x18c86e0;
		constexpr auto Lerp = 0x18c8d20;
		constexpr auto LerpUnclamped = 0x18c8d00;
		constexpr auto LerpAngle = 0x18c8ba0;
		constexpr auto MoveTowards = 0x18c91e0;
		constexpr auto MoveTowardsAngle = 0x18c8f80;
		constexpr auto SmoothStep = 0x18c9920;
		constexpr auto Approximately = 0x18c8430;
		constexpr auto SmoothDamp = 0x18c9750;
		constexpr auto Repeat = 0x18c93e0;
		constexpr auto InverseLerp = 0x18c8ab0;
		constexpr auto DeltaAngle = 0x18c87e0;
		constexpr auto cctor = 0x18c9aa0;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x268;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c0;
		constexpr auto __menuOption_Menu_OpenDoor = 0x318;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x370;
		constexpr auto knockEffect = 0x3c8;
		constexpr auto canTakeLock = 0x3d0;
		constexpr auto hasHatch = 0x3d1;
		constexpr auto canTakeCloser = 0x3d2;
		constexpr auto canTakeKnocker = 0x3d3;
		constexpr auto canNpcOpen = 0x3d4;
		constexpr auto canHandOpen = 0x3d5;
		constexpr auto isSecurityDoor = 0x3d6;
		constexpr auto vehiclePhysBoxes = 0x3d8;
		constexpr auto checkPhysBoxesOnOpen = 0x3e0;
		constexpr auto vehicleCollisionSfx = 0x3e8;
		constexpr auto ClosedColliderRoots = 0x3f0;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xb60430;
		constexpr auto get_HasMenuOptions = 0xb61f10;
		constexpr auto OnRpcMessage = 0xb61860;
		constexpr auto ResetState = 0xb61cb0;
		constexpr auto HasSlot = 0xb61020;
		constexpr auto CanPickup = 0xb602c0;
		constexpr auto Menu_OpenDoor = 0xb61410;
		constexpr auto Menu_OpenDoor_Proxy = 0xb612f0;
		constexpr auto Menu_OpenDoorStart = 0xb612b0;
		constexpr auto Menu_OpenDoor_ShowIf = 0xb613d0;
		constexpr auto Menu_CloseDoor = 0xb611c0;
		constexpr auto Menu_CloseDoor_Proxy = 0xb610a0;
		constexpr auto Menu_CloseDoorStart = 0xb61060;
		constexpr auto Menu_CloseDoor_ShowIf = 0xb61180;
		constexpr auto Menu_KnockDoor = 0xb61270;
		constexpr auto Menu_KnockDoor_ShowIf = 0xb61200;
		constexpr auto Menu_ToggleHatch = 0xb61460;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xb61450;
		constexpr auto NeedsCrosshair = 0x2f8b40;
		constexpr auto OnDoorInterrupted = 0xb614a0;
		constexpr auto ReverseDoorAnimation = 0xb61cc0;
		constexpr auto BoundsPadding = 0x2f84c0;
		constexpr auto OnObjects = 0x2f6e50;
		constexpr auto OnEmpty = 0x2f6e50;
		constexpr auto OnFlagsChanged = 0xb61730;
		constexpr auto ctor = 0xb61ef0;
		constexpr auto cctor = 0xb61e80;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x18d2660;
		constexpr auto GetHashCode = 0x18d2650;
		constexpr auto Equals = 0x18d2270;
		constexpr auto op_Implicit = 0x18d3660;
		constexpr auto CompareBaseObjects = 0x18d1f80;
		constexpr auto IsNativeObjectAlive = 0x18d32b0;
		constexpr auto GetCachedPtr = 0x18c3e80;
		constexpr auto get_name = 0x18d3480;
		constexpr auto set_name = 0x18d38e0;
		constexpr auto Instantiate = 0x18d2e40;
		constexpr auto Destroy = 0x18d2170;
		constexpr auto DestroyImmediate = 0x18d2120;
		constexpr auto FindObjectsOfType = 0x18d2610;
		constexpr auto DontDestroyOnLoad = 0x18d2230;
		constexpr auto get_hideFlags = 0x18d3440;
		constexpr auto set_hideFlags = 0x18d38a0;
		constexpr auto CheckNullArgument = 0x18d1f10;
		constexpr auto FindObjectOfType = 0x18d2580;
		constexpr auto ToString = 0x18d3350;
		constexpr auto op_Equality = 0x18d34f0;
		constexpr auto op_Inequality = 0x18d3730;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x18d27d0;
		constexpr auto Internal_CloneSingle = 0x18d3180;
		constexpr auto Internal_CloneSingleWithParent = 0x18d3120;
		constexpr auto Internal_InstantiateSingle = 0x18d3220;
		constexpr auto GetName = 0x18d2790;
		constexpr auto SetName = 0x18d3300;
		constexpr auto FindObjectFromInstanceID = 0x18d2540;
		constexpr auto ctor = 0x305a40;
		constexpr auto cctor = 0x18d3400;
		constexpr auto Internal_InstantiateSingle_Injected = 0x18d31c0;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x278;
		constexpr auto canAiHearIt = 0x279;
		constexpr auto onlyThrowAsProjectile = 0x27a;
		constexpr auto damageProperties = 0x280;
		constexpr auto damageTypes = 0x288;
		constexpr auto maxDistance = 0x290;
		constexpr auto attackRadius = 0x294;
		constexpr auto isAutomatic = 0x298;
		constexpr auto blockSprintOnAttack = 0x299;
		constexpr auto strikeFX = 0x2a0;
		constexpr auto useStandardHitEffects = 0x2a8;
		constexpr auto aiStrikeDelay = 0x2ac;
		constexpr auto swingEffect = 0x2b0;
		constexpr auto materialStrikeFX = 0x2b8;
		constexpr auto heartStress = 0x2c0;
		constexpr auto gathering = 0x2c8;
		constexpr auto throwReady = 0x2d0;

		constexpr auto OnRpcMessage = 0x2f9f70;
		constexpr auto GetInheritedVelocity = 0x2f99c0;
		constexpr auto DoThrow = 0x2f9190;
		constexpr auto CreateProjectile = 0x2f8b50;
		constexpr auto GetAttackStats = 0x2f9930;
		constexpr auto DoAttackShared = 0x2f8d00;
		constexpr auto OnInput = 0x2f9b90;
		constexpr auto get_CanAttack = 0x2f8b40;
		constexpr auto get_CanThrow = 0x2f8b40;
		constexpr auto ClientAttack = 0x2f6e50;
		constexpr auto OnHolstered = 0x2f9b70;
		constexpr auto ProcessAttack = 0x2fa120;
		constexpr auto DoAttack = 0x2f8f50;
		constexpr auto DoViewmodelImpact = 0x2f98a0;
		constexpr auto OnViewmodelEvent = 0x2fa060;
		constexpr auto GetGatherInfoFromIndex = 0x2f9990;
		constexpr auto CanHit = 0x2f8b40;
		constexpr auto TotalDamage = 0x2fa3b0;
		constexpr auto CanBeUsedInWater = 0x2f8b40;
		constexpr auto GetStrikeEffectPath = 0x2f9a10;
		constexpr auto ctor = 0x2fa510;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0x976e60;
		constexpr auto GetSpreadScalar = 0x976ea0;
		constexpr auto GetIndexedSpreadScalar = 0x976dd0;
		constexpr auto GetAverageVelocity = 0x976dc0;
		constexpr auto GetMinVelocity = 0x976e50;
		constexpr auto GetMaxVelocity = 0x976e40;
		constexpr auto IsAmmo = 0x976f00;
		constexpr auto ServerProjectileHit = 0x976f10;
		constexpr auto ctor = 0x976fe0;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto shotsUntilMax = 0x54;

		constexpr auto ctor = 0x772b70;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0x96ddc0;
		constexpr auto InvalidateWorkshopSkinCache = 0x96db10;
		constexpr auto get_Blueprint = 0x96dc20;
		constexpr auto get_craftingStackable = 0x96dce0;
		constexpr auto HasFlag = 0x96d7f0;
		constexpr auto Initialize = 0x96d800;
		constexpr auto GetDisplayName = 0x96d6f0;
		constexpr auto GetDescriptionText = 0x96d600;
		constexpr auto FindIconSprite = 0x96d330;
		constexpr auto get_isWearable = 0x96dd60;
		constexpr auto get_ItemModWearable = 0x96dcd0;
		constexpr auto set_ItemModWearable = 0x96dfd0;
		constexpr auto get_isHoldable = 0x96dd40;
		constexpr auto set_isHoldable = 0x96dfe0;
		constexpr auto get_isUsable = 0x96dd50;
		constexpr auto set_isUsable = 0x96dff0;
		constexpr auto get_HasSkins = 0x96dc70;
		constexpr auto get_CraftableWithSkin = 0x96dc60;
		constexpr auto set_CraftableWithSkin = 0x96dfc0;
		constexpr auto ctor = 0x96dbb0;
		constexpr auto Initializeb__45_0 = 0x96db30;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto offsetAngles = 0x84;
		constexpr auto ignoredButtons = 0x90;
		constexpr auto hasKeyFocus = 0x94;

		constexpr auto OnDisable = 0xb9d5e0;
		constexpr auto FrameUpdate = 0xb9caa0;
		constexpr auto Flip = 0xb9c940;
		constexpr auto AdjustMouseMovement = 0xb9b0b0;
		constexpr auto UpdateViewAngles = 0xb9d7f0;
		constexpr auto ApplyViewAngles = 0xb9b2f0;
		constexpr auto SetViewVars = 0xb9d6d0;
		constexpr auto FinalizeRecoil = 0xb9c770;
		constexpr auto ResetOffsetAngles = 0xb9d660;
		constexpr auto ClientAngles = 0xb9c740;
		constexpr auto ClientLookVars = 0xb9c750;
		constexpr auto HeadAngles = 0xb9ccc0;
		constexpr auto HeadLookVars = 0xb9ccd0;
		constexpr auto ModifyInputState = 0xb9d550;
		constexpr auto IsButtonDownNative = 0xb9d140;
		constexpr auto BuildInputState = 0xb9be00;
		constexpr auto IsAiming = 0xb9cff0;
		constexpr auto UpdateButton = 0xb9d760;
		constexpr auto IgnoreCurrentButtons = 0xb9ccf0;
		constexpr auto get_hasOnlyPartialKeyInput = 0xb9dae0;
		constexpr auto get_hasNoKeyInput = 0xb9d950;
		constexpr auto UpdateKeyFocus = 0xb9d7d0;
		constexpr auto IgnoreCurrentKeys = 0xb9ce00;
		constexpr auto ctor = 0xb9d8e0;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto overrideMountedLookAt = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto LegParts = 0x50;
		constexpr auto fakeSpineBones = 0x58;
		constexpr auto extraLeanBack = 0x60;
		constexpr auto drawState = 0x64;
		constexpr auto speed = 0x2c;
		constexpr auto acceleration = 0x30;
		constexpr auto rotationYaw = 0x34;
		constexpr auto forward = 0x38;
		constexpr auto right = 0x3c;
		constexpr auto up = 0x40;
		constexpr auto ducked = 0x44;
		constexpr auto grounded = 0x48;
		constexpr auto crawling = 0x4c;
		constexpr auto waterlevel = 0x50;
		constexpr auto attack = 0x54;
		constexpr auto attack_alt = 0x58;
		constexpr auto deploy = 0x5c;
		constexpr auto reload = 0x60;
		constexpr auto throwWeapon = 0x64;
		constexpr auto holster = 0x68;
		constexpr auto aiming = 0x6c;
		constexpr auto onLadder = 0x70;
		constexpr auto posing = 0x74;
		constexpr auto poseType = 0x78;
		constexpr auto relaxGunPose = 0x7c;
		constexpr auto vehicle_aim_yaw = 0x80;
		constexpr auto vehicle_aim_speed = 0x84;
		constexpr auto onPhone = 0x88;
		constexpr auto leftFootIK = 0x8c;
		constexpr auto rightFootIK = 0x90;
		constexpr auto vehicleSteering = 0x94;
		constexpr auto collision = 0x68;
		constexpr auto censorshipCube = 0x70;
		constexpr auto censorshipCubeBreasts = 0x78;
		constexpr auto jawBone = 0x80;
		constexpr auto neckBone = 0x88;
		constexpr auto headBone = 0x90;
		constexpr auto eyeController = 0x98;
		constexpr auto blinkController = 0xa0;
		constexpr auto SpineBones = 0xa8;
		constexpr auto leftFootBone = 0xb0;
		constexpr auto rightFootBone = 0xb8;
		constexpr auto leftHandPropBone = 0xc0;
		constexpr auto rightHandPropBone = 0xc8;
		constexpr auto rightHandTarget = 0xd0;
		constexpr auto leftHandTargetPosition = 0xdc;
		constexpr auto leftHandTargetRotation = 0xe8;
		constexpr auto rightHandTargetPosition = 0xf8;
		constexpr auto rightHandTargetRotation = 0x104;
		constexpr auto steeringTargetDegrees = 0x114;
		constexpr auto rightFootTargetPosition = 0x118;
		constexpr auto rightFootTargetRotation = 0x124;
		constexpr auto leftFootTargetPosition = 0x134;
		constexpr auto leftFootTargetRotation = 0x140;
		constexpr auto CinematicAnimationController = 0x150;
		constexpr auto DefaultAvatar = 0x158;
		constexpr auto CinematicAvatar = 0x160;
		constexpr auto DefaultHoldType = 0x168;
		constexpr auto SleepGesture = 0x170;
		constexpr auto CrawlToIncapacitatedGesture = 0x178;
		constexpr auto StandToIncapacitatedGesture = 0x180;
		constexpr auto CurrentGesture = 0x188;
		constexpr auto MaleSkin = 0x190;
		constexpr auto FemaleSkin = 0x198;
		constexpr auto subsurfaceProfile = 0x1a0;
		constexpr auto voiceVolume = 0x1a8;
		constexpr auto skinColor = 0x1ac;
		constexpr auto skinNumber = 0x1b0;
		constexpr auto meshNumber = 0x1b4;
		constexpr auto hairNumber = 0x1b8;
		constexpr auto skinType = 0x1bc;
		constexpr auto movementSounds = 0x1c0;
		constexpr auto showSash = 0x1c8;
		constexpr auto tempPoseType = 0x1cc;
		constexpr auto underwearSkin = 0x1d0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1d8;
		constexpr auto AimAnglesk__BackingField = 0x1e0;
		constexpr auto LookAnglesk__BackingField = 0x1f0;
		constexpr auto modelState = 0x200;
		constexpr auto position = 0x208;
		constexpr auto velocity = 0x214;
		constexpr auto speedOverride = 0x220;
		constexpr auto newVelocity = 0x22c;
		constexpr auto rotation = 0x238;
		constexpr auto mountedRotation = 0x248;
		constexpr auto smoothLeftFootIK = 0x258;
		constexpr auto smoothRightFootIK = 0x264;
		constexpr auto drawShadowOnly = 0x270;
		constexpr auto isIncapacitated = 0x271;
		constexpr auto flinchLocation = 0x274;
		constexpr auto visible = 0x278;
		constexpr auto nameTag = 0x280;
		constexpr auto animatorNeedsWarmup = 0x288;
		constexpr auto isLocalPlayer = 0x289;
		constexpr auto aimSoundDef = 0x290;
		constexpr auto aimEndSoundDef = 0x298;
		constexpr auto InGesture = 0x2a0;
		constexpr auto CurrentGestureConfig = 0x2a8;
		constexpr auto InCinematic = 0x2b0;
		constexpr auto defaultAnimatorController = 0x2b8;
		constexpr auto _multiMesh = 0x2c0;
		constexpr auto _animator = 0x2c8;
		constexpr auto _lodGroup = 0x2d0;
		constexpr auto _currentGesture = 0x2d8;
		constexpr auto holdTypeLock = 0x2e0;
		constexpr auto wasMountedRightAim = 0x2e4;
		constexpr auto cachedMask = 0x2e8;
		constexpr auto cachedConstructionMask = 0x2ec;
		constexpr auto WorkshopHeldEntity = 0x2f0;
		constexpr auto wasCrawling = 0x2f8;
		constexpr auto mountedSpineLookWeight = 0x2fc;
		constexpr auto mountedAnimSpeed = 0x300;
		constexpr auto IsNpck__BackingField = 0x304;
		constexpr auto timeSinceLeftFootTest = 0x308;
		constexpr auto cachedLeftFootPos = 0x30c;
		constexpr auto cachedLeftFootNormal = 0x318;
		constexpr auto timeSinceRightFootTest = 0x324;
		constexpr auto cachedRightFootPos = 0x328;
		constexpr auto cachedRightFootNormal = 0x334;

		constexpr auto SetMountedLookAtOverride = 0xbaa4f0;
		constexpr auto SpineIk = 0xbaa650;
		constexpr auto ParentArmsToCamera = 0xba8b80;
		constexpr auto OnAnimatorIK = 0xba8130;
		constexpr auto HandIK = 0xba6af0;
		constexpr auto FootIK = 0xba3380;
		constexpr auto HeadIK = 0xba6f50;
		constexpr auto get_ShouldDoLegs = 0xbaf7e0;
		constexpr auto get_ShouldShowHands = 0xbaf860;
		constexpr auto ClearLegs = 0xba2030;
		constexpr auto RebuildLegs = 0xba9580;
		constexpr auto InitializeLegSpineBones = 0xba7650;
		constexpr auto UpdateLegsBeforeRender = 0xbabd70;
		constexpr auto AddLegRenderer = 0xba1700;
		constexpr auto SwapLegBone = 0xbaaf90;
		constexpr auto GetFlat = 0xba5f60;
		constexpr auto RebuildAll = 0xba9180;
		constexpr auto get_overrideSkinSeed = 0xbafbd0;
		constexpr auto set_overrideSkinSeed = 0xbafc10;
		constexpr auto get_IsFemale = 0xbaf790;
		constexpr auto get_SkinSet = 0xbaf9d0;
		constexpr auto get_AimAngles = 0xbaf640;
		constexpr auto set_AimAngles = 0xbafbe0;
		constexpr auto get_LookAngles = 0xbaf7d0;
		constexpr auto set_LookAngles = 0xbafc00;
		constexpr auto get_GestureAllowsSpineMovement = 0xbaf6f0;
		constexpr auto get_GestureAllowsRootMotion = 0xbaf650;
		constexpr auto get_IsFirstPerson = 0xbaf7a0;
		constexpr auto get_IsNpc = 0xbaf7c0;
		constexpr auto set_IsNpc = 0xbafbf0;
		constexpr auto get_multiMesh = 0xbafb30;
		constexpr auto get_animator = 0xbaf9f0;
		constexpr auto get_lodGroup = 0xbafa90;
		constexpr auto GetTargetVelocity = 0xba6990;
		constexpr auto Awake = 0xba1f90;
		constexpr auto OnEnable = 0xba8590;
		constexpr auto OnDisable = 0xba8260;
		constexpr auto UpdateMultiMesh = 0xbacd90;
		constexpr auto UpdateCensorship = 0xbab440;
		constexpr auto UpdateCollider = 0xbab8c0;
		constexpr auto UpdateModelState = 0xbacd40;
		constexpr auto UpdatePosition = 0xbad800;
		constexpr auto UpdateRotation = 0xbad920;
		constexpr auto UpdateLocalVelocity = 0xbacc70;
		constexpr auto UpdateVelocity = 0xbae270;
		constexpr auto UpdateParameters = 0xbacf70;
		constexpr auto UpdateFrom = 0xbabb30;
		constexpr auto UpdateGlobalShaderConstants = 0xbabbe0;
		constexpr auto LateCycle = 0xba7ab0;
		constexpr auto FrameUpdate = 0xba55b0;
		constexpr auto FrameUpdate_Default = 0xba4c10;
		constexpr auto FrameUpdate_Sleeping = 0xba5320;
		constexpr auto FrameUpdate_Incapacitated = 0xba4d80;
		constexpr auto FrameUpdate_OnLadder = 0xba5050;
		constexpr auto GetAim360 = 0xba5cf0;
		constexpr auto UpdateVehicleAim360 = 0xbaddb0;
		constexpr auto DoAimingSounds = 0xba2b20;
		constexpr auto SetAimSounds = 0xba9ed0;
		constexpr auto SetMountedLookAtWeight = 0xbaa500;
		constexpr auto SetMountedAnimationSpeed = 0xbaa4e0;
		constexpr auto UpdateLocalPlayerPosition = 0xbac920;
		constexpr auto Attack = 0xba1f10;
		constexpr auto AltAttack = 0xba1bd0;
		constexpr auto Deploy = 0xba2a70;
		constexpr auto Reload = 0xba9c50;
		constexpr auto Holster = 0xba75d0;
		constexpr auto Flinch = 0xba3320;
		constexpr auto Throw = 0xbab230;
		constexpr auto Gesture = 0xba5960;
		constexpr auto FadeInGestureUpperBodyLayer = 0xba2d80;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xba3070;
		constexpr auto FadeInGestureFullBodyLayer = 0xba2c60;
		constexpr auto FadeOutGestureFullBodyLayer = 0xba2ea0;
		constexpr auto AnimatorWarmup = 0xba1c80;
		constexpr auto AlwaysAnimate = 0xba1c50;
		constexpr auto SetHoldType = 0xbaa160;
		constexpr auto FadeOutGestureLayer = 0xba3000;
		constexpr auto SetGesture = 0xba9f10;
		constexpr auto FadeOutPlayerGestureLayers = 0xba31d0;
		constexpr auto StopGesture = 0xbaae90;
		constexpr auto PlayCinematic = 0xba8ff0;
		constexpr auto StopCinematic = 0xbaae30;
		constexpr auto SetSpeedOverride = 0xbaa630;
		constexpr auto GetReplacementUnderwear = 0xba68d0;
		constexpr auto RemoveUnderwearParts = 0xba9da0;
		constexpr auto Clear = 0xba2190;
		constexpr auto Rebuild = 0xba9810;
		constexpr auto AddPart = 0xba1a30;
		constexpr auto RemovePart = 0xba9cd0;
		constexpr auto HasPart = 0xba6e90;
		constexpr auto IsBarefoot = 0xba7a20;
		constexpr auto GetSkinColor = 0xba6910;
		constexpr auto SetSkinProperties = 0xbaa510;
		constexpr auto RefreshUnderwear = 0xba98c0;
		constexpr auto ForceModelSeed = 0xba49e0;
		constexpr auto FindBone = 0xba32f0;
		constexpr auto GetBones = 0xba5f30;
		constexpr auto GetFootPlacement = 0xba5fa0;
		constexpr auto ApplyVisibility = 0xba1ce0;
		constexpr auto ToggleUpdateOffscreen = 0xbab2d0;
		constexpr auto OnParentDestroying = 0xba8a80;
		constexpr auto WorkshopPreviewSetup = 0xbae680;
		constexpr auto ctor = 0xbaf490;
		constexpr auto cctor = 0xbaf020;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x1ff6280;
		constexpr auto Dispose = 0x1ff5e80;
		constexpr auto EnterPool = 0xfa5990;
		constexpr auto LeavePool = 0xfa59c0;
		constexpr auto CopyTo = 0x1ff4390;
		constexpr auto Copy = 0x1ff45d0;
		constexpr auto Deserialize = 0x1ff5380;
		constexpr auto DeserializeLengthDelimited = 0x1ff4650;
		constexpr auto DeserializeLength = 0x1ff4b00;
		constexpr auto FromProto = 0x1ff5f00;
		constexpr auto WriteToStream = 0x1ff7140;
		constexpr auto WriteToStreamDelta = 0x1ff7160;
		constexpr auto ReadFromStream = 0x1ff6260;
		constexpr auto SerializeDelta = 0x1ff6730;
		constexpr auto Serialize = 0x1ff6d50;
		constexpr auto ToProtoBytes = 0x1ff7130;
		constexpr auto ToProto = 0x1ff7140;
		constexpr auto SerializeToBytes = 0x1ff6c40;
		constexpr auto SerializeLengthDelimited = 0x1ff6b90;
		constexpr auto ctor = 0xecd540;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xb9e840;
		constexpr auto Initialize = 0xb9e4c0;
		constexpr auto DoDestroy = 0xb9dd70;
		constexpr auto ClientInit = 0xb9dcf0;
		constexpr auto UpdatedItemContainer = 0xb9ec90;
		constexpr auto FindItemUID = 0xb9e2e0;
		constexpr auto FindItemID = 0xb9e000;
		constexpr auto FindItemIDs = 0xb9e1f0;
		constexpr auto FindContainer = 0xb9de50;
		constexpr auto GetContainer = 0xb9e440;
		constexpr auto Load = 0xb9e6f0;
		constexpr auto GetAmount = 0xb9e3c0;
		constexpr auto AllItems = 0xb9dc20;
		constexpr auto AllItemsNoAlloc = 0xb9db50;
		constexpr auto FindAmmo = 0xb9de00;
		constexpr auto HasAmmo = 0xb9e460;
		constexpr auto ctor = 0xb9ee80;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0x96b7c0;
		constexpr auto SetFlag = 0x96c830;
		constexpr auto IsLocked = 0x96b990;
		constexpr auto PlayerItemInputBlocked = 0x96c480;
		constexpr auto get_HasLimitedAllowedItems = 0x96cb70;
		constexpr auto OnChanged = 0x96c3e0;
		constexpr auto ClientInitialize = 0x96ab60;
		constexpr auto FindItemByUID = 0x96af90;
		constexpr auto IsFull = 0x96b940;
		constexpr auto IsEmpty = 0x96b900;
		constexpr auto CanAccept = 0x96aa70;
		constexpr auto GetMaxTransferAmount = 0x96b470;
		constexpr auto SetOnlyAllowedItem = 0x96c850;
		constexpr auto SetOnlyAllowedItems = 0x96c910;
		constexpr auto Insert = 0x96b7d0;
		constexpr auto SlotTaken = 0x96caa0;
		constexpr auto GetSlot = 0x96b620;
		constexpr auto FindPosition = 0x96b270;
		constexpr auto Clear = 0x96aac0;
		constexpr auto Kill = 0x96b9a0;
		constexpr auto GetAmount = 0x96b300;
		constexpr auto FindItemByItemID = 0x96ae20;
		constexpr auto FindItemsByItemName = 0x96b120;
		constexpr auto FindItemsByItemID = 0x96b070;
		constexpr auto Save = 0x96c490;
		constexpr auto Load = 0x96bc30;
		constexpr auto GetOwnerPlayer = 0x56d990;
		constexpr auto FindAmmo = 0x96ac70;
		constexpr auto HasAmmo = 0x96b6f0;
		constexpr auto ContentsHash = 0x96aba0;
		constexpr auto FindContainer = 0x96ad30;
		constexpr auto CanAcceptItem = 0x96a600;
		constexpr auto ctor = 0x96cac0;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0x90ab10;
		constexpr auto FormatAmount = 0x909930;
		constexpr auto set_condition = 0x90bad0;
		constexpr auto get_condition = 0x64ad60;
		constexpr auto set_maxCondition = 0x90bb50;
		constexpr auto get_maxCondition = 0x64ad30;
		constexpr auto get_maxConditionNormalized = 0x90b880;
		constexpr auto get_conditionNormalized = 0x90b410;
		constexpr auto set_conditionNormalized = 0x90ba30;
		constexpr auto get_hasCondition = 0x90b510;
		constexpr auto get_isBroken = 0x90b750;
		constexpr auto get_despawnMultiplier = 0x90b450;
		constexpr auto get_blueprintTargetDef = 0x90b3e0;
		constexpr auto get_blueprintTarget = 0x90b400;
		constexpr auto set_blueprintTarget = 0x90b9a0;
		constexpr auto get_blueprintAmount = 0x90b3d0;
		constexpr auto set_blueprintAmount = 0x90b990;
		constexpr auto IsBlueprint = 0x909cd0;
		constexpr auto add_OnDirty = 0x90b310;
		constexpr auto remove_OnDirty = 0x90b8f0;
		constexpr auto HasFlag = 0x909cc0;
		constexpr auto SetFlag = 0x90a6e0;
		constexpr auto IsOn = 0x909f00;
		constexpr auto IsOnFire = 0x909ef0;
		constexpr auto IsCooking = 0x909eb0;
		constexpr auto IsLocked = 0x909ec0;
		constexpr auto get_parentItem = 0x90b8b0;
		constexpr auto MarkDirty = 0x90a240;
		constexpr auto OnChanged = 0x90a3a0;
		constexpr auto CollectedForCrafting = 0x2f6e50;
		constexpr auto ReturnedFromCancelledCraft = 0x2f6e50;
		constexpr auto IsChildContainer = 0x909d20;
		constexpr auto IsBusy = 0x909cf0;
		constexpr auto BusyFor = 0x909540;
		constexpr auto Remove = 0x90a4d0;
		constexpr auto DoRemove = 0x9097f0;
		constexpr auto SwitchOnOff = 0x90a7f0;
		constexpr auto LockUnlock = 0x90a210;
		constexpr auto get_temperature = 0x90b8d0;
		constexpr auto GetOwnerPlayer = 0x909b40;
		constexpr auto CanBeHeld = 0x909570;
		constexpr auto CanStack = 0x9095b0;
		constexpr auto IsValid = 0x909f10;
		constexpr auto SetWorldEntity = 0x90a700;
		constexpr auto OnMovedToWorld = 0x90a440;
		constexpr auto GetWorldEntity = 0x909bf0;
		constexpr auto GetHeldEntity = 0x909b20;
		constexpr auto BeltBarSelect = 0x9094a0;
		constexpr auto GetTotalUISlots = 0x909b60;
		constexpr auto GetFilledUISlots = 0x909a90;
		constexpr auto HasAmmo = 0x909c10;
		constexpr auto FindAmmo = 0x909840;
		constexpr auto ToString = 0x90a820;
		constexpr auto FindItem = 0x909910;
		constexpr auto MaxStackable = 0x90a310;
		constexpr auto get_iconSprite = 0x90b5b0;
		constexpr auto get_isLoadingIconSprite = 0x90b780;
		constexpr auto get_Traits = 0x90b3b0;
		constexpr auto Save = 0x90a530;
		constexpr auto Load = 0x909f20;
		constexpr auto ctor = 0x90b2f0;
		constexpr auto cctor = 0x90b220;
		constexpr auto get_iconSpriteb__93_0 = 0x90ab00;
		constexpr auto get_isLoadingIconSpriteb__95_0 = 0x90ab00;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x64a2c0;
		constexpr auto BuildBoneDictionary = 0x649a70;
		constexpr auto GetSkin = 0x5e0d40;
		constexpr auto FindBoneInternal = 0x649b20;
		constexpr auto FindBone = 0x649bb0;
		constexpr auto GetBones = 0x649dc0;
		constexpr auto FindClosestBone = 0x649c20;
		constexpr auto get_lodGroup = 0x64aab0;
		constexpr auto OnDisable = 0x64a190;
		constexpr auto SyncBones = 0x64a690;
		constexpr auto Trigger = 0x64aa00;
		constexpr auto GetTransform = 0x649df0;
		constexpr auto ApplyVisibility = 0x6498e0;
		constexpr auto PreProcess = 0x64a2d0;
		constexpr auto ctor = 0x2f8b30;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x278;
		constexpr auto healDurationOther = 0x27c;
		constexpr auto healDurationOtherWounded = 0x280;
		constexpr auto maxDistanceOther = 0x284;
		constexpr auto canUseOnOther = 0x288;
		constexpr auto canRevive = 0x289;
		constexpr auto useTarget = 0x290;
		constexpr auto resetTime = 0x298;

		constexpr auto OnRpcMessage = 0x6949f0;
		constexpr auto GetTarget = 0x694290;
		constexpr auto AnyPressed = 0x6941c0;
		constexpr auto OnInput = 0x694640;
		constexpr auto OnViewmodelEvent = 0x694dc0;
		constexpr auto Reset = 0x694f10;
		constexpr auto OnDeploy = 0x6945e0;
		constexpr auto OnHolstered = 0x694610;
		constexpr auto ctor = 0x694f30;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x160;
		constexpr auto punchAdded = 0x168;
		constexpr auto lastPunchTime = 0x174;
		constexpr auto worldModelAnimator = 0x178;
		constexpr auto thirdPersonDeploySound = 0x180;
		constexpr auto thirdPersonAimSound = 0x188;
		constexpr auto thirdPersonAimEndSound = 0x190;
		constexpr auto viewModel = 0x198;
		constexpr auto isDeployed = 0x1a0;
		constexpr auto nextExamineTime = 0x1a4;
		constexpr auto handBone = 0x1a8;
		constexpr auto HoldAnimationOverride = 0x1b0;
		constexpr auto toolType = 0x1b8;
		constexpr auto isBuildingTool = 0x1b9;
		constexpr auto hostileScore = 0x1bc;
		constexpr auto holsterInfo = 0x1c0;
		constexpr auto HeldCameraMode = 0x1c8;
		constexpr auto FirstPersonArmOffset = 0x1cc;
		constexpr auto FirstPersonArmRotation = 0x1d8;
		constexpr auto FirstPersonRotationStrength = 0x1e4;
		constexpr auto ownerItemUID = 0x1e8;

		constexpr auto OnRpcMessage = 0x597940;
		constexpr auto AddPunch = 0x596cb0;
		constexpr auto CL_Punch = 0x596d80;
		constexpr auto DoRecoilCompensation = 0x2f6e50;
		constexpr auto SimPunches = 0x597fe0;
		constexpr auto ClientInit = 0x596e30;
		constexpr auto GetFovOverride = 0x597060;
		constexpr auto DoNetworkDestroy = 0x596f00;
		constexpr auto PostLateClientCycle = 0x2f6e50;
		constexpr auto PostNetworkUpdate = 0x597df0;
		constexpr auto UpdateHolsteredOffset = 0x5984c0;
		constexpr auto EditViewAngles = 0x2f6e50;
		constexpr auto ClampPitch = 0x2f6e50;
		constexpr auto OnFrame = 0x5977b0;
		constexpr auto OnInput = 0x2f6e50;
		constexpr auto Examine = 0x596f40;
		constexpr auto OnDeploy = 0x597590;
		constexpr auto OnDeployed = 0x5977a0;
		constexpr auto OnHolster = 0x5977d0;
		constexpr auto OnHolstered = 0x597930;
		constexpr auto OnViewmodelEvent = 0x2f6e50;
		constexpr auto OnReliableEvent = 0x2f6e50;
		constexpr auto ModifyCamera = 0x2f6e50;
		constexpr auto ShouldDestroyImmediately = 0x2f8b40;
		constexpr auto UpdatePlayerModel = 0x598cc0;
		constexpr auto ProcessPlayerModel = 0x2f6e50;
		constexpr auto GetHoldAnimations = 0x597250;
		constexpr auto GetMovementMultiplier = 0x2fe7e0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x2f6e50;
		constexpr auto HeldEntityBlocksMovement = 0x2f6010;
		constexpr auto get_hostile = 0x598e70;
		constexpr auto LightsOn = 0x2fcee0;
		constexpr auto IsDeployed = 0x597520;
		constexpr auto GetOwnerPlayer = 0x597460;
		constexpr auto GetOwnerConnection = 0x597270;
		constexpr auto CanBeUsedInWater = 0x2f6010;
		constexpr auto BlocksGestures = 0x2f6010;
		constexpr auto GetOwnerItem = 0x597380;
		constexpr auto GetItem = 0x597260;
		constexpr auto GetOwnerItemDefinition = 0x597300;
		constexpr auto IsInstrument = 0x2f6010;
		constexpr auto Load = 0x597530;
		constexpr auto ctor = 0x598d80;
		constexpr auto cctor = 0x598d40;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x18c3e80;
		constexpr auto set_text = 0x86e290;
		constexpr auto set_image = 0x4bceb0;
		constexpr auto get_tooltip = 0x1a47150;
		constexpr auto set_tooltip = 0x3003d0;
		constexpr auto ctor = 0x1a470c0;
		constexpr auto Temp = 0x1a469a0;
		constexpr auto ClearStaticCache = 0x1a46840;
		constexpr auto cctor = 0x1a46c70;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x160;
		constexpr auto skeletonProperties = 0x1b8;
		constexpr auto baseProtection = 0x1c0;
		constexpr auto startHealth = 0x1c8;
		constexpr auto pickup = 0x1d0;
		constexpr auto repair = 0x1f0;
		constexpr auto ShowHealthInfo = 0x218;
		constexpr auto lifestate = 0x21c;
		constexpr auto sendsHitNotification = 0x220;
		constexpr auto sendsMeleeHitNotification = 0x221;
		constexpr auto markAttackerHostile = 0x222;
		constexpr auto _health = 0x224;
		constexpr auto _maxHealth = 0x228;
		constexpr auto faction = 0x22c;
		constexpr auto deathTime = 0x230;
		constexpr auto lastNotifyFrame = 0x234;

		constexpr auto GetMenuOptions = 0x79c970;
		constexpr auto get_HasMenuOptions = 0x79d9c0;
		constexpr auto OnRpcMessage = 0x79d080;
		constexpr auto HitNotify = 0x79ccd0;
		constexpr auto ClientInit = 0x79c3e0;
		constexpr auto DisplayHealthInfo = 0x79c4e0;
		constexpr auto GetEyeTransform = 0x79c850;
		constexpr auto OnLifeStateChanged = 0x79d050;
		constexpr auto GetPickupCount = 0x79ccb0;
		constexpr auto CanPickup = 0x79c340;
		constexpr auto OnPickedUp = 0x2f6e50;
		constexpr auto OnPickedUpPreItemMove = 0x2f6e50;
		constexpr auto Menu_Pickup = 0x79cf20;
		constexpr auto Menu_Pickup_TimeStart = 0x79ced0;
		constexpr auto Menu_Pickup_If = 0x79ceb0;
		constexpr auto BuildCost = 0x79c270;
		constexpr auto IsDead = 0x79cdf0;
		constexpr auto IsAlive = 0x79cde0;
		constexpr auto GetFaction = 0x79c960;
		constexpr auto IsFriendly = 0x2f6010;
		constexpr auto get_SecondsSinceDeath = 0x79da80;
		constexpr auto get_healthFraction = 0x79daa0;
		constexpr auto ResetState = 0x79d640;
		constexpr auto DestroyShared = 0x79c4c0;
		constexpr auto GetThreatLevel = 0x2fe570;
		constexpr auto PenetrationResistance = 0x79d5b0;
		constexpr auto ScaleDamage = 0x79d740;
		constexpr auto SkeletonLookup = 0x79d880;
		constexpr auto Load = 0x79ce00;
		constexpr auto get_health = 0x79ccc0;
		constexpr auto set_health = 0x79daf0;
		constexpr auto Health = 0x79ccc0;
		constexpr auto MaxHealth = 0x79cea0;
		constexpr auto StartHealth = 0x3a9700;
		constexpr auto StartMaxHealth = 0x79d930;
		constexpr auto SetMaxHealth = 0x79d7f0;
		constexpr auto DoHitNotify = 0x79c4f0;
		constexpr auto OnAttacked = 0x79cf60;
		constexpr auto ctor = 0x79d950;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x8fbc90;
		constexpr auto WasDown = 0x8fbd60;
		constexpr auto WasJustPressed = 0x8fbd80;
		constexpr auto WasJustReleased = 0x8fbdc0;
		constexpr auto SwallowButton = 0x8fbd50;
		constexpr auto AimAngle = 0x8fbad0;
		constexpr auto MouseDelta = 0x8fbcc0;
		constexpr auto Flip = 0x8fbbc0;
		constexpr auto Clear = 0x8fbb90;
		constexpr auto ctor = 0x8fbe00;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x1e86ac0;
		constexpr auto Dispose = 0x1e867c0;
		constexpr auto EnterPool = 0xfa5990;
		constexpr auto LeavePool = 0xfa59c0;
		constexpr auto CopyTo = 0x1e85820;
		constexpr auto Copy = 0x1e85860;
		constexpr auto Deserialize = 0x1e85ef0;
		constexpr auto DeserializeLengthDelimited = 0x1e85b80;
		constexpr auto DeserializeLength = 0x1e85c00;
		constexpr auto FromProto = 0x1e86840;
		constexpr auto WriteToStream = 0x1e87390;
		constexpr auto WriteToStreamDelta = 0x1e873b0;
		constexpr auto ReadFromStream = 0x1e86a00;
		constexpr auto SerializeDelta = 0x1e86b60;
		constexpr auto Serialize = 0x1e87120;
		constexpr auto ToProtoBytes = 0x1e87380;
		constexpr auto ToProto = 0x1e87390;
		constexpr auto SerializeToBytes = 0x1e87010;
		constexpr auto SerializeLengthDelimited = 0x1e86f60;
		constexpr auto ctor = 0xecd540;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x238;
		constexpr auto _mounted = 0x290;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto modifiesPlayerCollider = 0x2da;
		constexpr auto customPlayerCollider = 0x2dc;
		constexpr auto mountSoundDef = 0x2f0;
		constexpr auto swapSoundDef = 0x2f8;
		constexpr auto dismountSoundDef = 0x300;
		constexpr auto mountTimeStatType = 0x308;
		constexpr auto allowedGestures = 0x30c;
		constexpr auto canDrinkWhileMounted = 0x310;
		constexpr auto MountedCameraMode = 0x314;
		constexpr auto isMobile = 0x318;
		constexpr auto SideLeanAmount = 0x31c;

		constexpr auto GetMenuOptions = 0x2fe260;
		constexpr auto get_HasMenuOptions = 0x300030;
		constexpr auto OnRpcMessage = 0x2fedc0;
		constexpr auto CanHoldItems = 0x2fd9f0;
		constexpr auto GetMountedCameraMode = 0x2fe5d0;
		constexpr auto DirectlyMountable = 0x2f8b40;
		constexpr auto GetEyeOverride = 0x2fe1d0;
		constexpr auto GetMountedBodyAngles = 0x2fe580;
		constexpr auto ModifiesThirdPersonCamera = 0x2f6010;
		constexpr auto GetPitchClamp = 0x2fe7c0;
		constexpr auto GetYawClamp = 0x2fe7f0;
		constexpr auto EyePositionForPlayer = 0x2fde50;
		constexpr auto EyeCenterForPlayer = 0x2fdd50;
		constexpr auto WaterFactorForPlayer = 0x2ffee0;
		constexpr auto MaxVelocity = 0x2fe880;
		constexpr auto GetMounted = 0x2fe7b0;
		constexpr auto OnClientInput = 0x2f6e50;
		constexpr auto ForceUpdatePlayerModel = 0x2f6010;
		constexpr auto UpdatePlayerModel = 0x2ff840;
		constexpr auto ProcessPlayerModel = 0x2f6e50;
		constexpr auto SuppressHandsAnimationLayer = 0x2f6010;
		constexpr auto GetAnimationOverride = 0x2fe1c0;
		constexpr auto GetSpineLookAtWeight = 0x2fe7e0;
		constexpr auto GetMountedAnimationSpeed = 0x2fe570;
		constexpr auto ModifyThirdPersonEyeOffset = 0x2fea40;
		constexpr auto LockThirdPersonOffset = 0x2fe810;
		constexpr auto get_ShouldOverrideLookAt = 0x2f6010;
		constexpr auto VehicleParent = 0x2ffe50;
		constexpr auto get_IsSummerDlcVehicle = 0x2f6010;
		constexpr auto IsInstrument = 0x2f6010;
		constexpr auto UpdatePlayerRotation = 0x2ffda0;
		constexpr auto SetNetworkPosition = 0x2ff810;
		constexpr auto UpdatePlayerPosition = 0x2ffc10;
		constexpr auto GetMountedRotation = 0x2fe6a0;
		constexpr auto GetMountedPosition = 0x2fe5e0;
		constexpr auto PlayerMounted = 0x2ff3d0;
		constexpr auto PlayerDismounted = 0x2feee0;
		constexpr auto ClientOnPlayerDismounted = 0x2fda00;
		constexpr auto ClientOnPlayerMounted = 0x2fdaa0;
		constexpr auto OverrideViewAngles = 0x2feeb0;
		constexpr auto DoPlayerMovement = 0x2fdc80;
		constexpr auto ClientRequestDismount = 0x2fdb70;
		constexpr auto Menu_Mount = 0x2fe9d0;
		constexpr auto Menu_Mount_ShowIf = 0x2fe930;
		constexpr auto MountMenuVisible = 0x2f8b40;
		constexpr auto NearMountPoint = 0x2fea60;
		constexpr auto ConvertVector = 0x2fdbb0;
		constexpr auto get_BlocksDoors = 0x2f8b40;
		constexpr auto ctor = 0x2fff80;
	};

	namespace TOD_Sky {
		constexpr auto probeRenderID = 0x18;
		constexpr auto ColorSpace = 0x1c;
		constexpr auto ColorRange = 0x20;
		constexpr auto ColorOutput = 0x24;
		constexpr auto SkyQuality = 0x28;
		constexpr auto CloudQuality = 0x2c;
		constexpr auto MeshQuality = 0x30;
		constexpr auto StarQuality = 0x34;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto Probek__BackingField = 0x218;
		constexpr auto ProbeInstancek__BackingField = 0x220;
		constexpr auto ProbeExk__BackingField = 0x228;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x126e360;
		constexpr auto get_Instance = 0x126e290;
		constexpr auto get_Initialized = 0xc5a760;
		constexpr auto set_Initialized = 0xc5a770;
		constexpr auto get_Headless = 0x126e270;
		constexpr auto get_Components = 0xa88fc0;
		constexpr auto set_Components = 0xbc8950;
		constexpr auto get_Resources = 0x5f9750;
		constexpr auto set_Resources = 0xfea230;
		constexpr auto get_IsDay = 0x126e3c0;
		constexpr auto set_IsDay = 0x126e760;
		constexpr auto get_IsNight = 0x126e3d0;
		constexpr auto set_IsNight = 0x126e770;
		constexpr auto get_Radius = 0x126e640;
		constexpr auto get_Diameter = 0x126e210;
		constexpr auto get_LerpValue = 0xb92ae0;
		constexpr auto set_LerpValue = 0xb92ca0;
		constexpr auto get_SunZenith = 0x126e700;
		constexpr auto set_SunZenith = 0x126e980;
		constexpr auto get_SunAltitude = 0x126e680;
		constexpr auto set_SunAltitude = 0x126e8e0;
		constexpr auto get_SunAzimuth = 0x126e690;
		constexpr auto set_SunAzimuth = 0x126e8f0;
		constexpr auto get_MoonZenith = 0x126e600;
		constexpr auto set_MoonZenith = 0x126e8b0;
		constexpr auto get_MoonAltitude = 0x126e560;
		constexpr auto set_MoonAltitude = 0x126e800;
		constexpr auto get_MoonAzimuth = 0x126e570;
		constexpr auto set_MoonAzimuth = 0x126e810;
		constexpr auto get_SunsetTime = 0x126e720;
		constexpr auto set_SunsetTime = 0x126e9a0;
		constexpr auto get_SunriseTime = 0x126e710;
		constexpr auto set_SunriseTime = 0x126e990;
		constexpr auto get_LocalSiderealTime = 0x12192b0;
		constexpr auto set_LocalSiderealTime = 0x1219ab0;
		constexpr auto get_LightZenith = 0x126e480;
		constexpr auto get_LightIntensity = 0x126e450;
		constexpr auto get_SunVisibility = 0x126e6f0;
		constexpr auto set_SunVisibility = 0x126e970;
		constexpr auto get_MoonVisibility = 0x1219100;
		constexpr auto set_MoonVisibility = 0x126e8a0;
		constexpr auto get_SunDirection = 0x126e6a0;
		constexpr auto set_SunDirection = 0x126e910;
		constexpr auto get_MoonDirection = 0x126e590;
		constexpr auto set_MoonDirection = 0x126e830;
		constexpr auto get_LightDirection = 0x126e430;
		constexpr auto set_LightDirection = 0x126e780;
		constexpr auto get_LocalSunDirection = 0x126e540;
		constexpr auto set_LocalSunDirection = 0x126e7e0;
		constexpr auto get_LocalMoonDirection = 0x126e520;
		constexpr auto set_LocalMoonDirection = 0x126e7c0;
		constexpr auto get_LocalLightDirection = 0x126e500;
		constexpr auto set_LocalLightDirection = 0x126e7a0;
		constexpr auto get_SunLightColor = 0x126e6c0;
		constexpr auto set_SunLightColor = 0x126e930;
		constexpr auto get_MoonLightColor = 0x126e5c0;
		constexpr auto set_MoonLightColor = 0x126e860;
		constexpr auto get_LightColor = 0x126e3e0;
		constexpr auto get_SunRayColor = 0x126e6e0;
		constexpr auto set_SunRayColor = 0x126e950;
		constexpr auto get_MoonRayColor = 0x126e5e0;
		constexpr auto set_MoonRayColor = 0x126e880;
		constexpr auto get_SunSkyColor = 0xe04880;
		constexpr auto set_SunSkyColor = 0x126e960;
		constexpr auto get_MoonSkyColor = 0x126e5f0;
		constexpr auto set_MoonSkyColor = 0x126e890;
		constexpr auto get_SunMeshColor = 0x126e6d0;
		constexpr auto set_SunMeshColor = 0x126e940;
		constexpr auto get_MoonMeshColor = 0x126e5d0;
		constexpr auto set_MoonMeshColor = 0x126e870;
		constexpr auto get_SunCloudColor = 0xbd8020;
		constexpr auto set_SunCloudColor = 0x126e900;
		constexpr auto get_MoonCloudColor = 0x126e580;
		constexpr auto set_MoonCloudColor = 0x126e820;
		constexpr auto get_FogColor = 0x126e250;
		constexpr auto set_FogColor = 0x126e740;
		constexpr auto get_GroundColor = 0x126e260;
		constexpr auto set_GroundColor = 0x126e750;
		constexpr auto get_AmbientColor = 0x126e200;
		constexpr auto set_AmbientColor = 0x126e730;
		constexpr auto get_MoonHaloColor = 0x126e5b0;
		constexpr auto set_MoonHaloColor = 0x126e850;
		constexpr auto get_Probe = 0x126e630;
		constexpr auto set_Probe = 0x126e8d0;
		constexpr auto get_ProbeInstance = 0x126e620;
		constexpr auto set_ProbeInstance = 0xb45d10;
		constexpr auto get_ProbeEx = 0x126e610;
		constexpr auto set_ProbeEx = 0x126e8c0;
		constexpr auto OrbitalToUnity = 0x1266750;
		constexpr auto OrbitalToLocal = 0x1266690;
		constexpr auto SampleAtmosphere = 0x1267e60;
		constexpr auto RenderToSphericalHarmonics = 0x1267d00;
		constexpr auto RenderToCubemap = 0x1266820;
		constexpr auto RenderToProbe = 0x12669e0;
		constexpr auto UpdateProbeProperties = 0x126c360;
		constexpr auto SampleFogColor = 0x12681e0;
		constexpr auto SampleSkyColor = 0x1268490;
		constexpr auto SampleEquatorColor = 0x1268120;
		constexpr auto UpdateFog = 0x126c2e0;
		constexpr auto UpdateAmbient = 0x12699b0;
		constexpr auto UpdateReflection = 0x126cd20;
		constexpr auto LoadParameters = 0x12663f0;
		constexpr auto SaveParameters = 0x12685a0;
		constexpr auto UpdateQualitySettings = 0x126c710;
		constexpr auto UpdateRenderSettings = 0x126ce20;
		constexpr auto UpdateShaderKeywords = 0x126d1d0;
		constexpr auto UpdateShaderProperties = 0x126d3d0;
		constexpr auto ShaderScale = 0x1268b10;
		constexpr auto ShaderMiePhase = 0x12687f0;
		constexpr auto ShaderRayleighPhase = 0x1268af0;
		constexpr auto ShaderNightSkyColor = 0x1268a00;
		constexpr auto ShaderMoonHaloColor = 0x12688c0;
		constexpr auto TOD_HDR2LDR = 0x1269760;
		constexpr auto TOD_GAMMA2LINEAR = 0x1269700;
		constexpr auto TOD_LINEAR2GAMMA = 0x12698e0;
		constexpr auto ShaderScatteringColor = 0x1268bc0;
		constexpr auto Initialize = 0x1266010;
		constexpr auto Cleanup = 0x1265ea0;
		constexpr auto OnEnable = 0x1266640;
		constexpr auto OnDisable = 0x1265ea0;
		constexpr auto LateUpdate = 0x1266110;
		constexpr auto OnValidate = 0x1266650;
		constexpr auto UpdateScattering = 0x126d020;
		constexpr auto UpdateCelestials = 0x126a120;
		constexpr auto ctor = 0x126e1b0;
		constexpr auto cctor = 0x126e150;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x18d9a50;
		constexpr auto get_state = 0x18d9d20;
		constexpr auto set_state = 0x18d9dd0;
		constexpr auto Range = 0x18d9ad0;
		constexpr auto RandomRangeInt = 0x18d9a90;
		constexpr auto get_value = 0x18d9d60;
		constexpr auto get_insideUnitSphere = 0x18d9ba0;
		constexpr auto GetRandomUnitCircle = 0x18d9a10;
		constexpr auto get_insideUnitCircle = 0x18d9b20;
		constexpr auto get_onUnitSphere = 0x18d9c20;
		constexpr auto get_rotation = 0x18d9ca0;
		constexpr auto RandomRange = 0x18d9a90;
		constexpr auto get_state_Injected = 0x18d9ce0;
		constexpr auto set_state_Injected = 0x18d9d90;
		constexpr auto get_insideUnitSphere_Injected = 0x18d9b60;
		constexpr auto get_onUnitSphere_Injected = 0x18d9be0;
		constexpr auto get_rotation_Injected = 0x18d9c60;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x236090;
		constexpr auto GetHashCode = 0x1315f0;
		constexpr auto Equals = 0x235b50;
		constexpr auto Raycast = 0x235e20;
		constexpr auto Internal_RaycastTest = 0x22a15d0;
		constexpr auto Internal_Raycast = 0x22a16b0;
		constexpr auto Internal_RaycastNonAlloc = 0x22a14f0;
		constexpr auto Query_CapsuleCast = 0x22a1de0;
		constexpr auto Internal_CapsuleCast = 0x22a12d0;
		constexpr auto CapsuleCast = 0x235aa0;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x22a1b00;
		constexpr auto OverlapCapsule = 0x235c80;
		constexpr auto Query_SphereCast = 0x22a1ef0;
		constexpr auto Internal_SphereCast = 0x22a1820;
		constexpr auto SphereCast = 0x235f10;
		constexpr auto Internal_SphereCastNonAlloc = 0x22a1790;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x22a1bf0;
		constexpr auto OverlapSphere = 0x235d20;
		constexpr auto Query_BoxCast = 0x22a1cd0;
		constexpr auto Internal_BoxCast = 0x22a1110;
		constexpr auto BoxCast = 0x2359e0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x22a1a10;
		constexpr auto OverlapBox = 0x235bd0;
		constexpr auto Internal_RaycastTest_Injected = 0x22a1560;
		constexpr auto Internal_Raycast_Injected = 0x22a1640;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x22a1480;
		constexpr auto Query_CapsuleCast_Injected = 0x22a1d70;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x22a1a90;
		constexpr auto Query_SphereCast_Injected = 0x22a1e80;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x22a1720;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x22a1b80;
		constexpr auto Query_BoxCast_Injected = 0x22a1c60;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x22a19a0;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x1096e80;
		constexpr auto IsOnLayer = 0x1096d30;
		constexpr auto GetEntityFromRegistry = 0x1096c00;
		constexpr auto GetEntityFromComponent = 0x1096b00;
		constexpr auto SetHierarchyGroup = 0x1096dc0;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x238;
		constexpr auto rotorPivot = 0x240;
		constexpr auto mainRotor = 0x248;
		constexpr auto mainRotor_blades = 0x250;
		constexpr auto mainRotor_blur = 0x258;
		constexpr auto tailRotor = 0x260;
		constexpr auto tailRotor_blades = 0x268;
		constexpr auto tailRotor_blur = 0x270;
		constexpr auto rocket_tube_left = 0x278;
		constexpr auto rocket_tube_right = 0x280;
		constexpr auto left_gun_yaw = 0x288;
		constexpr auto left_gun_pitch = 0x290;
		constexpr auto left_gun_muzzle = 0x298;
		constexpr auto right_gun_yaw = 0x2a0;
		constexpr auto right_gun_pitch = 0x2a8;
		constexpr auto right_gun_muzzle = 0x2b0;
		constexpr auto spotlight_rotation = 0x2b8;
		constexpr auto rocket_fire_effect = 0x2c0;
		constexpr auto gun_fire_effect = 0x2c8;
		constexpr auto bulletEffect = 0x2d0;
		constexpr auto explosionEffect = 0x2d8;
		constexpr auto fireBall = 0x2e0;
		constexpr auto crateToDrop = 0x2e8;
		constexpr auto maxCratesToSpawn = 0x2f0;
		constexpr auto bulletSpeed = 0x2f4;
		constexpr auto bulletDamage = 0x2f8;
		constexpr auto servergibs = 0x300;
		constexpr auto debrisFieldMarker = 0x308;
		constexpr auto rotorWashSoundDef = 0x310;
		constexpr auto _rotorWashSound = 0x318;
		constexpr auto flightEngineSoundDef = 0x320;
		constexpr auto flightThwopsSoundDef = 0x328;
		constexpr auto flightEngineSound = 0x330;
		constexpr auto flightThwopsSound = 0x338;
		constexpr auto flightEngineGainMod = 0x340;
		constexpr auto flightThwopsGainMod = 0x348;
		constexpr auto rotorGainModSmoothing = 0x350;
		constexpr auto engineGainMin = 0x354;
		constexpr auto engineGainMax = 0x358;
		constexpr auto thwopGainMin = 0x35c;
		constexpr auto thwopGainMax = 0x360;
		constexpr auto spotlightJitterAmount = 0x364;
		constexpr auto spotlightJitterSpeed = 0x368;
		constexpr auto nightLights = 0x370;
		constexpr auto spotlightTarget = 0x378;
		constexpr auto engineSpeed = 0x384;
		constexpr auto targetEngineSpeed = 0x388;
		constexpr auto blur_rotationScale = 0x38c;
		constexpr auto _rotorWashParticles = 0x390;
		constexpr auto myAI = 0x398;
		constexpr auto client_rotorPivotIdeal = 0x3a0;
		constexpr auto nightLightsOn = 0x3b0;

		constexpr auto OnRpcMessage = 0x7b67e0;
		constexpr auto InitalizeWeakspots = 0x7b62d0;
		constexpr auto MaxVelocity = 0x320d30;
		constexpr auto InitShared = 0x7b6240;
		constexpr auto Load = 0x7b65b0;
		constexpr auto ClientInit = 0x7b5c40;
		constexpr auto InitializeClientsideEffects = 0x7b6350;
		constexpr auto DoClientDestroy = 0x7b5c80;
		constexpr auto SetLights = 0x7b6c30;
		constexpr auto Update = 0x7b76b0;
		constexpr auto UpdateEffects = 0x7b6d50;
		constexpr auto UpdateRotorWashPosition = 0x7b7570;
		constexpr auto ToggleRotorWash = 0x7b6cd0;
		constexpr auto UpdateRotorVisibility = 0x7b74e0;
		constexpr auto FireGun = 0x7b5d60;
		constexpr auto ctor = 0x7b7e40;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileDistance = 0xa0;
		constexpr auto ProjectileVelocity = 0xa4;
		constexpr auto ProjectilePrefab = 0xb0;
		constexpr auto material = 0xb8;
		constexpr auto damageProperties = 0xc0;
		constexpr auto damageTypes = 0xc8;
		constexpr auto CanGather = 0xd0;
		constexpr auto DidGather = 0xd1;
		constexpr auto gatherScale = 0xd4;

		constexpr auto IsProjectile = 0x59b3f0;
		constexpr auto get_InitiatorPlayer = 0x59bc40;
		constexpr auto get_attackNormal = 0x59bcd0;
		constexpr auto get_hasDamage = 0x59c1d0;
		constexpr auto ctor = 0x59ba60;
		constexpr auto LoadFromAttack = 0x59b400;
		constexpr auto get_isHeadshot = 0x59c200;
		constexpr auto get_bonePhrase = 0x59c070;
		constexpr auto get_boneName = 0x59bee0;
		constexpr auto get_boneArea = 0x59bdd0;
		constexpr auto PositionOnRay = 0x59b600;
		constexpr auto HitPositionOnRay = 0x59b250;
		constexpr auto IsNaNOrInfinity = 0x59b2a0;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x16be300;
		constexpr auto NumberBufferToDouble = 0x16be310;
		constexpr auto FormatDecimal = 0x16bd820;
		constexpr auto FormatDouble = 0x16bd940;
		constexpr auto FormatInt32 = 0x16bd9c0;
		constexpr auto FormatUInt32 = 0x16bdd20;
		constexpr auto FormatInt64 = 0x16bdb30;
		constexpr auto FormatUInt64 = 0x16bde80;
		constexpr auto FormatSingle = 0x16bdca0;
		constexpr auto HexNumberToInt32 = 0x16bdfe0;
		constexpr auto HexNumberToInt64 = 0x16be060;
		constexpr auto HexNumberToUInt32 = 0x16be120;
		constexpr auto HexNumberToUInt64 = 0x16be1a0;
		constexpr auto IsWhite = 0x16be230;
		constexpr auto NumberToInt32 = 0x16be320;
		constexpr auto NumberToInt64 = 0x16be380;
		constexpr auto NumberToUInt32 = 0x16be400;
		constexpr auto NumberToUInt64 = 0x16be460;
		constexpr auto MatchChars = 0x16be290;
		constexpr auto ParseDecimal = 0x16be4d0;
		constexpr auto ParseDouble = 0x16be640;
		constexpr auto ParseInt32 = 0x16be8f0;
		constexpr auto ParseInt64 = 0x16beb40;
		constexpr auto ParseNumber = 0x16bedb0;
		constexpr auto ParseSingle = 0x16bf8a0;
		constexpr auto ParseUInt32 = 0x16bfbc0;
		constexpr auto ParseUInt64 = 0x16bfe00;
		constexpr auto StringToNumber = 0x16c0060;
		constexpr auto TrailingZeros = 0x16c01a0;
		constexpr auto TryParseDecimal = 0x16c0200;
		constexpr auto TryParseDouble = 0x16c0380;
		constexpr auto TryParseInt32 = 0x16c0500;
		constexpr auto TryParseInt64 = 0x16c0740;
		constexpr auto TryParseSingle = 0x16c0910;
		constexpr auto TryParseUInt32 = 0x16c0ac0;
		constexpr auto TryParseUInt64 = 0x16c0d00;
		constexpr auto TryStringToNumber = 0x16c1020;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x13693a0;
		constexpr auto OnSerializing = 0x1368a00;
		constexpr auto OnDeserializing = 0x2f6e50;
		constexpr auto OnDeserialized = 0x2f6e50;
		constexpr auto get_InvariantInfo = 0x1369530;
		constexpr auto GetInstance = 0x1368780;
		constexpr auto Clone = 0x1368680;
		constexpr auto get_CurrencyDecimalDigits = 0x705dd0;
		constexpr auto get_CurrencyDecimalSeparator = 0x56d990;
		constexpr auto get_IsReadOnly = 0xd14ea0;
		constexpr auto get_CurrencyGroupSizes = 0x13693b0;
		constexpr auto get_NumberGroupSizes = 0x1369640;
		constexpr auto get_PercentGroupSizes = 0x13696c0;
		constexpr auto get_CurrencyGroupSeparator = 0x6a6d90;
		constexpr auto get_CurrencySymbol = 0x62d6a0;
		constexpr auto get_CurrentInfo = 0x1369430;
		constexpr auto get_NaNSymbol = 0x2fa5e0;
		constexpr auto get_CurrencyNegativePattern = 0xedb2d0;
		constexpr auto get_NumberNegativePattern = 0xedb2c0;
		constexpr auto get_PercentPositivePattern = 0x10d8ee0;
		constexpr auto get_PercentNegativePattern = 0x9da6e0;
		constexpr auto get_NegativeInfinitySymbol = 0x5e0d60;
		constexpr auto get_NegativeSign = 0x32bb20;
		constexpr auto get_NumberDecimalDigits = 0xead430;
		constexpr auto get_NumberDecimalSeparator = 0x6bc050;
		constexpr auto get_NumberGroupSeparator = 0x5aaa30;
		constexpr auto get_CurrencyPositivePattern = 0x3006f0;
		constexpr auto get_PositiveInfinitySymbol = 0x576d40;
		constexpr auto get_PositiveSign = 0x8891d0;
		constexpr auto get_PercentDecimalDigits = 0x9da700;
		constexpr auto get_PercentDecimalSeparator = 0x300780;
		constexpr auto get_PercentGroupSeparator = 0x3006c0;
		constexpr auto get_PercentSymbol = 0x4a1e70;
		constexpr auto get_PerMilleSymbol = 0x3006d0;
		constexpr auto GetFormat = 0x13686f0;
		constexpr auto ReadOnly = 0x1368a90;
		constexpr auto ValidateParseStyleInteger = 0x1368c10;
		constexpr auto ValidateParseStyleFloatingPoint = 0x1368b40;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x18c68d0;
		constexpr auto CreateWithMaterial = 0x18c6880;
		constexpr auto CreateWithString = 0x18c6920;
		constexpr auto ctor = 0x18c7e80;
		constexpr auto get_shader = 0x18c8140;
		constexpr auto set_shader = 0x18c82d0;
		constexpr auto get_color = 0x18c7f10;
		constexpr auto set_color = 0x18c8180;
		constexpr auto get_mainTexture = 0x18c8020;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x18c6bf0;
		constexpr auto HasProperty = 0x18c7100;
		constexpr auto get_renderQueue = 0x18c8100;
		constexpr auto set_renderQueue = 0x18c8290;
		constexpr auto EnableKeyword = 0x18c69b0;
		constexpr auto DisableKeyword = 0x18c6960;
		constexpr auto IsKeywordEnabled = 0x18c7140;
		constexpr auto get_enableInstancing = 0x18c7fe0;
		constexpr auto set_enableInstancing = 0x18c8240;
		constexpr auto get_passCount = 0x18c80c0;
		constexpr auto GetShaderPassEnabled = 0x18c6d40;
		constexpr auto GetPassName = 0x18c6cc0;
		constexpr auto FindPass = 0x18c6a00;
		constexpr auto SetOverrideTag = 0x18c78d0;
		constexpr auto GetTagImpl = 0x18c6d90;
		constexpr auto GetTag = 0x18c6e90;
		constexpr auto SetPass = 0x18c7930;
		constexpr auto CopyPropertiesFromMaterial = 0x18c6830;
		constexpr auto GetShaderKeywords = 0x18c6d00;
		constexpr auto SetShaderKeywords = 0x18c7970;
		constexpr auto get_shaderKeywords = 0x18c6d00;
		constexpr auto set_shaderKeywords = 0x18c7970;
		constexpr auto SetFloatImpl = 0x18c7620;
		constexpr auto SetColorImpl = 0x18c7290;
		constexpr auto SetMatrixImpl = 0x18c7790;
		constexpr auto SetTextureImpl = 0x18c79c0;
		constexpr auto SetBufferImpl = 0x18c7190;
		constexpr auto GetFloatImpl = 0x18c6c30;
		constexpr auto GetColorImpl = 0x18c6aa0;
		constexpr auto GetTextureImpl = 0x18c6f00;
		constexpr auto SetFloatArrayImpl = 0x18c7390;
		constexpr auto SetTextureOffsetImpl = 0x18c7a60;
		constexpr auto SetTextureScaleImpl = 0x18c7b60;
		constexpr auto SetFloatArray = 0x18c74f0;
		constexpr auto SetFloat = 0x18c7670;
		constexpr auto SetInt = 0x18c76d0;
		constexpr auto SetColor = 0x18c7330;
		constexpr auto SetVector = 0x18c7c70;
		constexpr auto SetMatrix = 0x18c7850;
		constexpr auto SetTexture = 0x18c7c10;
		constexpr auto SetBuffer = 0x18c71e0;
		constexpr auto GetFloat = 0x18c6c70;
		constexpr auto GetColor = 0x18c6b70;
		constexpr auto GetVector = 0x18c6f90;
		constexpr auto GetTexture = 0x18c6f40;
		constexpr auto SetTextureOffset = 0x18c7ab0;
		constexpr auto SetTextureScale = 0x18c7bb0;
		constexpr auto SetColorImpl_Injected = 0x18c7240;
		constexpr auto SetMatrixImpl_Injected = 0x18c7740;
		constexpr auto GetColorImpl_Injected = 0x18c6a50;
		constexpr auto SetTextureOffsetImpl_Injected = 0x18c7a10;
		constexpr auto SetTextureScaleImpl_Injected = 0x18c7b10;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x1999d20;
		constexpr auto get_height = 0x1999cc0;
		constexpr auto get_dpi = 0x1999c60;
		constexpr auto get_currentResolution = 0x1999c20;
		constexpr auto get_fullScreen = 0x1999c90;
		constexpr auto SetResolution = 0x1999b20;
		constexpr auto get_resolutions = 0x1999cf0;
		constexpr auto get_currentResolution_Injected = 0x1999be0;
	};

	namespace PlayerTick {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto inputState = 0x18;
		constexpr auto position = 0x20;
		constexpr auto modelState = 0x30;
		constexpr auto activeItem = 0x38;
		constexpr auto eyePos = 0x3c;
		constexpr auto parentID = 0x48;

		constexpr auto ResetToPool = 0x1e8b610;
		constexpr auto Dispose = 0x1e8b150;
		constexpr auto EnterPool = 0xfa5990;
		constexpr auto LeavePool = 0xfa59c0;
		constexpr auto CopyTo = 0x1e89890;
		constexpr auto Copy = 0x1e89ab0;
		constexpr auto Deserialize = 0x1e8a3a0;
		constexpr auto DeserializeLengthDelimited = 0x1e89b30;
		constexpr auto DeserializeLength = 0x1e89f70;
		constexpr auto FromProto = 0x1e8b300;
		constexpr auto WriteToStream = 0x1e8c550;
		constexpr auto WriteToStreamDelta = 0x1e8c570;
		constexpr auto ReadFromStream = 0x1e8b5f0;
		constexpr auto SerializeDelta = 0x1e8b870;
		constexpr auto Serialize = 0x1e8c090;
		constexpr auto ToProtoBytes = 0x1e8c540;
		constexpr auto ToProto = 0x1e8c550;
		constexpr auto SerializeToBytes = 0x1e8bf80;
		constexpr auto SerializeLengthDelimited = 0x1e8bed0;
		constexpr auto ctor = 0xecd540;
	};

	namespace UnityEngine_RenderSettings {

		constexpr auto get_fog = 0x1994d60;
		constexpr auto get_fogStartDistance = 0x1994d30;
		constexpr auto get_fogEndDistance = 0x1994cd0;
		constexpr auto get_fogMode = 0x1994d00;
		constexpr auto get_fogColor = 0x1994c60;
		constexpr auto set_fogColor = 0x1995170;
		constexpr auto get_fogDensity = 0x1994ca0;
		constexpr auto get_ambientMode = 0x1994a40;
		constexpr auto set_ambientMode = 0x1994fb0;
		constexpr auto get_ambientSkyColor = 0x1994b50;
		constexpr auto set_ambientSkyColor = 0x19950b0;
		constexpr auto get_ambientEquatorColor = 0x19948d0;
		constexpr auto set_ambientEquatorColor = 0x1994e30;
		constexpr auto get_ambientGroundColor = 0x1994950;
		constexpr auto set_ambientGroundColor = 0x1994eb0;
		constexpr auto get_ambientIntensity = 0x1994990;
		constexpr auto set_ambientIntensity = 0x1994ef0;
		constexpr auto get_ambientLight = 0x1994a00;
		constexpr auto set_ambientLight = 0x1994f70;
		constexpr auto get_skybox = 0x1994dc0;
		constexpr auto set_skybox = 0x19951f0;
		constexpr auto get_ambientProbe = 0x1994ab0;
		constexpr auto set_ambientProbe = 0x1995030;
		constexpr auto get_customReflection = 0x1994b90;
		constexpr auto get_reflectionIntensity = 0x1994d90;
		constexpr auto set_reflectionIntensity = 0x19951b0;
		constexpr auto get_defaultReflectionMode = 0x1994bc0;
		constexpr auto set_defaultReflectionMode = 0x19950f0;
		constexpr auto get_defaultReflectionResolution = 0x1994bf0;
		constexpr auto get_fogColor_Injected = 0x1994c20;
		constexpr auto set_fogColor_Injected = 0x1995130;
		constexpr auto get_ambientSkyColor_Injected = 0x1994b10;
		constexpr auto set_ambientSkyColor_Injected = 0x1995070;
		constexpr auto get_ambientEquatorColor_Injected = 0x1994890;
		constexpr auto set_ambientEquatorColor_Injected = 0x1994df0;
		constexpr auto get_ambientGroundColor_Injected = 0x1994910;
		constexpr auto set_ambientGroundColor_Injected = 0x1994e70;
		constexpr auto get_ambientLight_Injected = 0x19949c0;
		constexpr auto set_ambientLight_Injected = 0x1994f30;
		constexpr auto get_ambientProbe_Injected = 0x1994a70;
		constexpr auto set_ambientProbe_Injected = 0x1994ff0;
	};

	namespace BaseRidableAnimal {
		constexpr auto __menuOption_Menu_Claim = 0x3a8;
		constexpr auto __menuOption_Menu_Lead = 0x400;
		constexpr auto __menuOption_Menu_Open = 0x458;
		constexpr auto __menuOption_Menu_Ride = 0x4b0;
		constexpr auto __menuOption_Menu_StopLead = 0x508;
		constexpr auto __menuOption_Menu_TooHeavy = 0x560;
		constexpr auto onlyAllowedItem = 0x5b8;
		constexpr auto allowedContents = 0x5c0;
		constexpr auto maxStackSize = 0x5c4;
		constexpr auto numSlots = 0x5c8;
		constexpr auto lootPanelName = 0x5d0;
		constexpr auto needsBuildingPrivilegeToUse = 0x5d8;
		constexpr auto isLootable = 0x5d9;
		constexpr auto inventory = 0x5e0;
		constexpr auto lastMoveDirection = 0x5e8;
		constexpr auto saddlePrefab = 0x5f8;
		constexpr auto saddleRef = 0x600;
		constexpr auto movementLOSOrigin = 0x610;
		constexpr auto sprintSounds = 0x618;
		constexpr auto largeWhinny = 0x620;
		constexpr auto purchaseToken = 0x628;
		constexpr auto eatEffect = 0x630;
		constexpr auto CorpsePrefab = 0x638;
		constexpr auto animalFront = 0x640;
		constexpr auto obstacleDetectionRadius = 0x648;
		constexpr auto maxWaterDepth = 0x64c;
		constexpr auto roadSpeedBonus = 0x650;
		constexpr auto maxWallClimbSlope = 0x654;
		constexpr auto maxStepHeight = 0x658;
		constexpr auto maxStepDownHeight = 0x65c;
		constexpr auto currentRunState = 0x660;
		constexpr auto walkSpeed = 0x664;
		constexpr auto trotSpeed = 0x668;
		constexpr auto runSpeed = 0x66c;
		constexpr auto turnSpeed = 0x670;
		constexpr auto maxSpeed = 0x674;
		constexpr auto groundSampleOffsets = 0x678;
		constexpr auto staminaSeconds = 0x680;
		constexpr auto currentMaxStaminaSeconds = 0x684;
		constexpr auto maxStaminaSeconds = 0x688;
		constexpr auto staminaCoreLossRatio = 0x68c;
		constexpr auto staminaCoreSpeedBonus = 0x690;
		constexpr auto staminaReplenishRatioMoving = 0x694;
		constexpr auto staminaReplenishRatioStanding = 0x698;
		constexpr auto calorieToStaminaRatio = 0x69c;
		constexpr auto hydrationToStaminaRatio = 0x6a0;
		constexpr auto maxStaminaCoreFromWater = 0x6a4;
		constexpr auto debugMovement = 0x6a8;
		constexpr auto normalOffsets = 0x6b0;
		constexpr auto currentSpeed = 0x6b8;
		constexpr auto desiredRotation = 0x6bc;
		constexpr auto animalPitchClamp = 0x6c0;
		constexpr auto animalRollClamp = 0x6c4;
		constexpr auto lastBreathingRate = 0x6c8;
		constexpr auto nextTokenCheckTime = 0x6cc;
		constexpr auto lastTokenCheckResult = 0x6d0;

		constexpr auto GetMenuOptions = 0x915a20;
		constexpr auto get_HasMenuOptions = 0x918190;
		constexpr auto OnRpcMessage = 0x917070;
		constexpr auto IsForSale = 0x57fbc0;
		constexpr auto CanOpenStorage = 0x9154d0;
		constexpr auto LoadContainer = 0x916900;
		constexpr auto Menu_Open = 0x916e30;
		constexpr auto Menu_Open_ShowIf = 0x916d10;
		constexpr auto ShouldShowLootMenus = 0x917a60;
		constexpr auto GetBreathingDelay = 0x9159e0;
		constexpr auto IsLeading = 0x9168c0;
		constexpr auto UnitsToKPH = 0x917bb0;
		constexpr auto get_IsNpc = 0x2f8b40;
		constexpr auto Load = 0x9169f0;
		constexpr auto UpdateBreathingRate = 0x917bd0;
		constexpr auto PostNetworkUpdate = 0x9178f0;
		constexpr auto SprintSoundPlay = 0x917af0;
		constexpr auto Stand = 0x917b20;
		constexpr auto Eat = 0x915960;
		constexpr auto DisplayHealthInfo = 0x9157e0;
		constexpr auto Menu_TooHeavy = 0x2f6e50;
		constexpr auto Menu_TooHeavy_ShowIf = 0x9168d0;
		constexpr auto Menu_Ride = 0x916f40;
		constexpr auto Menu_Ride_ShowIf = 0x916e70;
		constexpr auto CanPlayerSeeSaddlePoint = 0x915570;
		constexpr auto Menu_Lead = 0x916cc0;
		constexpr auto Menu_Lead_ShowIf = 0x916c20;
		constexpr auto Menu_StopLead = 0x917020;
		constexpr auto Menu_StopLead_ShowIf = 0x916f80;
		constexpr auto RideMenuVisible = 0x2f8b40;
		constexpr auto MountMenuVisible = 0x2f6010;
		constexpr auto Menu_Claim = 0x916be0;
		constexpr auto Menu_Claim_ShowIf = 0x916b00;
		constexpr auto PlayerHasToken = 0x9178b0;
		constexpr auto GetPurchaseToken = 0x916850;
		constexpr auto GetWalkSpeed = 0x9168b0;
		constexpr auto GetTrotSpeed = 0x9168a0;
		constexpr auto GetRunSpeed = 0x916890;
		constexpr auto IsPlayerTooHeavy = 0x9168d0;
		constexpr auto ctor = 0x917d80;
		constexpr auto cctor = 0x917d40;
	};

	namespace FlintStrikeWeapon {
		constexpr auto successFraction = 0x360;
		constexpr auto strikeRecoil = 0x368;
		constexpr auto _didSparkThisFrame = 0x370;
		constexpr auto _isStriking = 0x371;
		constexpr auto strikes = 0x374;

		constexpr auto GetRecoil = 0x78ecc0;
		constexpr auto DoAttack = 0x78e9c0;
		constexpr auto OnFrame = 0x78ecd0;
		constexpr auto OnViewmodelEvent = 0x78ee60;
		constexpr auto ctor = 0x78f010;
	};

	namespace Facepunch_Network_Raknet_Peer {
		constexpr auto ptr = 0x10;

		constexpr auto CreateServer = 0x22c7be0;
		constexpr auto CreateConnection = 0x22c7710;
		constexpr auto Close = 0x22c7650;
		constexpr auto PendingReceiveCount = 0x22c89b0;
		constexpr auto Receive = 0x22c8df0;
		constexpr auto get_incomingGUID = 0x22c98c0;
		constexpr auto get_incomingAddressInt = 0x22c95b0;
		constexpr auto get_incomingPort = 0x22c9950;
		constexpr auto get_incomingAddress = 0x22c9640;
		constexpr auto get_incomingBits = 0x22c97d0;
		constexpr auto get_incomingBitsUnread = 0x22c9740;
		constexpr auto get_incomingBytes = 0x22c9890;
		constexpr auto get_incomingBytesUnread = 0x22c9860;
		constexpr auto SetReadPos = 0x22c9200;
		constexpr auto Read = 0x22c8d40;
		constexpr auto ReadBytes = 0x22c8cf0;
		constexpr auto ReadByte = 0x22c8b00;
		constexpr auto RawData = 0x22c8a70;
		constexpr auto SendStart = 0x22c8fa0;
		constexpr auto WriteByte = 0x22c9350;
		constexpr auto WriteBytes = 0x22c93d0;
		constexpr auto Write = 0x22c94a0;
		constexpr auto SendBroadcast = 0x22c8eb0;
		constexpr auto SendTo = 0x22c9030;
		constexpr auto SendUnconnectedMessage = 0x22c9130;
		constexpr auto GetAddress = 0x22c7fe0;
		constexpr auto StringFromPointer = 0x22c92a0;
		constexpr auto ToRaknetPriority = 0x22c9340;
		constexpr auto ToRaknetPacketReliability = 0x22c9320;
		constexpr auto Kick = 0x22c88f0;
		constexpr auto Check = 0x22c75e0;
		constexpr auto GetStatisticsString = 0x22c8490;
		constexpr auto GetPingAverage = 0x22c80d0;
		constexpr auto GetPingLast = 0x22c8170;
		constexpr auto GetPingLowest = 0x22c8210;
		constexpr auto GetStatistics = 0x22c87a0;
		constexpr auto GetStat = 0x22c82b0;
		constexpr auto ctor = 0x305a40;
		constexpr auto cctor = 0x22c9560;
	};

	namespace Network_Message {
		constexpr auto type = 0x10;
		constexpr auto peer = 0x18;
		constexpr auto connection = 0x20;

		constexpr auto get_read = 0xdc6930;
		constexpr auto get_write = 0x8d4680;
		constexpr auto Clear = 0x221b4b0;
		constexpr auto ctor = 0x305a40;
	};

	namespace Network_NetRead {
		constexpr auto _stream = 0x28;
		constexpr auto Data = 0x30;
		constexpr auto _length = 0x38;
		constexpr auto _position = 0x40;
		constexpr auto charBuffer = 0x8;

		constexpr auto GetStreamForDecryption = 0x221b830;
		constexpr auto Start = 0x221bcc0;
		constexpr auto get_Unread = 0x221c5d0;
		constexpr auto String = 0x221c1d0;
		constexpr auto StringMultiLine = 0x221c0c0;
		constexpr auto StringInternal = 0x221be30;
		constexpr auto StringRaw = 0x221c0d0;
		constexpr auto TemporaryBytesWithSize = 0x221c1e0;
		constexpr auto EntityID = 0x221b760;
		constexpr auto GroupID = 0x221b760;
		constexpr auto BytesWithSize = 0x221b600;
		constexpr auto ReadByte = 0x221bb10;
		constexpr auto get_CanRead = 0x2f8b40;
		constexpr auto get_CanWrite = 0x2f6010;
		constexpr auto SetLength = 0xbfe2a0;
		constexpr auto PacketID = 0x221ba10;
		constexpr auto Bit = 0x221b4f0;
		constexpr auto UInt8 = 0x221ba10;
		constexpr auto UInt16 = 0x221c350;
		constexpr auto UInt32 = 0x221b760;
		constexpr auto UInt64 = 0x221c390;
		constexpr auto Int8 = 0x221b9d0;
		constexpr auto Int16 = 0x221b910;
		constexpr auto Int32 = 0x221b950;
		constexpr auto Int64 = 0x221b990;
		constexpr auto Float = 0x221b7a0;
		constexpr auto Double = 0x221b720;
		constexpr auto Vector3 = 0x221c3d0;
		constexpr auto Quaternion = 0x221ba50;
		constexpr auto Ray = 0x221bab0;
		constexpr auto Color = 0x221b6c0;
		constexpr auto Read = 0x221bbb0;
		constexpr auto get_Length = 0x6bc050;
		constexpr auto get_Position = 0x5aaa30;
		constexpr auto set_Position = 0x21ba9e0;
		constexpr auto get_CanSeek = 0x2f8b40;
		constexpr auto Seek = 0x221bc40;
		constexpr auto Flush = 0x221b7e0;
		constexpr auto Write = 0x221c480;
		constexpr auto WriteByte = 0x221c430;
		constexpr auto ctor = 0x221c550;
		constexpr auto cctor = 0x221c4d0;
	};

	namespace Client {
		constexpr auto loading_connecting = 0x8;
		constexpr auto loading_connectionaccepted = 0x10;
		constexpr auto loading_connecting_negotiate = 0x18;
		constexpr auto loading_level = 0x20;
		constexpr auto loading_skinnablewarmup = 0x28;
		constexpr auto loading_preloadcomplete = 0x30;
		constexpr auto loading_openingscene = 0x38;
		constexpr auto loading_clientready = 0x40;
		constexpr auto loading_prefabwarmup = 0x48;
		constexpr auto OnConnected = 0x50;
		constexpr auto OnDisconnected = 0x58;
		constexpr auto authTicket = 0x18;
		constexpr auto currentCoroutine = 0x20;
		constexpr auto connectionRetry = 0x28;
		constexpr auto config_raknet = 0x60;
		constexpr auto config_steam_networking = 0x68;
		constexpr auto config_steam_datagram_relay = 0x70;
		constexpr auto config_default = 0x78;
		constexpr auto _cubeMesh = 0x80;
		constexpr auto IsScrubbingDemok__BackingField = 0x88;
		constexpr auto DemoLocalClient = 0x90;
		constexpr auto Demo = 0x98;
		constexpr auto PreDemoPhysicsSteps = 0xa0;
		constexpr auto demoSpectatePlayer = 0x30;
		constexpr auto CurrentEntity = 0xa8;
		constexpr auto subscriptions = 0x38;
		constexpr auto _eventsystem = 0xb0;
		constexpr auto LastConfigSaveTime = 0x40;
		constexpr auto ngTimer = 0x48;

		constexpr auto add_OnConnected = 0x5dcaf0;
		constexpr auto remove_OnConnected = 0x5dd440;
		constexpr auto add_OnDisconnected = 0x5dcbf0;
		constexpr auto remove_OnDisconnected = 0x5dd540;
		constexpr auto get_StatsEnabled = 0x5dd380;
		constexpr auto RegisterIncoming = 0x5da4f0;
		constexpr auto OnNetworkMessage = 0x5d8c60;
		constexpr auto OnMessage = 0x5d8b20;
		constexpr auto OnRequestUserInformation = 0x5d9e60;
		constexpr auto OnApproved = 0x5d6480;
		constexpr auto OnRPCMessage = 0x5d9ad0;
		constexpr auto GetOSName = 0x5d5e60;
		constexpr auto CancelAuthTicket = 0x5d30d0;
		constexpr auto GetAuthTicket = 0x5d5c90;
		constexpr auto CancelLoading = 0x5d3190;
		constexpr auto StartLoading = 0x5daf20;
		constexpr auto Connect = 0x5d3430;
		constexpr auto DestroyNetworkables = 0x5d5240;
		constexpr auto DoClientConnected = 0x5d5460;
		constexpr auto OnClientDisconnected = 0x5d66a0;
		constexpr auto ClientCleanup = 0x5d3240;
		constexpr auto OnConsoleReplicatedVars = 0x5d68e0;
		constexpr auto SetReplicatedVar = 0x5dabe0;
		constexpr auto RunDebugCommands = 0x5da830;
		constexpr auto DrawColliders = 0x5d54f0;
		constexpr auto UpdateNetgraph = 0x5db9f0;
		constexpr auto GetCurrentNetworkStats = 0x5d5d40;
		constexpr auto get_IsPlayingDemo = 0x5dd1e0;
		constexpr auto get_IsRecordingDemo = 0x5dd230;
		constexpr auto get_IsScrubbingDemo = 0x5dd280;
		constexpr auto set_IsScrubbingDemo = 0x5dd640;
		constexpr auto get_RecordingTimeElapsed = 0x5dd330;
		constexpr auto get_RecordingFilename = 0x5dd2e0;
		constexpr auto get_DemoLocalPlayer = 0x5dcd70;
		constexpr auto get_DemoProgress = 0x5dcf30;
		constexpr auto get_DemoLength = 0x5dccf0;
		constexpr auto get_DemoNormalizedTime = 0x5dce70;
		constexpr auto get_DemoName = 0x5dce00;
		constexpr auto get_DemoRecordedTime = 0x5dcfd0;
		constexpr auto StartPlayingDemo = 0x5db000;
		constexpr auto StartPlayingDemoInternal = 0x5daf60;
		constexpr auto OnDemoKeyframe = 0x5d69f0;
		constexpr auto StopRecordingDemo = 0x5db3a0;
		constexpr auto StopPlayingDemo = 0x5db0a0;
		constexpr auto DemoFrame = 0x5d46f0;
		constexpr auto DemoSpectateNextPlayer = 0x5d50c0;
		constexpr auto DemoLateUpdate = 0x5d4c40;
		constexpr auto DemoPlayerTick = 0x5d4e50;
		constexpr auto OnGroupEnter = 0x5d85a0;
		constexpr auto OnGroupLeave = 0x5d86a0;
		constexpr auto OnEntityDestroy = 0x5d77c0;
		constexpr auto OnGroupDestroy = 0x5d8340;
		constexpr auto OnGroupChange = 0x5d7ba0;
		constexpr auto OnEntities = 0x5d74d0;
		constexpr auto CreateOrUpdateEntity = 0x5d3570;
		constexpr auto OnEntityPosition = 0x5d7a20;
		constexpr auto UpdateEntityPosition = 0x5db770;
		constexpr auto OnEntityFlags = 0x5d79a0;
		constexpr auto UpdateEntityFlags = 0x5db4f0;
		constexpr auto get_EventSystem = 0x5dd080;
		constexpr auto ClearVisibility = 0x5d31d0;
		constexpr auto NetworkInit = 0x5d61f0;
		constexpr auto Update = 0x5dbd50;
		constexpr auto LateUpdate = 0x5d5ec0;
		constexpr auto Disconnect = 0x5d5380;
		constexpr auto OnDisable = 0x5d7460;
		constexpr auto OnApplicationQuit = 0x5d63d0;
		constexpr auto OnLeaveServer = 0x5d87a0;
		constexpr auto SaveConfigs = 0x5daa50;
		constexpr auto GetCurrentProcessId = 0x5d5df0;
		constexpr auto OpenProcess = 0x5da460;
		constexpr auto TerminateProcess = 0x5db460;
		constexpr auto ShutdownClient = 0x5dace0;
		constexpr auto ctor = 0x5dca30;
		constexpr auto cctor = 0x5dc570;
	};

	namespace WorldNetworking {

		constexpr auto OnMessageReceived = 0x10fe650;
		constexpr auto RequestWorldData = 0x10fe8b0;
		constexpr auto ctor = 0x305a40;
	};

	namespace System_IO_MemoryStream {
		constexpr auto _buffer = 0x28;
		constexpr auto _origin = 0x30;
		constexpr auto _position = 0x34;
		constexpr auto _length = 0x38;
		constexpr auto _capacity = 0x3c;
		constexpr auto _expandable = 0x40;
		constexpr auto _writable = 0x41;
		constexpr auto _exposable = 0x42;
		constexpr auto _isOpen = 0x43;
		constexpr auto _lastReadTask = 0x48;

		constexpr auto ctor = 0x1656ae0;
		constexpr auto get_CanRead = 0xe37120;
		constexpr auto get_CanSeek = 0xe37120;
		constexpr auto get_CanWrite = 0xe37130;
		constexpr auto EnsureWriteable = 0x1655390;
		constexpr auto Dispose = 0x1655230;
		constexpr auto EnsureCapacity = 0x16552c0;
		constexpr auto Flush = 0x2f6e50;
		constexpr auto GetBuffer = 0x16553c0;
		constexpr auto InternalGetBuffer = 0x8891d0;
		constexpr auto InternalGetPosition = 0x1655490;
		constexpr auto InternalReadInt32 = 0x16554c0;
		constexpr auto InternalEmulateRead = 0x1655440;
		constexpr auto get_Capacity = 0x1656b90;
		constexpr auto set_Capacity = 0x1656c20;
		constexpr auto get_Length = 0x1656bc0;
		constexpr auto get_Position = 0x1656bf0;
		constexpr auto set_Position = 0x1656d50;
		constexpr auto Read = 0x16558c0;
		constexpr auto ReadAsync = 0x16555a0;
		constexpr auto ReadByte = 0x1655860;
		constexpr auto CopyToAsync = 0x1654dc0;
		constexpr auto Seek = 0x1655b10;
		constexpr auto SetLength = 0x1655d20;
		constexpr auto ToArray = 0x1655e60;
		constexpr auto Write = 0x1656340;
		constexpr auto WriteAsync = 0x1655f10;
		constexpr auto WriteByte = 0x16561a0;
		constexpr auto WriteTo = 0x1656280;
	};

	namespace Network_Net {
		constexpr auto ClientNetwork = 0x8;
		constexpr auto DemoClientNetwork = 0x10;

		constexpr auto get_cl = 0x10d0330;
		constexpr auto set_cl = 0x10d0370;
		constexpr auto ClientInit = 0x10d0120;
		constexpr auto StartDemoPlayback = 0x10d01b0;
		constexpr auto StopDemoPlayback = 0x10d0270;
		constexpr auto ctor = 0x305a40;
	};

	namespace Network_BaseNetwork {
		constexpr auto readk__BackingField = 0x10;
		constexpr auto writek__BackingField = 0x18;
		constexpr auto cryptography = 0x20;

		constexpr auto get_read = 0x32bbb0;
		constexpr auto set_read = 0x86e290;
		constexpr auto get_write = 0x3a85e0;
		constexpr auto set_write = 0x4bceb0;
		constexpr auto ctor = 0x2218400;
		constexpr auto Send = 0x2f6e50;
		constexpr auto StartMessage = 0x2218350;
		constexpr auto Decrypt = 0x2217fc0;
		constexpr auto Encrypt = 0x22181e0;
		constexpr auto Record = 0x2218330;
		constexpr auto GetDebug = 0x2fe1c0;
		constexpr auto GetStat = 0x2fe1c0;
	};

	namespace Network_NetWrite {
		constexpr auto netwrite = 0x50;
		constexpr auto data = 0x58;
		constexpr auto position = 0x60;
		constexpr auto length = 0x64;

		constexpr auto ctor = 0x221d860;
		constexpr auto Shutdown = 0x221d200;
		constexpr auto Start = 0x221d280;
		constexpr auto Send = 0x221d160;
		constexpr auto PacketID = 0x221ceb0;
		constexpr auto UInt8 = 0x221d620;
		constexpr auto UInt16 = 0x221d530;
		constexpr auto UInt32 = 0x221d580;
		constexpr auto UInt64 = 0x221d5d0;
		constexpr auto Int8 = 0x221ce60;
		constexpr auto Int16 = 0x221cd70;
		constexpr auto Int32 = 0x221cdc0;
		constexpr auto Int64 = 0x221ce10;
		constexpr auto Bool = 0x221c620;
		constexpr auto Float = 0x221cd20;
		constexpr auto Double = 0x221ca00;
		constexpr auto Bytes = 0x221c8b0;
		constexpr auto String = 0x221d290;
		constexpr auto Vector3 = 0x221d670;
		constexpr auto Quaternion = 0x221c8f0;
		constexpr auto Ray = 0x221cf00;
		constexpr auto Color = 0x221c8f0;
		constexpr auto EntityID = 0x221ccd0;
		constexpr auto GroupID = 0x221ccd0;
		constexpr auto BytesWithSize = 0x221c680;
		constexpr auto EnsureCapacity = 0x221ca50;
		constexpr auto GetBuffer = 0x62d6a0;
		constexpr auto get_CanSeek = 0x2f8b40;
		constexpr auto get_CanRead = 0x2f8b40;
		constexpr auto get_CanWrite = 0x2f8b40;
		constexpr auto get_Length = 0x221d950;
		constexpr auto get_Position = 0x221d960;
		constexpr auto set_Position = 0x221d970;
		constexpr auto Flush = 0x2f6e50;
		constexpr auto Read = 0x221d000;
		constexpr auto ReadByte = 0x221cfb0;
		constexpr auto Write = 0x221d790;
		constexpr auto WriteByte = 0x221d740;
		constexpr auto Seek = 0x221d0c0;
		constexpr auto SetLength = 0x221d1b0;
		constexpr auto cctor = 0x221d800;
	};

	namespace Network_Networkable {
		constexpr auto ID = 0x10;
		constexpr auto connectionk__BackingField = 0x18;
		constexpr auto group = 0x20;
		constexpr auto secondaryGroup = 0x28;
		constexpr auto subscriber = 0x30;
		constexpr auto handler = 0x38;
		constexpr auto updateSubscriptions = 0x40;
		constexpr auto sv = 0x48;
		constexpr auto cl = 0x50;

		constexpr auto get_connection = 0x3a85e0;
		constexpr auto set_connection = 0x4bceb0;
		constexpr auto Destroy = 0x221dbc0;
		constexpr auto EnterPool = 0x221dbf0;
		constexpr auto LeavePool = 0x2f6e50;
		constexpr auto StartSubscriber = 0x221df10;
		constexpr auto OnConnected = 0x4bceb0;
		constexpr auto OnDisconnected = 0x221dc70;
		constexpr auto CloseSubscriber = 0x221db30;
		constexpr auto UpdateGroups = 0x221e8d0;
		constexpr auto SwitchGroup = 0x221e050;
		constexpr auto OnGroupTransition = 0x221dca0;
		constexpr auto OnSubscriptionChange = 0x221de30;
		constexpr auto SwitchSecondaryGroup = 0x221e760;
		constexpr auto AddVisibleFromNear = 0x221d990;
		constexpr auto UpdateSubscriptions = 0x221ee70;
		constexpr auto UpdateHighPrioritySubscriptions = 0x221ebd0;
		constexpr auto ctor = 0x305a40;
	};

	namespace Network_Client {
		constexpr auto MinReceiveFraction = 0x4;
		constexpr auto Connectionk__BackingField = 0x28;
		constexpr auto IsPlayingk__BackingField = 0x30;
		constexpr auto visibility = 0x38;
		constexpr auto disconnectReason = 0x8;
		constexpr auto ConnectedAddressk__BackingField = 0x40;
		constexpr auto ConnectedPortk__BackingField = 0x48;
		constexpr auto ServerNamek__BackingField = 0x50;
		constexpr auto IsOfficialServerk__BackingField = 0x58;
		constexpr auto IncomingStats = 0x60;
		constexpr auto callbackHandler = 0x68;

		constexpr auto get_Connection = 0x8891d0;
		constexpr auto set_Connection = 0x8891e0;
		constexpr auto get_IsPlaying = 0x8943b0;
		constexpr auto get_ConnectedAddress = 0x5aaa30;
		constexpr auto set_ConnectedAddress = 0x5aaa40;
		constexpr auto get_ConnectedPort = 0x4d1c10;
		constexpr auto set_ConnectedPort = 0x56d9b0;
		constexpr auto get_ServerName = 0x56d990;
		constexpr auto set_ServerName = 0x56d9c0;
		constexpr auto get_IsOfficialServer = 0x3025b0;
		constexpr auto set_IsOfficialServer = 0x3027a0;
		constexpr auto Connect = 0x22189f0;
		constexpr auto Cycle = 0x2f6e50;
		constexpr auto Disconnect = 0x2f6e50;
		constexpr auto IsConnected = 0x2f6010;
		constexpr auto OnDisconnected = 0x2218ba0;
		constexpr auto CreateNetworkable = 0x2218a60;
		constexpr auto DestroyNetworkable = 0x2218b10;
		constexpr auto SetupNetworkable = 0x2218c60;
		constexpr auto GetLastPing = 0x2fe1c0;
		constexpr auto get_IsRecording = 0x2218f90;
		constexpr auto get_RecordFilename = 0xec6150;
		constexpr auto get_RecordTimeElapsed = 0x2218fb0;
		constexpr auto StartRecording = 0x2218c90;
		constexpr auto StopRecording = 0x2218db0;
		constexpr auto ctor = 0x2218e20;
		constexpr auto cctor = 0x2218dd0;
	};

	namespace UnityEngine_GameObject {

		constexpr auto CreatePrimitive = 0x18ea1f0;
		constexpr auto GetComponent = 0x18ea380;
		constexpr auto GetComponentFastPath = 0x18ea270;
		constexpr auto GetComponentInChildren = 0x18ea2d0;
		constexpr auto GetComponentInParent = 0x18ea330;
		constexpr auto GetComponentsInternal = 0x18ea4a0;
		constexpr auto GetComponents = 0x18ea520;
		constexpr auto GetComponentsInChildren = 0x18ea3d0;
		constexpr auto TryGetComponentFastPath = 0x18ea7f0;
		constexpr auto SendMessage = 0x18ea620;
		constexpr auto BroadcastMessage = 0x18ea0d0;
		constexpr auto Internal_AddComponentWithType = 0x18ea020;
		constexpr auto AddComponent = 0x18ea020;
		constexpr auto get_transform = 0x18eaba0;
		constexpr auto get_layer = 0x18eab20;
		constexpr auto set_layer = 0x18eac30;
		constexpr auto SetActive = 0x18ea7a0;
		constexpr auto get_activeSelf = 0x18eaaa0;
		constexpr auto get_activeInHierarchy = 0x18eaa60;
		constexpr auto get_isStatic = 0x18eaae0;
		constexpr auto set_isStatic = 0x18eabe0;
		constexpr auto get_tag = 0x18eab60;
		constexpr auto set_tag = 0x18eac70;
		constexpr auto CompareTag = 0x18ea1a0;
		constexpr auto ctor = 0x18ea9d0;
		constexpr auto Internal_CreateGameObject = 0x18ea5d0;
		constexpr auto Find = 0x18ea230;
		constexpr auto get_gameObject = 0xe14140;
	};

	namespace UnityEngine_Vector2 {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto oneVector = 0x8;
		constexpr auto upVector = 0x10;
		constexpr auto downVector = 0x18;
		constexpr auto leftVector = 0x20;
		constexpr auto rightVector = 0x28;
		constexpr auto positiveInfinityVector = 0x30;
		constexpr auto negativeInfinityVector = 0x38;

		constexpr auto get_Item = 0x232780;
		constexpr auto set_Item = 0x232870;
		constexpr auto ctor = 0xf9290;
		constexpr auto Lerp = 0x219cb80;
		constexpr auto Scale = 0x219cd40;
		constexpr auto Normalize = 0x232610;
		constexpr auto get_normalized = 0x232820;
		constexpr auto ToString = 0x232620;
		constexpr auto GetHashCode = 0x2325d0;
		constexpr auto Equals = 0x232500;
		constexpr auto Dot = 0x219ca40;
		constexpr auto get_magnitude = 0x232810;
		constexpr auto get_sqrMagnitude = 0x232850;
		constexpr auto Angle = 0x219c820;
		constexpr auto Distance = 0x219c9b0;
		constexpr auto op_Addition = 0x219d2f0;
		constexpr auto op_Subtraction = 0x219d530;
		constexpr auto op_Multiply = 0x219cd40;
		constexpr auto op_Division = 0x219d360;
		constexpr auto op_UnaryNegation = 0x219d570;
		constexpr auto op_Equality = 0x219d3a0;
		constexpr auto op_Inequality = 0x219d450;
		constexpr auto op_Implicit = 0x219d430;
		constexpr auto get_zero = 0x219d280;
		constexpr auto get_one = 0x219d110;
		constexpr auto get_up = 0x219d210;
		constexpr auto get_right = 0x219d180;
		constexpr auto cctor = 0x219cee0;
	};

	namespace UnityEngine_GUIUtility {
		constexpr auto s_OriginalID = 0x4;
		constexpr auto takeCapture = 0x8;
		constexpr auto releaseCapture = 0x10;
		constexpr auto processEvent = 0x18;
		constexpr auto cleanupRoots = 0x20;
		constexpr auto endContainerGUIFromException = 0x28;
		constexpr auto guiChanged = 0x30;
		constexpr auto guiIsExitingk__BackingField = 0x38;
		constexpr auto s_HasCurrentWindowKeyFocusFunc = 0x40;

		constexpr auto get_pixelsPerPoint = 0x1a586f0;
		constexpr auto get_guiDepth = 0x1a586c0;
		constexpr auto set_mouseUsed = 0x1a58810;
		constexpr auto set_textFieldInput = 0x1a58890;
		constexpr auto get_systemCopyBuffer = 0x1a58720;
		constexpr auto set_systemCopyBuffer = 0x1a58850;
		constexpr auto GetControlID = 0x1a57810;
		constexpr auto BeginContainerFromOwner = 0x1a56f40;
		constexpr auto BeginContainer = 0x1a56f80;
		constexpr auto Internal_EndContainer = 0x1a57d90;
		constexpr auto CheckForTabEvent = 0x1a57150;
		constexpr auto SetKeyboardControlToFirstControlId = 0x1a585e0;
		constexpr auto SetKeyboardControlToLastControlId = 0x1a58610;
		constexpr auto HasFocusableControls = 0x1a57a30;
		constexpr auto OwnsId = 0x1a57fe0;
		constexpr auto AlignRectToDevice = 0x1a56e60;
		constexpr auto get_compositionString = 0x1a58690;
		constexpr auto set_compositionCursorPos = 0x1a58790;
		constexpr auto Internal_GetHotControl = 0x1a57e30;
		constexpr auto Internal_GetKeyboardControl = 0x1a57e60;
		constexpr auto Internal_SetHotControl = 0x1a57e90;
		constexpr auto Internal_SetKeyboardControl = 0x1a57ed0;
		constexpr auto Internal_GetDefaultSkin = 0x1a57df0;
		constexpr auto Internal_ExitGUI = 0x1a57dc0;
		constexpr auto MarkGUIChanged = 0x1a57f90;
		constexpr auto GetStateObject = 0x1a578e0;
		constexpr auto set_guiIsExiting = 0x1a587d0;
		constexpr auto get_hotControl = 0x1a57e30;
		constexpr auto set_hotControl = 0x1a57e90;
		constexpr auto TakeCapture = 0x1a58640;
		constexpr auto RemoveCapture = 0x1a58090;
		constexpr auto get_keyboardControl = 0x1a57e60;
		constexpr auto set_keyboardControl = 0x1a57ed0;
		constexpr auto HasKeyFocus = 0x1a57a60;
		constexpr auto ExitGUI = 0x1a576c0;
		constexpr auto GetDefaultSkin = 0x1a57860;
		constexpr auto ProcessEvent = 0x1a58020;
		constexpr auto EndContainer = 0x1a57280;
		constexpr auto BeginGUI = 0x1a56fc0;
		constexpr auto EndGUI = 0x1a57370;
		constexpr auto EndGUIFromException = 0x1a572d0;
		constexpr auto EndContainerGUIFromException = 0x1a57220;
		constexpr auto ResetGlobalState = 0x1a580e0;
		constexpr auto IsExitGUIException = 0x1a57f10;
		constexpr auto ShouldRethrowException = 0x1a57f10;
		constexpr auto CheckOnGUI = 0x1a57190;
		constexpr auto RotateAroundPivot = 0x1a581f0;
		constexpr auto HitTest = 0x1a57af0;
		constexpr auto GetControlID_Injected = 0x1a57710;
		constexpr auto AlignRectToDevice_Injected = 0x1a56df0;
		constexpr auto set_compositionCursorPos_Injected = 0x1a58750;
	};

	namespace BuildingBlock {
		constexpr auto forceSkinRefresh = 0x260;
		constexpr auto modelState = 0x264;
		constexpr auto lastModelState = 0x268;
		constexpr auto grade = 0x26c;
		constexpr auto lastGrade = 0x270;
		constexpr auto currentSkin = 0x278;
		constexpr auto skinChange = 0x280;
		constexpr auto placeholderRenderer = 0x288;
		constexpr auto placeholderCollider = 0x290;
		constexpr auto updateSkinQueueClient = 0x8;
		constexpr auto CullBushes = 0x298;
		constexpr auto blockDefinition = 0x2a0;
		constexpr auto outsideLookupOffsets = 0x10;

		constexpr auto OnRpcMessage = 0x469140;
		constexpr auto ClientInit = 0x467060;
		constexpr auto PostNetworkUpdate = 0x469650;
		constexpr auto GetBuildMenu = 0x4674c0;
		constexpr auto RefreshSkin = 0x4696b0;
		constexpr auto SpawnGibs = 0x469be0;
		constexpr auto ShouldLerp = 0x2f6010;
		constexpr auto NeedsCrosshair = 0x2f6010;
		constexpr auto CanDemolish = 0x466ab0;
		constexpr auto IsDemolishable = 0x4688a0;
		constexpr auto HasDemolishPrivilege = 0x467ea0;
		constexpr auto Demolish = 0x4672b0;
		constexpr auto DemolishOptions = 0x467140;
		constexpr auto SetConditionalModel = 0x469aa0;
		constexpr auto GetConditionalModel = 0x467690;
		constexpr auto get_currentGrade = 0x46a420;
		constexpr auto GetGrade = 0x4676b0;
		constexpr auto CanChangeToGrade = 0x466a80;
		constexpr auto HasUpgradePrivilege = 0x468060;
		constexpr auto IsUpgradeBlocked = 0x468d80;
		constexpr auto CanAffordUpgrade = 0x4668b0;
		constexpr auto SetGrade = 0x469ab0;
		constexpr auto UpdateGrade = 0x469c70;
		constexpr auto UpgradeToGrade = 0x46a060;
		constexpr auto GradeChangingOptions = 0x467a50;
		constexpr auto NeedsSkinChange = 0x4690a0;
		constexpr auto UpdateSkin = 0x469d90;
		constexpr auto DestroySkin = 0x467320;
		constexpr auto UpdatePlaceholder = 0x469cb0;
		constexpr auto ChangeSkin = 0x466ee0;
		constexpr auto ShouldBlockProjectiles = 0x469bd0;
		constexpr auto MaxHealth = 0x469070;
		constexpr auto BuildCost = 0x466880;
		constexpr auto DrawHighlight = 0x4673d0;
		constexpr auto Highlight = 0x4681b0;
		constexpr auto CanRotate = 0x466c10;
		constexpr auto IsRotatable = 0x468bb0;
		constexpr auto IsRotationBlocked = 0x468c00;
		constexpr auto HasRotationPrivilege = 0x467f80;
		constexpr auto Rotation = 0x4699f0;
		constexpr auto RotationOptions = 0x4697b0;
		constexpr auto Load = 0x468f00;
		constexpr auto ResetState = 0x469740;
		constexpr auto InitShared = 0x468820;
		constexpr auto PostInitShared = 0x4695e0;
		constexpr auto DestroyShared = 0x467310;
		constexpr auto Categorize = 0x466c90;
		constexpr auto BoundsPadding = 0x2fe7e0;
		constexpr auto IsOutside = 0x468920;
		constexpr auto ctor = 0x46a400;
		constexpr auto cctor = 0x46a110;
	};

	namespace Construction {
		constexpr auto info = 0x98;
		constexpr auto canBypassBuildingPermission = 0xb8;
		constexpr auto canRotateBeforePlacement = 0xb9;
		constexpr auto canRotateAfterPlacement = 0xba;
		constexpr auto checkVolumeOnRotate = 0xbb;
		constexpr auto checkVolumeOnUpgrade = 0xbc;
		constexpr auto canPlaceAtMaxDistance = 0xbd;
		constexpr auto placeOnWater = 0xbe;
		constexpr auto rotationAmount = 0xc0;
		constexpr auto applyStartingRotation = 0xcc;
		constexpr auto healthMultiplier = 0xd8;
		constexpr auto costMultiplier = 0xdc;
		constexpr auto maxplaceDistance = 0xe0;
		constexpr auto guideMesh = 0xe8;
		constexpr auto allSockets = 0xf0;
		constexpr auto allProximities = 0xf8;
		constexpr auto defaultGrade = 0x100;
		constexpr auto socketHandle = 0x108;
		constexpr auto bounds = 0x110;
		constexpr auto isBuildingPrivilege = 0x128;
		constexpr auto grades = 0x130;
		constexpr auto deployable = 0x138;
		constexpr auto placeholder = 0x140;

		constexpr auto UpdatePlacement = 0x6094e0;
		constexpr auto TestPlacingThroughRock = 0x608b00;
		constexpr auto TestPlacingThroughWall = 0x608dc0;
		constexpr auto TestPlacingCloseToRoad = 0x608650;
		constexpr auto ShowAsNeutral = 0x608260;
		constexpr auto get_DebugDraw = 0x60a350;
		constexpr auto HasMaleSockets = 0x608160;
		constexpr auto FindMaleSockets = 0x607fa0;
		constexpr auto CreateGuideSkin = 0x607550;
		constexpr auto AttributeSetup = 0x607190;
		constexpr auto GetIndexedType = 0x608100;
		constexpr auto ctor = 0x608560;
	};

	namespace ConstructionGrade {
		constexpr auto construction = 0x98;
		constexpr auto gradeBase = 0xa0;
		constexpr auto skinObject = 0xa8;
		constexpr auto _costToBuild = 0xb0;

		constexpr auto get_maxHealth = 0x604840;
		constexpr auto get_costToBuild = 0x6045f0;
		constexpr auto GetIndexedType = 0x604530;
		constexpr auto ctor = 0x604590;
	};

	namespace Hammer {

		constexpr auto GetBuildingBlock = 0x594b00;
		constexpr auto GetVehicleModule = 0x594bc0;
		constexpr auto OnFrame = 0x594c80;
		constexpr auto OnInput = 0x594e20;
		constexpr auto OpenContextMenu = 0x594fd0;
		constexpr auto CanHit = 0x5948a0;
		constexpr auto DoAttackShared = 0x5949d0;
		constexpr auto ctor = 0x5950b0;
	};

	namespace UnityEngine_ImageConversion {

		constexpr auto EncodeToPNG = 0x231eda0;
		constexpr auto EncodeToJPG = 0x231ed60;
		constexpr auto LoadImage = 0x231ee30;
	};

	namespace ConVar_Client {
		constexpr auto maxpacketspersecond_effect = 0x4;
		constexpr auto maxpacketspersecond_voice = 0x8;
		constexpr auto prediction = 0xc;
		constexpr auto maxunack = 0x10;
		constexpr auto pushtotalk = 0x14;
		constexpr auto debugdragdrop = 0x15;
		constexpr auto debuglootsounds = 0x16;
		constexpr auto headlerp = 0x18;
		constexpr auto headlerp_inertia = 0x1c;
		constexpr auto camlerp = 0x20;
		constexpr auto camlerptilt = 0x24;
		constexpr auto camzoomlerp = 0x28;
		constexpr auto camspeed = 0x2c;
		constexpr auto camzoomspeed = 0x30;
		constexpr auto camlookspeed = 0x34;
		constexpr auto camdist = 0x38;
		constexpr auto cambone = 0x40;
		constexpr auto camfov = 0x48;
		constexpr auto camoffset = 0x4c;
		constexpr auto camoffset_relative = 0x58;
		constexpr auto sortSkinsRecentlyUsed = 0x59;
		constexpr auto lookatradius = 0x5c;
		constexpr auto RockSkin = 0x60;
		constexpr auto UnderwearSkin = 0x64;

		constexpr auto get_maxreceivetime = 0x4b7f60;
		constexpr auto set_maxreceivetime = 0x4b8e00;
		constexpr auto get_minreceivefraction = 0x4b7fc0;
		constexpr auto set_minreceivefraction = 0x4b8ec0;
		constexpr auto connect = 0x4b7930;
		constexpr auto connecthidden = 0x4b7bb0;
		constexpr auto fps = 0x4b7ef0;
		constexpr auto disconnect = 0x4b7c90;
		constexpr auto report = 0x4b8680;
		constexpr auto printpos = 0x4b8420;
		constexpr auto printrot = 0x4b8540;
		constexpr auto printeyes = 0x4b80c0;
		constexpr auto printinput = 0x4b8310;
		constexpr auto printhead = 0x4b8200;
		constexpr auto GetClientFolder = 0x4b6de0;
		constexpr auto sv = 0x4b9230;
		constexpr auto consoletoggle = 0x4b7c20;
		constexpr auto ping = 0x4b8020;
		constexpr auto benchmark = 0x4b7800;
		constexpr auto setunderwear = 0x4b8f80;
		constexpr auto PlayerSeed = 0x4b6e10;
		constexpr auto ShufflePlayerSeed = 0x4b72b0;
		constexpr auto ReportPlayer = 0x4b71c0;
		constexpr auto ReportBug = 0x4b7100;
		constexpr auto ctor = 0x4b77a0;
		constexpr auto cctor = 0x4b7570;
	};

	namespace System_IO_File {

		constexpr auto AppendAllText = 0x135fda0;
		constexpr auto Copy = 0x1360560;
		constexpr auto InternalCopy = 0x1360db0;
		constexpr auto Create = 0x13605f0;
		constexpr auto Delete = 0x1360660;
		constexpr auto Exists = 0x13608a0;
		constexpr auto GetAttributes = 0x1360a70;
		constexpr auto GetCreationTime = 0x1360b50;
		constexpr auto GetLastWriteTime = 0x1360c80;
		constexpr auto Move = 0x1360f30;
		constexpr auto Open = 0x13614b0;
		constexpr auto OpenRead = 0x13613e0;
		constexpr auto OpenText = 0x1361450;
		constexpr auto SetCreationTime = 0x1361950;
		constexpr auto SetCreationTimeUtc = 0x135fbf0;
		constexpr auto SetLastAccessTime = 0x1361aa0;
		constexpr auto SetLastAccessTimeUtc = 0x135fc30;
		constexpr auto SetLastWriteTime = 0x1361bf0;
		constexpr auto SetLastWriteTimeUtc = 0x135fc70;
		constexpr auto ReadAllBytes = 0x1361530;
		constexpr auto ReadAllText = 0x1361720;
		constexpr auto WriteAllBytes = 0x1361d40;
		constexpr auto WriteAllText = 0x1361e90;
		constexpr auto get_DefaultLocalFileTime = 0x1362000;
		constexpr auto ReadLines = 0x1361830;
		constexpr auto FillAttributeInfo = 0x1360980;
	};

	namespace System_IO_Directory {

		constexpr auto GetFiles = 0x135f380;
		constexpr auto InternalGetFiles = 0x135f620;
		constexpr auto GetDirectories = 0x135f020;
		constexpr auto InternalGetDirectories = 0x135f4f0;
		constexpr auto GetFileSystemEntries = 0x135f0b0;
		constexpr auto InternalGetFileSystemEntries = 0x135f5f0;
		constexpr auto InternalGetFileDirectoryNames = 0x135f520;
		constexpr auto EnumerateFiles = 0x135eb60;
		constexpr auto InternalEnumerateFiles = 0x135f4c0;
		constexpr auto EnumerateFileSystemNames = 0x135ea00;
		constexpr auto CreateDirectory = 0x135e530;
		constexpr auto CreateDirectoriesInternal = 0x135e380;
		constexpr auto Delete = 0x135e760;
		constexpr auto RecursiveDelete = 0x135f9d0;
		constexpr auto Exists = 0x135ebf0;
		constexpr auto GetCurrentDirectory = 0x135ecb0;
		constexpr auto InsecureGetCurrentDirectory = 0x135f420;
		constexpr auto GetLogicalDrives = 0x135f410;
		constexpr auto Move = 0x135f650;
		constexpr auto SetCreationTime = 0x135fc20;
		constexpr auto SetCreationTimeUtc = 0x135fbf0;
		constexpr auto SetLastAccessTime = 0x135fc60;
		constexpr auto SetLastAccessTimeUtc = 0x135fc30;
		constexpr auto SetLastWriteTime = 0x135fca0;
		constexpr auto SetLastWriteTimeUtc = 0x135fc70;
		constexpr auto GetDemandDir = 0x135ed50;
	};

	namespace System_IO_Path {
		constexpr auto AltDirectorySeparatorChar = 0x8;
		constexpr auto DirectorySeparatorChar = 0xa;
		constexpr auto PathSeparator = 0xc;
		constexpr auto DirectorySeparatorStr = 0x10;
		constexpr auto VolumeSeparatorChar = 0x18;
		constexpr auto PathSeparatorChars = 0x20;
		constexpr auto dirEqualsVolume = 0x28;
		constexpr auto trimEndCharsWindows = 0x30;
		constexpr auto trimEndCharsUnix = 0x38;

		constexpr auto ChangeExtension = 0x1659d10;
		constexpr auto Combine = 0x165a6d0;
		constexpr auto CleanPath = 0x165a1e0;
		constexpr auto GetDirectoryName = 0x165af60;
		constexpr auto GetExtension = 0x165b370;
		constexpr auto GetFileName = 0x165b4e0;
		constexpr auto GetFileNameWithoutExtension = 0x165b480;
		constexpr auto GetFullPath = 0x165b9f0;
		constexpr auto GetFullPathInternal = 0x165b5f0;
		constexpr auto GetFullPathName = 0x165b650;
		constexpr auto WindowsDriveAdjustment = 0x165da90;
		constexpr auto InsecureGetFullPath = 0x165c770;
		constexpr auto IsDirectorySeparator = 0x165d1a0;
		constexpr auto GetPathRoot = 0x165bb60;
		constexpr auto GetTempFileName = 0x165c2d0;
		constexpr auto GetTempPath = 0x165c650;
		constexpr auto get_temp_path = 0x165e180;
		constexpr auto IsPathRooted = 0x165d230;
		constexpr auto GetInvalidFileNameChars = 0x165ba50;
		constexpr auto GetInvalidPathChars = 0x165baf0;
		constexpr auto findExtension = 0x165dfe0;
		constexpr auto cctor = 0x165dd40;
		constexpr auto GetServerAndShare = 0x165c090;
		constexpr auto SameRoot = 0x165d400;
		constexpr auto CanonicalizePath = 0x16594e0;
		constexpr auto Validate = 0x165d730;
		constexpr auto get_DirectorySeparatorCharAsString = 0x165e080;
		constexpr auto get_TrimEndChars = 0x165e0e0;
		constexpr auto CheckSearchPattern = 0x165a030;
		constexpr auto CheckInvalidPathChars = 0x1659f20;
		constexpr auto InternalCombine = 0x165ceb0;
	};

	namespace System_IO_FileStream {
		constexpr auto buf_recycle_lock = 0x8;
		constexpr auto buf = 0x28;
		constexpr auto name = 0x30;
		constexpr auto safeHandle = 0x38;
		constexpr auto isExposed = 0x40;
		constexpr auto append_startpos = 0x48;
		constexpr auto access = 0x50;
		constexpr auto owner = 0x54;
		constexpr auto async = 0x55;
		constexpr auto canseek = 0x56;
		constexpr auto anonymous = 0x57;
		constexpr auto buf_dirty = 0x58;
		constexpr auto buf_size = 0x5c;
		constexpr auto buf_length = 0x60;
		constexpr auto buf_offset = 0x64;
		constexpr auto buf_start = 0x68;

		constexpr auto ctor = 0x1653190;
		constexpr auto Init = 0x16517d0;
		constexpr auto get_CanRead = 0x1653b70;
		constexpr auto get_CanWrite = 0x1653b90;
		constexpr auto get_CanSeek = 0x1653b80;
		constexpr auto get_Name = 0x32bb20;
		constexpr auto get_Length = 0x1653bb0;
		constexpr auto get_Position = 0x1653d30;
		constexpr auto set_Position = 0x1653f00;
		constexpr auto get_SafeFileHandle = 0x1653ec0;
		constexpr auto ExposeHandle = 0x16510e0;
		constexpr auto ReadByte = 0x1651b00;
		constexpr auto WriteByte = 0x1652770;
		constexpr auto Read = 0x1651f40;
		constexpr auto ReadInternal = 0x1651db0;
		constexpr auto BeginRead = 0x16503d0;
		constexpr auto EndRead = 0x1650de0;
		constexpr auto Write = 0x1652ba0;
		constexpr auto WriteInternal = 0x16528e0;
		constexpr auto BeginWrite = 0x16506c0;
		constexpr auto EndWrite = 0x1650f70;
		constexpr auto Seek = 0x1652290;
		constexpr auto SetLength = 0x1652520;
		constexpr auto Flush = 0x1651320;
		constexpr auto Finalize = 0xf13b80;
		constexpr auto Dispose = 0x1650aa0;
		constexpr auto ReadAsync = 0x1651af0;
		constexpr auto WriteAsync = 0x1652760;
		constexpr auto ReadSegment = 0x1651e80;
		constexpr auto WriteSegment = 0x1652b30;
		constexpr auto FlushBuffer = 0x1651120;
		constexpr auto FlushBufferIfDirty = 0x1651110;
		constexpr auto RefillBuffer = 0x1652250;
		constexpr auto ReadData = 0x1651c70;
		constexpr auto InitBuffer = 0x1651540;
		constexpr auto GetSecureFileName = 0x16513a0;
		constexpr auto cctor = 0x1652de0;
	};

	namespace System_String {
		constexpr auto m_stringLength = 0x10;
		constexpr auto m_firstChar = 0x14;

		constexpr auto Join = 0x18b6870;
		constexpr auto CompareOrdinalIgnoreCaseHelper = 0x18b0380;
		constexpr auto EqualsHelper = 0x18b38a0;
		constexpr auto CompareOrdinalHelper = 0x18b01d0;
		constexpr auto Equals = 0x18b3cc0;
		constexpr auto op_Equality = 0x18b3e50;
		constexpr auto op_Inequality = 0x18bb1a0;
		constexpr auto get_Chars = 0x18bae70;
		constexpr auto CopyTo = 0x18b25e0;
		constexpr auto ToCharArray = 0x18b9e50;
		constexpr auto IsNullOrEmpty = 0xf29120;
		constexpr auto IsNullOrWhiteSpace = 0x18b64c0;
		constexpr auto GetHashCode = 0x18b4d70;
		constexpr auto GetLegacyNonRandomizedHashCode = 0x18b4d70;
		constexpr auto Split = 0x18b8e70;
		constexpr auto SplitInternal = 0x18b8c20;
		constexpr auto InternalSplitKeepEmptyEntries = 0x18b5e20;
		constexpr auto InternalSplitOmitEmptyEntries = 0x18b60d0;
		constexpr auto MakeSeparatorList = 0x18b77e0;
		constexpr auto Substring = 0x18b9500;
		constexpr auto InternalSubString = 0x18b6420;
		constexpr auto Trim = 0x18bab40;
		constexpr auto TrimStart = 0x18baa10;
		constexpr auto TrimEnd = 0x18ba3d0;
		constexpr auto ctor = 0x18bad50;
		constexpr auto CreateStringFromEncoding = 0x18b2890;
		constexpr auto Normalize = 0x18b7b40;
		constexpr auto FastAllocateString = 0x18b4220;
		constexpr auto FillStringChecked = 0x18b4230;
		constexpr auto wstrcpy = 0x18bb240;
		constexpr auto CtorCharArray = 0x18b3130;
		constexpr auto CtorCharArrayStartLength = 0x18b2f50;
		constexpr auto wcslen = 0x18bb1e0;
		constexpr auto CtorCharPtr = 0x18b33d0;
		constexpr auto CtorCharPtrStartLength = 0x18b31d0;
		constexpr auto Compare = 0x18b1340;
		constexpr auto CompareTo = 0x18b0740;
		constexpr auto CompareOrdinal = 0x18b0600;
		constexpr auto Contains = 0x18b2430;
		constexpr auto EndsWith = 0x18b3890;
		constexpr auto IndexOf = 0x18b54e0;
		constexpr auto IndexOfAny = 0x18b4f00;
		constexpr auto LastIndexOf = 0x18b7600;
		constexpr auto LastIndexOfAny = 0x18b70a0;
		constexpr auto PadLeft = 0x18b7db0;
		constexpr auto PadRight = 0x18b7e10;
		constexpr auto StartsWith = 0x18b9190;
		constexpr auto ToLower = 0x18b9fc0;
		constexpr auto ToLowerInvariant = 0x18b9ed0;
		constexpr auto ToUpper = 0x18ba240;
		constexpr auto ToUpperInvariant = 0x18ba150;
		constexpr auto ToString = 0x325cd0;
		constexpr auto Clone = 0x325cd0;
		constexpr auto IsBOMWhitespace = 0x2f6010;
		constexpr auto TrimHelper = 0x18ba750;
		constexpr auto CreateTrimmedString = 0x18b2eb0;
		constexpr auto Insert = 0x18b5cb0;
		constexpr auto Replace = 0x18b89d0;
		constexpr auto Remove = 0x18b7e30;
		constexpr auto Format = 0x18b43b0;
		constexpr auto FormatHelper = 0x18b42d0;
		constexpr auto Copy = 0x18b27e0;
		constexpr auto Concat = 0x18b1a00;
		constexpr auto ConcatArray = 0x18b1630;
		constexpr auto GetTypeCode = 0x159e670;
		constexpr auto SystemIConvertibleToBoolean = 0x18b97a0;
		constexpr auto SystemIConvertibleToChar = 0x18b9880;
		constexpr auto SystemIConvertibleToSByte = 0x18b9ba0;
		constexpr auto SystemIConvertibleToByte = 0x18b9810;
		constexpr auto SystemIConvertibleToInt16 = 0x18b9a50;
		constexpr auto SystemIConvertibleToUInt16 = 0x18b9d00;
		constexpr auto SystemIConvertibleToInt32 = 0x18b9ac0;
		constexpr auto SystemIConvertibleToUInt32 = 0x18b9d70;
		constexpr auto SystemIConvertibleToInt64 = 0x18b9b30;
		constexpr auto SystemIConvertibleToUInt64 = 0x18b9de0;
		constexpr auto SystemIConvertibleToSingle = 0x18b9c10;
		constexpr auto SystemIConvertibleToDouble = 0x18b99e0;
		constexpr auto SystemIConvertibleToDecimal = 0x18b9960;
		constexpr auto SystemIConvertibleToDateTime = 0x18b98f0;
		constexpr auto SystemIConvertibleToType = 0x18b9c80;
		constexpr auto SystemCollectionsGenericIEnumerableSystemCharGetEnumerator = 0x18b96e0;
		constexpr auto SystemCollectionsIEnumerableGetEnumerator = 0x18b9740;
		constexpr auto get_Length = 0x3bfd30;
		constexpr auto CompareOrdinalUnchecked = 0x18b0480;
		constexpr auto IndexOfUnchecked = 0x18b5140;
		constexpr auto IndexOfAnyUnchecked = 0x18b4dd0;
		constexpr auto LastIndexOfUnchecked = 0x18b70e0;
		constexpr auto LastIndexOfAnyUnchecked = 0x18b6de0;
		constexpr auto nativeCompareOrdinalEx = 0x18bb020;
		constexpr auto ReplaceInternal = 0x18b8230;
		constexpr auto ReplaceUnchecked = 0x18b8480;
		constexpr auto ReplaceFallback = 0x18b80d0;
		constexpr auto PadHelper = 0x18b7bf0;
		constexpr auto StartsWithOrdinalUnchecked = 0x18b9140;
		constexpr auto IsAscii = 0x18b6490;
		constexpr auto CharCopy = 0x18b0180;
		constexpr auto memset = 0x18baf30;
		constexpr auto memcpy = 0x18baf20;
		constexpr auto bzero = 0x18bada0;
		constexpr auto bzero_aligned_1 = 0x18bad60;
		constexpr auto bzero_aligned_2 = 0x18bad70;
		constexpr auto bzero_aligned_4 = 0x18bad80;
		constexpr auto bzero_aligned_8 = 0x18bad90;
		constexpr auto memcpy_aligned_1 = 0x18baee0;
		constexpr auto memcpy_aligned_2 = 0x18baef0;
		constexpr auto memcpy_aligned_4 = 0x18baf00;
		constexpr auto memcpy_aligned_8 = 0x18baf10;
		constexpr auto CreateString = 0x18b2db0;
	};

	namespace ConsoleNetwork {

		constexpr auto Init = 0x602240;
		constexpr auto ClientRunOnServer = 0x602000;
		constexpr auto OnConsoleMessageFromServer = 0x6023d0;
		constexpr auto OnConsoleCommandfromServer = 0x6022d0;
	};

	namespace ConsoleSystem {
		constexpr auto ClientCanRunAdminCommands = 0x8;
		constexpr auto OnSendToServer = 0x10;
		constexpr auto OnReplicatedVarChanged = 0x18;
		constexpr auto LastError = 0x20;
		constexpr auto CurrentArgs = 0x28;

		constexpr auto UpdateValuesFromCommandLine = 0x22b4270;
		constexpr auto SendToServer = 0x22b41c0;
		constexpr auto add_OnReplicatedVarChanged = 0x22b44d0;
		constexpr auto remove_OnReplicatedVarChanged = 0x22b45d0;
		constexpr auto RunFile = 0x22b3830;
		constexpr auto Run = 0x22b39c0;
		constexpr auto Internal = 0x22b3230;
		constexpr auto BuildCommand = 0x22b2dc0;
		constexpr auto SaveToConfigString = 0x22b3dc0;
		constexpr auto ctor = 0x305a40;
		constexpr auto cctor = 0x2f6e50;
	};

	namespace Effect {
		constexpr auto Up = 0x50;
		constexpr auto worldPos = 0x5c;
		constexpr auto worldNrm = 0x68;
		constexpr auto attached = 0x74;
		constexpr auto transform = 0x78;
		constexpr auto gameObject = 0x80;
		constexpr auto pooledString = 0x88;
		constexpr auto broadcast = 0x90;

		constexpr auto ctor = 0x9e9e90;
		constexpr auto Init = 0x9e8d10;
		constexpr auto NetworkConstruct = 0x9e9010;
		constexpr auto Clear = 0x9e8b30;
		constexpr auto Strip = 0x9e9cf0;
		constexpr auto cctor = 0x9e9e30;
	};

	namespace EffectLibrary {

		constexpr auto SetupEffect = 0x9e6090;
		constexpr auto GenericEffectSpawn = 0x9e5d00;
		constexpr auto ProjectileEffectSpawn = 0x9e5d30;
		constexpr auto Run = 0x9e6040;
		constexpr auto CreateEffect = 0x9e5b30;
	};

	namespace EffectData {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto type = 0x14;
		constexpr auto pooledstringid = 0x18;
		constexpr auto number = 0x1c;
		constexpr auto origin = 0x20;
		constexpr auto normal = 0x2c;
		constexpr auto scale = 0x38;
		constexpr auto entity = 0x3c;
		constexpr auto bone = 0x40;
		constexpr auto source = 0x48;

		constexpr auto ResetToPool = 0x1e84ad0;
		constexpr auto Dispose = 0x1e845d0;
		constexpr auto EnterPool = 0xfa5990;
		constexpr auto LeavePool = 0xfa59c0;
		constexpr auto CopyTo = 0x1e82bf0;
		constexpr auto Copy = 0x1e82c50;
		constexpr auto Deserialize = 0x1e83ee0;
		constexpr auto DeserializeLengthDelimited = 0x1e82d10;
		constexpr auto DeserializeLength = 0x1e831c0;
		constexpr auto FromProto = 0x1e84750;
		constexpr auto WriteToStream = 0x1e857e0;
		constexpr auto WriteToStreamDelta = 0x1e85800;
		constexpr auto ReadFromStream = 0x1e84ab0;
		constexpr auto SerializeDelta = 0x1e84cd0;
		constexpr auto Serialize = 0x1e85490;
		constexpr auto ToProtoBytes = 0x1e857d0;
		constexpr auto ToProto = 0x1e857e0;
		constexpr auto SerializeToBytes = 0x1e85380;
		constexpr auto SerializeLengthDelimited = 0x1e852d0;
		constexpr auto ctor = 0xecd540;
	};

	namespace EffectNetwork {

		constexpr auto OnReceivedEffect = 0x9e6d40;
		constexpr auto cctor = 0x9e7040;
	};

	namespace UnityEngine_Rigidbody {

		constexpr auto get_velocity = 0x22a76a0;
		constexpr auto set_velocity = 0x22a7bc0;
		constexpr auto set_angularVelocity = 0x22a7790;
		constexpr auto set_drag = 0x22a7950;
		constexpr auto set_angularDrag = 0x22a76f0;
		constexpr auto get_mass = 0x22a7590;
		constexpr auto set_mass = 0x22a7a30;
		constexpr auto get_useGravity = 0x22a7610;
		constexpr auto set_useGravity = 0x22a7b20;
		constexpr auto get_isKinematic = 0x22a7550;
		constexpr auto set_isKinematic = 0x22a79e0;
		constexpr auto set_constraints = 0x22a78c0;
		constexpr auto get_collisionDetectionMode = 0x22a7510;
		constexpr auto set_collisionDetectionMode = 0x22a7880;
		constexpr auto set_centerOfMass = 0x22a7830;
		constexpr auto set_detectCollisions = 0x22a7900;
		constexpr auto set_position = 0x22a7ad0;
		constexpr auto set_interpolation = 0x22a79a0;
		constexpr auto get_sleepThreshold = 0x22a75d0;
		constexpr auto IsSleeping = 0x22a7490;
		constexpr auto WakeUp = 0x22a74d0;
		constexpr auto AddForce = 0x22a7370;
		constexpr auto AddRelativeTorque = 0x22a7430;
		constexpr auto AddForceAtPosition = 0x22a7250;
		constexpr auto ctor = 0x18d1d70;
		constexpr auto get_velocity_Injected = 0x22a7650;
		constexpr auto set_velocity_Injected = 0x22a7b70;
		constexpr auto set_angularVelocity_Injected = 0x22a7740;
		constexpr auto set_centerOfMass_Injected = 0x22a77e0;
		constexpr auto set_position_Injected = 0x22a7a80;
		constexpr auto AddForce_Injected = 0x22a72c0;
		constexpr auto AddRelativeTorque_Injected = 0x22a73d0;
		constexpr auto AddForceAtPosition_Injected = 0x22a71e0;
	};

	namespace UnityEngine_CapsuleCollider {

		constexpr auto get_center = 0x229fc70;
		constexpr auto set_center = 0x229fdd0;
		constexpr auto get_radius = 0x229fd40;
		constexpr auto set_radius = 0x229feb0;
		constexpr auto get_height = 0x229fd00;
		constexpr auto set_height = 0x229fe60;
		constexpr auto get_direction = 0x229fcc0;
		constexpr auto set_direction = 0x229fe20;
		constexpr auto get_center_Injected = 0x229fc20;
		constexpr auto set_center_Injected = 0x229fd80;
	};

	namespace UnityEngine_Collider {

		constexpr auto get_enabled = 0x22a0490;
		constexpr auto set_enabled = 0x22a0550;
		constexpr auto get_attachedRigidbody = 0x22a03a0;
		constexpr auto get_isTrigger = 0x22a04d0;
		constexpr auto set_isTrigger = 0x22a05a0;
		constexpr auto ClosestPoint = 0x22a00a0;
		constexpr auto get_bounds = 0x22a0430;
		constexpr auto get_sharedMaterial = 0x22a0510;
		constexpr auto set_sharedMaterial = 0x22a0640;
		constexpr auto set_material = 0x22a05f0;
		constexpr auto Raycast = 0x22a0250;
		constexpr auto Internal_ClosestPointOnBounds = 0x22a0170;
		constexpr auto ClosestPointOnBounds = 0x229ff50;
		constexpr auto ctor = 0x18d1d70;
		constexpr auto ClosestPoint_Injected = 0x22a0040;
		constexpr auto get_bounds_Injected = 0x22a03e0;
		constexpr auto Raycast_Injected = 0x22a01e0;
		constexpr auto Internal_ClosestPointOnBounds_Injected = 0x22a0100;
	};

	namespace TerrainHeightMap {
		constexpr auto HeightTexture = 0x48;
		constexpr auto NormalTexture = 0x50;
		constexpr auto normY = 0x58;

		constexpr auto Setup = 0x11a2770;
		constexpr auto ApplyToTerrain = 0x119eac0;
		constexpr auto GenerateTextures = 0x119ec90;
		constexpr auto ApplyTextures = 0x119ea40;
		constexpr auto GetHeight = 0x119f5b0;
		constexpr auto GetHeightFast = 0x119f390;
		constexpr auto GetHeight01 = 0x119efd0;
		constexpr auto GetTriangulatedHeight01 = 0x11a0ca0;
		constexpr auto GetSrcHeight01 = 0x87b6b0;
		constexpr auto GetDstHeight01 = 0x119ef80;
		constexpr auto GetNormal = 0x11a0450;
		constexpr auto GetNormalSobel = 0x119f900;
		constexpr auto GetSlope = 0x11a0aa0;
		constexpr auto GetSlope01 = 0x11a06d0;
		constexpr auto SetHeight = 0x11a1de0;
		constexpr auto AddHeight = 0x119e8a0;
		constexpr auto LowerHeight = 0x11a1350;
		constexpr auto RaiseHeight = 0x11a1ab0;
		constexpr auto ctor = 0x11a2a80;
	};

	namespace TerrainMeta {
		constexpr auto terrain = 0x18;
		constexpr auto config = 0x20;
		constexpr auto paint = 0x28;
		constexpr auto currentPaintMode = 0x2c;
		constexpr auto Terraink__BackingField = 0x8;
		constexpr auto Transformk__BackingField = 0x10;
		constexpr auto Positionk__BackingField = 0x18;
		constexpr auto Sizek__BackingField = 0x24;
		constexpr auto OneOverSizek__BackingField = 0x30;
		constexpr auto HighestPointk__BackingField = 0x3c;
		constexpr auto LowestPointk__BackingField = 0x48;
		constexpr auto LootAxisAnglek__BackingField = 0x54;
		constexpr auto BiomeAxisAnglek__BackingField = 0x58;
		constexpr auto Datak__BackingField = 0x60;
		constexpr auto Colliderk__BackingField = 0x68;
		constexpr auto Collisionk__BackingField = 0x70;
		constexpr auto Physicsk__BackingField = 0x78;
		constexpr auto Colorsk__BackingField = 0x80;
		constexpr auto Qualityk__BackingField = 0x88;
		constexpr auto Pathk__BackingField = 0x90;
		constexpr auto BiomeMapk__BackingField = 0x98;
		constexpr auto AlphaMapk__BackingField = 0xa0;
		constexpr auto BlendMapk__BackingField = 0xa8;
		constexpr auto HeightMapk__BackingField = 0xb0;
		constexpr auto SplatMapk__BackingField = 0xb8;
		constexpr auto TopologyMapk__BackingField = 0xc0;
		constexpr auto WaterMapk__BackingField = 0xc8;
		constexpr auto DistanceMapk__BackingField = 0xd0;
		constexpr auto PlacementMapk__BackingField = 0xd8;
		constexpr auto Texturingk__BackingField = 0xe0;

		constexpr auto get_Config = 0x11a9370;
		constexpr auto set_Config = 0x11a9af0;
		constexpr auto get_Terrain = 0x11a9780;
		constexpr auto set_Terrain = 0x11a9fa0;
		constexpr auto get_Transform = 0x11a9840;
		constexpr auto set_Transform = 0x11aa090;
		constexpr auto get_Position = 0x11a9660;
		constexpr auto set_Position = 0x11a9e60;
		constexpr auto get_Size = 0x11a96f0;
		constexpr auto set_Size = 0x11a9f00;
		constexpr auto get_Center = 0x11a9170;
		constexpr auto get_OneOverSize = 0x11a9550;
		constexpr auto set_OneOverSize = 0x11a9d20;
		constexpr auto get_HighestPoint = 0x11a9470;
		constexpr auto set_HighestPoint = 0x11a9c30;
		constexpr auto get_LowestPoint = 0x11a9500;
		constexpr auto set_LowestPoint = 0x11a9cd0;
		constexpr auto get_LootAxisAngle = 0x11a94c0;
		constexpr auto set_LootAxisAngle = 0x11a9c80;
		constexpr auto get_BiomeAxisAngle = 0x11a90b0;
		constexpr auto set_BiomeAxisAngle = 0x11a9910;
		constexpr auto get_Data = 0x11a93b0;
		constexpr auto set_Data = 0x11a9b40;
		constexpr auto get_Collider = 0x11a92b0;
		constexpr auto set_Collider = 0x11a9a00;
		constexpr auto get_Collision = 0x11a92f0;
		constexpr auto set_Collision = 0x11a9a50;
		constexpr auto get_Physics = 0x11a95e0;
		constexpr auto set_Physics = 0x11a9dc0;
		constexpr auto get_Colors = 0x11a9330;
		constexpr auto set_Colors = 0x11a9aa0;
		constexpr auto get_Quality = 0x11a96b0;
		constexpr auto set_Quality = 0x11a9eb0;
		constexpr auto get_Path = 0x11a95a0;
		constexpr auto set_Path = 0x11a9d70;
		constexpr auto get_BiomeMap = 0x11a90f0;
		constexpr auto set_BiomeMap = 0x11a9960;
		constexpr auto get_AlphaMap = 0x11a9070;
		constexpr auto set_AlphaMap = 0x11a98c0;
		constexpr auto get_BlendMap = 0x11a9130;
		constexpr auto set_BlendMap = 0x11a99b0;
		constexpr auto get_HeightMap = 0x11a9430;
		constexpr auto set_HeightMap = 0x11a9be0;
		constexpr auto get_SplatMap = 0x11a9740;
		constexpr auto set_SplatMap = 0x11a9f50;
		constexpr auto get_TopologyMap = 0x11a9800;
		constexpr auto set_TopologyMap = 0x11aa040;
		constexpr auto get_WaterMap = 0x11a9880;
		constexpr auto set_WaterMap = 0x11aa0e0;
		constexpr auto get_DistanceMap = 0x11a93f0;
		constexpr auto set_DistanceMap = 0x11a9b90;
		constexpr auto get_PlacementMap = 0x11a9620;
		constexpr auto set_PlacementMap = 0x11a9e10;
		constexpr auto get_Texturing = 0x11a97c0;
		constexpr auto set_Texturing = 0x11a9ff0;
		constexpr auto OutOfBounds = 0x11a8780;
		constexpr auto OutOfMargin = 0x11a8940;
		constexpr auto RandomPointOffshore = 0x11a8ca0;
		constexpr auto Normalize = 0x11a8580;
		constexpr auto NormalizeX = 0x11a83d0;
		constexpr auto NormalizeY = 0x11a8460;
		constexpr auto NormalizeZ = 0x11a84f0;
		constexpr auto Denormalize = 0x11a73d0;
		constexpr auto DenormalizeX = 0x11a7220;
		constexpr auto DenormalizeY = 0x11a72b0;
		constexpr auto DenormalizeZ = 0x11a7340;
		constexpr auto Awake = 0x11a6040;
		constexpr auto Init = 0x11a7790;
		constexpr auto InitNoTerrain = 0x11a75c0;
		constexpr auto SetupComponents = 0x11a8fc0;
		constexpr auto PostSetupComponents = 0x11a8c00;
		constexpr auto BindShaderProperties = 0x11a6090;
		constexpr auto ctor = 0x2f8b30;
	};

	namespace UnityEngine_Sprite {

		constexpr auto ctor = 0x199d110;
		constexpr auto GetPackingMode = 0x199cf90;
		constexpr auto GetPacked = 0x199cf50;
		constexpr auto GetTextureRect = 0x199d0c0;
		constexpr auto GetInnerUVs = 0x199ce60;
		constexpr auto GetOuterUVs = 0x199cf00;
		constexpr auto GetPadding = 0x199d020;
		constexpr auto CreateSprite = 0x199c5b0;
		constexpr auto get_bounds = 0x199d2a0;
		constexpr auto get_rect = 0x199d470;
		constexpr auto get_border = 0x199d200;
		constexpr auto get_texture = 0x199d590;
		constexpr auto get_pixelsPerUnit = 0x199d3e0;
		constexpr auto get_associatedAlphaSplitTexture = 0x199d170;
		constexpr auto get_pivot = 0x199d390;
		constexpr auto get_packed = 0x199d300;
		constexpr auto get_packingMode = 0x199cf90;
		constexpr auto get_textureRect = 0x199d4c0;
		constexpr auto get_vertices = 0x199d650;
		constexpr auto get_triangles = 0x199d5d0;
		constexpr auto get_uv = 0x199d610;
		constexpr auto Create = 0x199ca00;
		constexpr auto GetTextureRect_Injected = 0x199d070;
		constexpr auto GetInnerUVs_Injected = 0x199ce10;
		constexpr auto GetOuterUVs_Injected = 0x199ceb0;
		constexpr auto GetPadding_Injected = 0x199cfd0;
		constexpr auto CreateSprite_Injected = 0x199c530;
		constexpr auto get_bounds_Injected = 0x199d250;
		constexpr auto get_rect_Injected = 0x199d420;
		constexpr auto get_border_Injected = 0x199d1b0;
		constexpr auto get_pivot_Injected = 0x199d340;
	};

	namespace UnityEngine_Matrix4x4 {
		constexpr auto m00 = 0x10;
		constexpr auto m10 = 0x14;
		constexpr auto m20 = 0x18;
		constexpr auto m30 = 0x1c;
		constexpr auto m01 = 0x20;
		constexpr auto m11 = 0x24;
		constexpr auto m21 = 0x28;
		constexpr auto m31 = 0x2c;
		constexpr auto m02 = 0x30;
		constexpr auto m12 = 0x34;
		constexpr auto m22 = 0x38;
		constexpr auto m32 = 0x3c;
		constexpr auto m03 = 0x40;
		constexpr auto m13 = 0x44;
		constexpr auto m23 = 0x48;
		constexpr auto m33 = 0x4c;
		constexpr auto identityMatrix = 0x40;

		constexpr auto GetRotation = 0x2195e0;
		constexpr auto GetLossyScale = 0x2195c0;
		constexpr auto DecomposeProjection = 0x2192b0;
		constexpr auto get_rotation = 0x21a060;
		constexpr auto get_lossyScale = 0x219fb0;
		constexpr auto get_decomposeProjection = 0x219d80;
		constexpr auto TRS = 0x18cb270;
		constexpr auto SetTRS = 0x219b30;
		constexpr auto Inverse = 0x18ca930;
		constexpr auto get_inverse = 0x219e30;
		constexpr auto Transpose = 0x18cbbc0;
		constexpr auto get_transpose = 0x21a100;
		constexpr auto Ortho = 0x18cace0;
		constexpr auto Perspective = 0x18cae40;
		constexpr auto Frustum = 0x18ca220;
		constexpr auto ctor = 0x219ca0;
		constexpr auto get_Item = 0x219d50;
		constexpr auto set_Item = 0x21a290;
		constexpr auto GetHashCode = 0x2193e0;
		constexpr auto Equals = 0x2192d0;
		constexpr auto op_Multiply = 0x18cc8a0;
		constexpr auto GetColumn = 0x2193c0;
		constexpr auto GetRow = 0x219600;
		constexpr auto SetColumn = 0x219a30;
		constexpr auto SetRow = 0x219ab0;
		constexpr auto MultiplyPoint = 0x219850;
		constexpr auto MultiplyPoint3x4 = 0x219790;
		constexpr auto MultiplyVector = 0x219980;
		constexpr auto Scale = 0x18caf00;
		constexpr auto Translate = 0x18cbad0;
		constexpr auto get_identity = 0x18cc220;
		constexpr auto ToString = 0x219c90;
		constexpr auto cctor = 0x18cbc50;
		constexpr auto GetRotation_Injected = 0x18ca6e0;
		constexpr auto GetLossyScale_Injected = 0x18ca600;
		constexpr auto DecomposeProjection_Injected = 0x18c9b70;
		constexpr auto TRS_Injected = 0x18cb200;
		constexpr auto Inverse_Injected = 0x18ca8e0;
		constexpr auto Transpose_Injected = 0x18cbb70;
		constexpr auto Ortho_Injected = 0x18cac60;
		constexpr auto Perspective_Injected = 0x18cadc0;
		constexpr auto Frustum_Injected = 0x18ca020;
	};

	namespace ContextMenuUI {

		constexpr auto Start = 0x60d7b0;
		constexpr auto AddOption = 0x60cba0;
		constexpr auto End = 0x60cf60;
		constexpr auto IsOpen = 0x60d3f0;
		constexpr auto Cancel = 0x60cda0;
		constexpr auto DoSelect = 0x60cea0;
		constexpr auto Open = 0x60d460;
		constexpr auto FrameUpdate = 0x60cfd0;
		constexpr auto IsButtonDownRaw = 0x60d380;
	};

	namespace UnityEngine_TransformEx {

		constexpr auto GetRecursiveName = 0x120ca70;
		constexpr auto RetireAllChildren = 0x120ceb0;
		constexpr auto GetChildren = 0x120c920;
		constexpr auto OrderChildren = 0x120cd10;
		constexpr auto GetAllChildren = 0x120be60;
		constexpr auto AddAllChildren = 0x120baa0;
		constexpr auto GetChildrenWithTag = 0x120c7e0;
		constexpr auto Identity = 0x120cb50;
		constexpr auto CreateChild = 0x120bb80;
		constexpr auto InstantiateChild = 0x120cc90;
		constexpr auto SetLayerRecursive = 0x120d370;
		constexpr auto DropToGround = 0x120bcd0;
		constexpr auto GetGroundInfo = 0x120c9e0;
		constexpr auto GetGroundInfoTerrainOnly = 0x120c970;
		constexpr auto WorkoutRenderBounds = 0x120d430;
		constexpr auto DestroyChildren = 0x120bc20;
		constexpr auto SetChildrenActive = 0x120d230;
		constexpr auto ActiveChild = 0x120b9a0;
		constexpr auto SetHierarchyGroup = 0x120d2c0;
		constexpr auto GetBounds = 0x120bf00;
	};

	namespace UnityEngine_Bounds {
		constexpr auto m_Center = 0x10;
		constexpr auto m_Extents = 0x1c;

		constexpr auto ctor = 0x21ca10;
		constexpr auto GetHashCode = 0x21c740;
		constexpr auto Equals = 0x21c4a0;
		constexpr auto get_center = 0x21a830;
		constexpr auto set_center = 0x20d8f0;
		constexpr auto get_size = 0x21cb00;
		constexpr auto set_size = 0x21cc90;
		constexpr auto get_extents = 0x21b610;
		constexpr auto set_extents = 0x21cbb0;
		constexpr auto get_min = 0x21cae0;
		constexpr auto set_min = 0x21cc20;
		constexpr auto get_max = 0x21cac0;
		constexpr auto set_max = 0x21cbc0;
		constexpr auto op_Equality = 0x18e0210;
		constexpr auto op_Inequality = 0x18e0300;
		constexpr auto SetMinMax = 0x21c810;
		constexpr auto Encapsulate = 0x21c470;
		constexpr auto Expand = 0x21c650;
		constexpr auto IntersectRay = 0x21c7a0;
		constexpr auto ToString = 0x21c8a0;
		constexpr auto Contains = 0x21c300;
		constexpr auto SqrDistance = 0x21c850;
		constexpr auto IntersectRayAABB = 0x18dfc80;
		constexpr auto ClosestPoint = 0x21c290;
		constexpr auto Contains_Injected = 0x18df840;
		constexpr auto SqrDistance_Injected = 0x18dfe70;
		constexpr auto IntersectRayAABB_Injected = 0x18dfc20;
		constexpr auto ClosestPoint_Injected = 0x18df780;
	};

	namespace ConVar_Admin {
		constexpr auto underwater_effect = 0x4;
		constexpr auto underwater_scatter = 0x8;
		constexpr auto ddraw_netupdate = 0xc;

		constexpr auto status = 0x2f6e50;
		constexpr auto stats = 0x2f6e50;
		constexpr auto killplayer = 0x2f6e50;
		constexpr auto injureplayer = 0x2f6e50;
		constexpr auto recoverplayer = 0x2f6e50;
		constexpr auto kick = 0x2f6e50;
		constexpr auto kickall = 0x2f6e50;
		constexpr auto ban = 0x2f6e50;
		constexpr auto moderatorid = 0x2f6e50;
		constexpr auto ownerid = 0x2f6e50;
		constexpr auto removemoderator = 0x2f6e50;
		constexpr auto removeowner = 0x2f6e50;
		constexpr auto banid = 0x2f6e50;
		constexpr auto TryGetBanExpiry = 0x4b2ae0;
		constexpr auto unban = 0x2f6e50;
		constexpr auto skipqueue = 0x2f6e50;
		constexpr auto players = 0x2f6e50;
		constexpr auto say = 0x2f6e50;
		constexpr auto users = 0x2f6e50;
		constexpr auto sleepingusers = 0x2f6e50;
		constexpr auto sleepingusersinrange = 0x2f6e50;
		constexpr auto usersinrange = 0x2f6e50;
		constexpr auto banlist = 0x2f6e50;
		constexpr auto banlistex = 0x2f6e50;
		constexpr auto listid = 0x2f6e50;
		constexpr auto mute = 0x2f6e50;
		constexpr auto unmute = 0x2f6e50;
		constexpr auto mutelist = 0x2f6e50;
		constexpr auto clientperf = 0x2f6e50;
		constexpr auto carstats = 0x2f6e50;
		constexpr auto ent = 0x4b2cc0;
		constexpr auto get_adminclouds = 0x4b2f80;
		constexpr auto set_adminclouds = 0x4b3340;
		constexpr auto get_adminfog = 0x4b3070;
		constexpr auto set_adminfog = 0x4b3430;
		constexpr auto get_adminwind = 0x4b3250;
		constexpr auto set_adminwind = 0x4b3610;
		constexpr auto get_adminrain = 0x4b3160;
		constexpr auto set_adminrain = 0x4b3520;
		constexpr auto AdminUI_ReceivePlayerList = 0x4b2980;
		constexpr auto AdminUI_ReceiveServerInfo = 0x4b2a30;
		constexpr auto AdminUI_ReceiveCommands = 0x4b28d0;
		constexpr auto ctor = 0x4b2c60;
		constexpr auto cctor = 0x4b2bf0;
	};

	namespace ModularCar {
		constexpr auto __menuOption_Menu_FuelStorage = 0x470;
		constexpr auto __menuOption_Menu_Locked = 0x4c8;
		constexpr auto clientSteerAngle = 0x520;
		constexpr auto clientDriveWheelVelocity = 0x524;
		constexpr auto clientDriveWheelSlip = 0x528;
		constexpr auto clientThrottle = 0x52c;
		constexpr auto clientBrake = 0x530;
		constexpr auto cachedEngineLowPerf = 0x534;
		constexpr auto timeSinceLastUpdate = 0x538;
		constexpr auto timeSinceFailedStartAttempt = 0x53c;
		constexpr auto timeSinceEnginePerfCheck = 0x540;
		constexpr auto failedStartWasEngineProblem = 0x544;
		constexpr auto wasBraking = 0x545;
		constexpr auto chassisVisuals = 0x548;
		constexpr auto wheelFL = 0x550;
		constexpr auto wheelFR = 0x558;
		constexpr auto wheelRL = 0x560;
		constexpr auto wheelRR = 0x568;
		constexpr auto carKeyDefinition = 0x570;
		constexpr auto carSettings = 0x578;
		constexpr auto hurtTriggerMinSpeed = 0x580;
		constexpr auto hurtTriggerFront = 0x588;
		constexpr auto hurtTriggerRear = 0x590;
		constexpr auto immortalProtection = 0x598;
		constexpr auto mortalProtection = 0x5a0;
		constexpr auto spawnSettings = 0x5a8;
		constexpr auto fuelStoragePrefab = 0x5b0;
		constexpr auto fuelStoragePoint = 0x5b8;
		constexpr auto carAudio = 0x5c0;
		constexpr auto collisionEffect = 0x5c8;
		constexpr auto damageShowingRenderers = 0x5d0;
		constexpr auto population = 0x4;
		constexpr auto outsidedecayminutes = 0x8;
		constexpr auto carLock = 0x5d8;
		constexpr auto engineController = 0x5e0;
		constexpr auto lastSetEngineState = 0x5e8;
		constexpr auto fuelSystem = 0x5f0;
		constexpr auto cachedFuelFraction = 0x5f8;

		constexpr auto GetMenuOptions = 0x64d4e0;
		constexpr auto get_HasMenuOptions = 0x64fb60;
		constexpr auto OnRpcMessage = 0x64e970;
		constexpr auto OnLifeStateChanged = 0x64e820;
		constexpr auto DisplayHealthInfo = 0x64cfa0;
		constexpr auto CalculateWheelSlip = 0x64cc40;
		constexpr auto HasAnEngineAtLowPerformance = 0x64dab0;
		constexpr auto HasLowFuel = 0x64dcc0;
		constexpr auto HadRecentFailedEngineStart = 0x64da70;
		constexpr auto SpawnGibs = 0x64f600;
		constexpr auto LateUpdate = 0x64de20;
		constexpr auto BrakesAreOn = 0x64cc00;
		constexpr auto Menu_FuelStorage = 0x64e180;
		constexpr auto Menu_FuelStorage_ShowIf = 0x64e0b0;
		constexpr auto Menu_Locked = 0x2f6e50;
		constexpr auto Menu_Locked_ShowIf = 0x64e1c0;
		constexpr auto MountMenuVisible = 0x64e4c0;
		constexpr auto GetHUDHealth = 0x64d090;
		constexpr auto GetHUDMaxHealth = 0x64d160;
		constexpr auto ModularCarUpdate = 0x64e2a0;
		constexpr auto EngineStartFailed = 0x64cfd0;
		constexpr auto get_DriveWheelVelocity = 0x64fb50;
		constexpr auto get_DriveWheelSlip = 0x64fb40;
		constexpr auto get_SteerAngle = 0x64fd00;
		constexpr auto get_AssociatedItemDef = 0x2fcd10;
		constexpr auto get_MaxSteerAngle = 0x64fce0;
		constexpr auto get_IsLockable = 0x64fcb0;
		constexpr auto get_CurEngineState = 0x64fb10;
		constexpr auto PreProcess = 0x64f2a0;
		constexpr auto InitShared = 0x64dce0;
		constexpr auto MaxHealth = 0x64e080;
		constexpr auto StartHealth = 0x64e080;
		constexpr auto TotalHealth = 0x64d090;
		constexpr auto TotalMaxHealth = 0x64d160;
		constexpr auto GetMaxForwardSpeed = 0x64d350;
		constexpr auto Load = 0x64dea0;
		constexpr auto OnFlagsChanged = 0x64e700;
		constexpr auto GetThrottleInput = 0x64da40;
		constexpr auto GetBrakeInput = 0x64d050;
		constexpr auto GetMaxDriveForce = 0x64d230;
		constexpr auto GetFuelFraction = 0x64d080;
		constexpr auto PlayerHasUnlockPermission = 0x64f270;
		constexpr auto PlayerCanUseThis = 0x64f240;
		constexpr auto PlayerCanDestroyLock = 0x64f210;
		constexpr auto CanBeLooted = 0x64cdd0;
		constexpr auto CanPushNow = 0x64cf00;
		constexpr auto RefreshEngineState = 0x64f3a0;
		constexpr auto RollOffDriveForce = 0x64f590;
		constexpr auto RefreshChassisProtectionState = 0x64f350;
		constexpr auto ModuleEntityAdded = 0x64e3c0;
		constexpr auto ModuleEntityRemoved = 0x64e440;
		constexpr auto ctor = 0x64faf0;
		constexpr auto cctor = 0x64fa80;
		constexpr auto CalculateWheelSlipg__CalcWheelSlip_21_0 = 0x64f900;
	};

	namespace Signage {
		constexpr auto __menuOption_Menu_ChangeText = 0x268;
		constexpr auto __menuOption_Menu_LockSign = 0x2c0;
		constexpr auto __menuOption_Menu_UnLockSign = 0x318;
		constexpr auto changeTextDialog = 0x370;
		constexpr auto paintableSources = 0x378;
		constexpr auto textureIDs = 0x380;
		constexpr auto timeSinceRequest = 0x388;
		constexpr auto loadedTextures = 0x390;
		constexpr auto textureRequestSent = 0x398;
		constexpr auto withinTextureRangek__BackingField = 0x399;
		constexpr auto cell = 0x3a0;

		constexpr auto GetMenuOptions = 0x570700;
		constexpr auto get_HasMenuOptions = 0x572860;
		constexpr auto OnRpcMessage = 0x571560;
		constexpr auto get_TextureSize = 0x572a50;
		constexpr auto get_TextureCount = 0x572a30;
		constexpr auto PreProcess = 0x571d90;
		constexpr auto FreeTexture = 0x5705f0;
		constexpr auto RequestTextureUpdate = 0x5723d0;
		constexpr auto LoadTexture = 0x570ee0;
		constexpr auto Menu_ChangeText = 0x5713c0;
		constexpr auto OnTextureWasEdited = 0x5719b0;
		constexpr auto RecieveTexture = 0x572130;
		constexpr auto EnsureInitialized = 0x570510;
		constexpr auto SignDebugLog = 0x5726d0;
		constexpr auto CanUpdateSign = 0x5700f0;
		constexpr auto CanUnlockSign = 0x5700a0;
		constexpr auto CanLockSign = 0x570050;
		constexpr auto Load = 0x571180;
		constexpr auto get_withinTextureRange = 0x572b10;
		constexpr auto set_withinTextureRange = 0x572b20;
		constexpr auto ClientInit = 0x5702b0;
		constexpr auto DoClientDestroy = 0x570340;
		constexpr auto RefreshLOD = 0x572350;
		constexpr auto ChangeLOD = 0x5701b0;
		constexpr auto OnEnterTextureRange = 0x2f6e50;
		constexpr auto OnExitTextureRange = 0x2f6e50;
		constexpr auto Menu_LockSign = 0x5714e0;
		constexpr auto Menu_UnLockSign = 0x571520;
		constexpr auto RebuildAll = 0x571e70;
		constexpr auto ConsumptionAmount = 0x2fe1c0;
		constexpr auto Categorize = 0x570180;
		constexpr auto ctor = 0x572800;
		constexpr auto cctor = 0x5727c0;
		constexpr auto Menu_ChangeTextb__21_0 = 0x572730;
		constexpr auto OnTextureWasEditedg__IsClear_22_0 = 0x572760;
	};

	namespace MeshPaintableSource {
		constexpr auto texWidth = 0x18;
		constexpr auto texHeight = 0x1c;
		constexpr auto replacementTextureName = 0x20;
		constexpr auto cameraFOV = 0x28;
		constexpr auto cameraDistance = 0x2c;
		constexpr auto texture = 0x30;
		constexpr auto sourceObject = 0x38;
		constexpr auto collisionMesh = 0x40;
		constexpr auto localPosition = 0x48;
		constexpr auto localRotation = 0x54;
		constexpr auto applyToAllRenderers = 0x60;
		constexpr auto extraRenderers = 0x68;
		constexpr auto isSelected = 0x70;

		constexpr auto Init = 0x69c7f0;
		constexpr auto Free = 0x69c740;
		constexpr auto UpdateMaterials = 0x69ce00;
		constexpr auto UpdateFrom = 0x69cd90;
		constexpr auto Load = 0x69cd30;
		constexpr auto Clear = 0x69c630;
		constexpr auto ctor = 0x69ce30;
		constexpr auto cctor = 0x2f6e50;
	};

	namespace PhotoFrame {
		constexpr auto __menuOption_Menu_ChangeText = 0x3c0;
		constexpr auto __menuOption_Menu_LockSign = 0x418;
		constexpr auto __menuOption_Menu_UnLockSign = 0x470;
		constexpr auto SignEditorDialog = 0x4c8;
		constexpr auto PaintableSource = 0x4d0;
		constexpr auto _photoEntity = 0x4d8;
		constexpr auto _overlayTextureCrc = 0x4e8;
		constexpr auto _cell = 0x4f0;
		constexpr auto _photoTexture = 0x4f8;
		constexpr auto _loadedPhotoEntityId = 0x500;
		constexpr auto _loadedOverlayCrc = 0x504;

		constexpr auto GetMenuOptions = 0x5ad090;
		constexpr auto get_HasMenuOptions = 0x5aee90;
		constexpr auto OnRpcMessage = 0x5addd0;
		constexpr auto get_TextureSize = 0x5af0d0;
		constexpr auto get_TextureCount = 0x5a5b60;
		constexpr auto CanUpdateSign = 0x5700f0;
		constexpr auto CanUnlockSign = 0x5ac9f0;
		constexpr auto CanLockSign = 0x5ac910;
		constexpr auto RequestOverlayTexture = 0x5ae9b0;
		constexpr auto LoadOverlayTexture = 0x5ad970;
		constexpr auto ClearOverlayTexture = 0x5acb30;
		constexpr auto FreeOverlayTexture = 0x5ace20;
		constexpr auto Menu_ChangeText = 0x5ada80;
		constexpr auto OnTextureWasEdited = 0x5ae390;
		constexpr auto RecieveOverlayTexture = 0x5ae760;
		constexpr auto Menu_LockSign = 0x5adc70;
		constexpr auto Menu_UnLockSign = 0x5adcb0;
		constexpr auto Categorize = 0x5aca90;
		constexpr auto Load = 0x5ada10;
		constexpr auto ClientInit = 0x5acbd0;
		constexpr auto ClientOnEnable = 0x5acc60;
		constexpr auto DoClientDestroy = 0x5acc80;
		constexpr auto PostNetworkUpdate = 0x5ae500;
		constexpr auto IsWithinRenderDistance = 0x5ad930;
		constexpr auto RefreshLOD = 0x5ae930;
		constexpr auto ChangeLOD = 0x5acac0;
		constexpr auto UpdateTextures = 0x5aeaf0;
		constexpr auto FreeTextures = 0x5acff0;
		constexpr auto OnImageLoaded = 0x5adcf0;
		constexpr auto FreePhotoTexture = 0x5aceb0;
		constexpr auto RebuildAll = 0x5ae520;
		constexpr auto CanPickup = 0x5ac9b0;
		constexpr auto ctor = 0x5aee30;
		constexpr auto Menu_ChangeTextb__20_0 = 0x5ae390;
	};

	namespace UnityEngine_Texture {

		constexpr auto ctor = 0x19a17b0;
		constexpr auto get_mipmapCount = 0x19a18b0;
		constexpr auto set_anisotropicFiltering = 0x19a1bf0;
		constexpr auto SetGlobalAnisotropicFilteringLimits = 0x19a1370;
		constexpr auto GetDataWidth = 0x19a12b0;
		constexpr auto GetDataHeight = 0x19a1270;
		constexpr auto GetDimension = 0x19a12f0;
		constexpr auto get_width = 0x19a12b0;
		constexpr auto set_width = 0x19a1de0;
		constexpr auto get_height = 0x19a1270;
		constexpr auto set_height = 0x19a1cc0;
		constexpr auto get_dimension = 0x19a12f0;
		constexpr auto set_dimension = 0x19a1c30;
		constexpr auto get_isReadable = 0x19a1870;
		constexpr auto get_wrapMode = 0x19a1b70;
		constexpr auto set_wrapMode = 0x19a1e30;
		constexpr auto set_filterMode = 0x19a1c80;
		constexpr auto set_anisoLevel = 0x19a1bb0;
		constexpr auto set_mipMapBias = 0x19a1d10;
		constexpr auto get_texelSize = 0x19a1af0;
		constexpr auto GetNativeTexturePtr = 0x19a1330;
		constexpr auto get_totalTextureMemory = 0x19a1b40;
		constexpr auto get_desiredTextureMemory = 0x19a1840;
		constexpr auto get_targetTextureMemory = 0x19a1a70;
		constexpr auto get_currentTextureMemory = 0x19a1810;
		constexpr auto get_nonStreamingTextureMemory = 0x19a1920;
		constexpr auto get_streamingMipmapUploadCount = 0x19a1950;
		constexpr auto get_streamingTextureCount = 0x19a1980;
		constexpr auto get_nonStreamingTextureCount = 0x19a18f0;
		constexpr auto get_streamingTexturePendingLoadCount = 0x19a1a40;
		constexpr auto get_streamingTextureLoadingCount = 0x19a1a10;
		constexpr auto get_streamingTextureForceLoadAll = 0x19a19e0;
		constexpr auto set_streamingTextureForceLoadAll = 0x19a1da0;
		constexpr auto get_streamingTextureDiscardUnusedMips = 0x19a19b0;
		constexpr auto set_streamingTextureDiscardUnusedMips = 0x19a1d60;
		constexpr auto ValidateFormat = 0x19a13b0;
		constexpr auto CreateNonReadableException = 0x19a11f0;
		constexpr auto cctor = 0x19a1770;
		constexpr auto get_texelSize_Injected = 0x19a1aa0;
	};

	namespace BaseViewModel {
		constexpr auto ActiveModels = 0x8;
		constexpr auto lazyaimRegular = 0x18;
		constexpr auto lazyaimIronsights = 0x20;
		constexpr auto pivot = 0x28;
		constexpr auto useViewModelCamera = 0x30;
		constexpr auto wantsHeldItemFlags = 0x31;
		constexpr auto hideSightMeshes = 0x38;
		constexpr auto MuzzlePoint = 0x40;
		constexpr auto subsurfaceProfile = 0x48;
		constexpr auto animator = 0x50;
		constexpr auto animationEvent = 0x58;
		constexpr auto ironSights = 0x60;
		constexpr auto sway = 0x68;
		constexpr auto lower = 0x70;
		constexpr auto bob = 0x78;
		constexpr auto model = 0x80;
		constexpr auto gestureHide = 0x88;
		constexpr auto gestureHideTime = 0x8c;
		constexpr auto gestureCollection = 0x10;
		constexpr auto Skeleton = 0x90;
		constexpr auto Clothing = 0x98;
		constexpr auto workshopMode = 0xa0;

		constexpr auto get_ActiveModel = 0x9261d0;
		constexpr auto get_UsingViewModelCamera = 0x926290;
		constexpr auto IsOK = 0x9243b0;
		constexpr auto PreDestroy = 0x9252e0;
		constexpr auto OnEnable = 0x9250a0;
		constexpr auto OnDisable = 0x924fc0;
		constexpr auto Awake = 0x9235d0;
		constexpr auto OnClothingChanged = 0x924fb0;
		constexpr auto UpdateRenderers = 0x926000;
		constexpr auto AddHandsModel = 0x2f6e50;
		constexpr auto UpdateClothingModels = 0x925bf0;
		constexpr auto AddClothing = 0x923520;
		constexpr auto SetSkinColor = 0x9256a0;
		constexpr auto OnCameraPositionChanged = 0x924410;
		constexpr auto GetLazyAim = 0x924290;
		constexpr auto GetGestureRotationOffset = 0x923df0;
		constexpr auto ToggleGestureHide = 0x9257e0;
		constexpr auto TriggerAdmire = 0x925820;
		constexpr auto TriggerAttack = 0x925910;
		constexpr auto TriggerAttack2 = 0x9258d0;
		constexpr auto TriggerReady = 0x925a50;
		constexpr auto TriggerCancel = 0x925950;
		constexpr auto TriggerDeploy = 0x925990;
		constexpr auto TriggerReload = 0x925a90;
		constexpr auto TriggerHolster = 0x925a10;
		constexpr auto TriggerEmpty = 0x9259d0;
		constexpr auto Trigger = 0x925ad0;
		constexpr auto ResetTrigger = 0x925390;
		constexpr auto SetBool = 0x9254c0;
		constexpr auto SetFloat = 0x925560;
		constexpr auto Play = 0x925190;
		constexpr auto CrossFade = 0x923c90;
		constexpr auto HideSightMeshes = 0x924330;
		constexpr auto OnDeployedNoSkin = 0x2f6e50;
		constexpr auto WorkshopMode = 0x621cc0;
		constexpr auto ctor = 0x9261c0;
		constexpr auto cctor = 0x926120;
	};

	namespace Facepunch_Network_Raknet_Client {
		constexpr auto peer = 0x70;
		constexpr auto cycleTimer = 0x78;

		constexpr auto IsConnected = 0x22c6320;
		constexpr auto Connect = 0x22c5010;
		constexpr auto HandleRaknetPacket = 0x22c5da0;
		constexpr auto HandleMessage = 0x22c5780;
		constexpr auto Cycle = 0x22c5120;
		constexpr auto Disconnect = 0x22c5540;
		constexpr auto GetDebug = 0x22c56a0;
		constexpr auto GetStat = 0x22c5760;
		constexpr auto GetLastPing = 0x22c5720;
		constexpr auto Send = 0x22c6330;
		constexpr auto ctor = 0x22c64d0;
		constexpr auto cctor = 0x22c6480;
	};

	namespace ProtoBuf_Approval {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto level = 0x18;
		constexpr auto hostname = 0x20;
		constexpr auto modded = 0x28;
		constexpr auto official = 0x29;
		constexpr auto steamid = 0x30;
		constexpr auto ipaddress = 0x38;
		constexpr auto port = 0x3c;
		constexpr auto levelSeed = 0x40;
		constexpr auto levelSize = 0x44;
		constexpr auto checksum = 0x48;
		constexpr auto encryption = 0x50;
		constexpr auto levelUrl = 0x58;
		constexpr auto levelTransfer = 0x60;

		constexpr auto ResetToPool = 0x1e4e9b0;
		constexpr auto Dispose = 0x1e4e580;
		constexpr auto EnterPool = 0xfa5990;
		constexpr auto LeavePool = 0xfa59c0;
		constexpr auto CopyTo = 0x1e4d0e0;
		constexpr auto Copy = 0x1e4d190;
		constexpr auto Deserialize = 0x1e4df50;
		constexpr auto DeserializeLengthDelimited = 0x1e4d280;
		constexpr auto DeserializeLength = 0x1e4d870;
		constexpr auto FromProto = 0x1e4e7b0;
		constexpr auto WriteToStream = 0x1e4f620;
		constexpr auto WriteToStreamDelta = 0x1e4f640;
		constexpr auto ReadFromStream = 0x1e4e7d0;
		constexpr auto SerializeDelta = 0x1e4eb70;
		constexpr auto Serialize = 0x1e4f240;
		constexpr auto ToProtoBytes = 0x1e4f610;
		constexpr auto ToProto = 0x1e4f620;
		constexpr auto SerializeToBytes = 0x1e4f130;
		constexpr auto SerializeLengthDelimited = 0x1e4f080;
		constexpr auto ctor = 0xecd540;
	};

	namespace Network_Connection {
		constexpr auto recordStream = 0x10;
		constexpr auto recordWriter = 0x18;
		constexpr auto recordTime = 0x20;
		constexpr auto recordFilename = 0x28;
		constexpr auto recordHeader = 0x30;
		constexpr auto state = 0x38;
		constexpr auto active = 0x3c;
		constexpr auto connected = 0x3d;
		constexpr auto authLevel = 0x40;
		constexpr auto encryptionLevel = 0x44;
		constexpr auto decryptIncoming = 0x48;
		constexpr auto encryptOutgoing = 0x49;
		constexpr auto trusted = 0x4a;
		constexpr auto rejected = 0x4b;
		constexpr auto authStatus = 0x50;
		constexpr auto token = 0x58;
		constexpr auto hasRequestedWorld = 0x60;
		constexpr auto guid = 0x68;
		constexpr auto userid = 0x70;
		constexpr auto ownerid = 0x78;
		constexpr auto username = 0x80;
		constexpr auto os = 0x88;
		constexpr auto protocol = 0x90;
		constexpr auto packetsPerSecond = 0x98;
		constexpr auto connectionTime = 0xa0;
		constexpr auto ipaddress = 0xa8;
		constexpr auto player = 0xb0;
		constexpr auto validate = 0xb8;
		constexpr auto info = 0xc0;

		constexpr auto get_RecordTimeElapsed = 0x2219ea0;
		constexpr auto get_RecordFilename = 0x8891d0;
		constexpr auto get_RecordFilesize = 0xb469b0;
		constexpr auto StartRecording = 0x2219790;
		constexpr auto StopRecording = 0x22198a0;
		constexpr auto get_IsRecording = 0x797a40;
		constexpr auto RecordPacket = 0x2219290;
		constexpr auto OnDisconnected = 0x22191f0;
		constexpr auto get_isAuthenticated = 0x2219f20;
		constexpr auto ResetPacketsPerSecond = 0x2219710;
		constexpr auto AddPacketsPerSecond = 0x2219080;
		constexpr auto GetPacketsPerSecond = 0x2219130;
		constexpr auto GetSecondsConnected = 0x2219190;
		constexpr auto ToString = 0x2219c60;
		constexpr auto ctor = 0x2219d40;
		constexpr auto cctor = 0x2219ce0;
	};

	namespace TOD_DayParameters {
		constexpr auto SunColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x10d5b60;
	};

	namespace TerrainPath {
		constexpr auto Roads = 0x30;
		constexpr auto Rivers = 0x38;
		constexpr auto Powerlines = 0x40;
		constexpr auto Landmarks = 0x48;
		constexpr auto Monuments = 0x50;
		constexpr auto RiverObjs = 0x58;
		constexpr auto LakeObjs = 0x60;
		constexpr auto DungeonGridRoot = 0x68;
		constexpr auto DungeonGridEntrances = 0x70;
		constexpr auto DungeonGridCells = 0x78;
		constexpr auto DungeonBaseRoot = 0x80;
		constexpr auto DungeonBaseEntrances = 0x88;
		constexpr auto OceanPatrolClose = 0x90;
		constexpr auto OceanPatrolFar = 0x98;
		constexpr auto wires = 0xa0;

		constexpr auto PostSetup = 0x11ac440;
		constexpr auto Clear = 0x11ab540;
		constexpr auto CreatePowerlineCostmap = 0x11ab7f0;
		constexpr auto CreateRoadCostmap = 0x11abac0;
		constexpr auto CreateBoatCostmap = 0x11ab5b0;
		constexpr auto AddWire = 0x11ab410;
		constexpr auto CreateWires = 0x11abee0;
		constexpr auto CreateWire = 0x11abdb0;
		constexpr auto ctor = 0x11ac770;
	};

	namespace MonumentInfo {
		constexpr auto Type = 0x30;
		constexpr auto Tier = 0x34;
		constexpr auto MinWorldSize = 0x38;
		constexpr auto Bounds = 0x3c;
		constexpr auto HasNavmesh = 0x54;
		constexpr auto IsSafeZone = 0x55;
		constexpr auto WantsDungeonLink = 0x56;
		constexpr auto HasDungeonLink = 0x57;
		constexpr auto DungeonEntrance = 0x58;

		constexpr auto Awake = 0x651120;
		constexpr auto CheckPlacement = 0x651210;
		constexpr auto Distance = 0x6517e0;
		constexpr auto SqrDistance = 0x652330;
		constexpr auto IsInBounds = 0x651d10;
		constexpr auto ClosestPointOnBounds = 0x651560;
		constexpr auto GetPathFinderPoint = 0x651ac0;
		constexpr auto GetPathFinderRadius = 0x651be0;
		constexpr auto OnDrawGizmosSelected = 0x651e50;
		constexpr auto TierToMask = 0x652470;
		constexpr auto PreProcess = 0x652050;
		constexpr auto FindDungeonEntrance = 0x651a80;
		constexpr auto DetermineHasDungeonLink = 0x6516d0;
		constexpr auto DetermineWantsDungeonLink = 0x651740;
		constexpr auto ctor = 0x6524a0;
	};

	namespace CodeLock {
		constexpr auto __menuOption_Menu_ChangeGuestCode = 0x1c0;
		constexpr auto __menuOption_Menu_ChangeLockCode = 0x218;
		constexpr auto __menuOption_Menu_Lock = 0x270;
		constexpr auto __menuOption_Menu_Unlock = 0x2c8;
		constexpr auto keyEnterDialog = 0x320;
		constexpr auto effectUnlocked = 0x328;
		constexpr auto effectLocked = 0x330;
		constexpr auto effectDenied = 0x338;
		constexpr auto effectCodeChanged = 0x340;
		constexpr auto effectShock = 0x348;
		constexpr auto hasCode = 0x350;

		constexpr auto GetMenuOptions = 0x4ba2c0;
		constexpr auto get_HasMenuOptions = 0x4bb6e0;
		constexpr auto OnRpcMessage = 0x4bb050;
		constexpr auto Load = 0x4bac40;
		constexpr auto Menu_Unlock = 0x4bb010;
		constexpr auto Menu_Unlock_ShowIf = 0x4bb000;
		constexpr auto Menu_Lock = 0x4bafc0;
		constexpr auto Menu_Lock_ShowIf = 0x4baf90;
		constexpr auto Menu_ChangeLockCode = 0x4bae30;
		constexpr auto Menu_ChangeLockCode_ShowIf = 0x2f88d0;
		constexpr auto Menu_ChangeGuestCode = 0x4bacd0;
		constexpr auto Menu_ChangeGuestCode_ShowIf = 0x4baca0;
		constexpr auto EnterUnlockCode = 0x4ba170;
		constexpr auto ctor = 0x4bb6d0;
		constexpr auto Menu_ChangeLockCodeb__20_0 = 0x4bb670;
		constexpr auto Menu_ChangeGuestCodeb__22_0 = 0x4bb610;
		constexpr auto EnterUnlockCodeb__24_0 = 0x4bb5c0;
	};

	namespace AutoTurret {
		constexpr auto __menuOption_Menu_AssignToFriend = 0x348;
		constexpr auto __menuOption_Menu_MaxAuth = 0x3a0;
		constexpr auto __menuOption_MenuAuthorize = 0x3f8;
		constexpr auto __menuOption_MenuClearList = 0x450;
		constexpr auto __menuOption_MenuDeauthorize = 0x4a8;
		constexpr auto __menuOption_MenuTurretAttackAll = 0x500;
		constexpr auto __menuOption_MenuTurretPeacekeeper = 0x558;
		constexpr auto __menuOption_MenuTurretRotate = 0x5b0;
		constexpr auto gun_fire_effect = 0x608;
		constexpr auto bulletEffect = 0x610;
		constexpr auto bulletSpeed = 0x618;
		constexpr auto ambienceEmitter = 0x620;
		constexpr auto assignDialog = 0x628;
		constexpr auto turnSoundModulator = 0x630;
		constexpr auto turnLoop = 0x638;
		constexpr auto nextFocusSound = 0x640;
		constexpr auto wasTurning = 0x644;
		constexpr auto lastYaw = 0x648;
		constexpr auto playerController = 0x658;
		constexpr auto rcIdentifier = 0x660;
		constexpr auto initialAimDir = 0x668;
		constexpr auto rcTurnSensitivity = 0x674;
		constexpr auto RCEyes = 0x678;
		constexpr auto targetTrigger = 0x680;
		constexpr auto socketTransform = 0x688;
		constexpr auto target = 0x690;
		constexpr auto eyePos = 0x698;
		constexpr auto muzzlePos = 0x6a0;
		constexpr auto aimDir = 0x6a8;
		constexpr auto gun_yaw = 0x6b8;
		constexpr auto gun_pitch = 0x6c0;
		constexpr auto sightRange = 0x6c8;
		constexpr auto turnLoopDef = 0x6d0;
		constexpr auto movementChangeDef = 0x6d8;
		constexpr auto ambientLoopDef = 0x6e0;
		constexpr auto focusCameraDef = 0x6e8;
		constexpr auto focusSoundFreqMin = 0x6f0;
		constexpr auto focusSoundFreqMax = 0x6f4;
		constexpr auto peacekeeperToggleSound = 0x6f8;
		constexpr auto onlineSound = 0x700;
		constexpr auto offlineSound = 0x708;
		constexpr auto targetAcquiredEffect = 0x710;
		constexpr auto targetLostEffect = 0x718;
		constexpr auto reloadEffect = 0x720;
		constexpr auto aimCone = 0x728;
		constexpr auto authorizedPlayers = 0x730;

		constexpr auto GetMenuOptions = 0x8b5220;
		constexpr auto get_HasMenuOptions = 0x8b8380;
		constexpr auto OnRpcMessage = 0x8b6f00;
		constexpr auto ShouldShowLootMenus = 0x8b7710;
		constexpr auto ClientInit = 0x3bcc60;
		constexpr auto InitializeClientsideEffects = 0x2f6e50;
		constexpr auto DoClientDestroy = 0x8b5100;
		constexpr auto ClientTick = 0x8b4fe0;
		constexpr auto UpdateSounds = 0x8b7d10;
		constexpr auto GetMoveToContainerIndex = 0x2fe1c0;
		constexpr auto GetMoveToSlotIndex = 0x8b6450;
		constexpr auto CLIENT_ReceiveAimDir = 0x8b4ed0;
		constexpr auto CLIENT_FireGun = 0x8b4a10;
		constexpr auto Menu_MaxAuth = 0x2f6e50;
		constexpr auto MenuMaxAuth_ShowIf = 0x8b6c40;
		constexpr auto MenuAuthorize = 0x8b6b60;
		constexpr auto MenuAuthorize_ShowIf = 0x8b6b00;
		constexpr auto MenuDeauthorize = 0x8b6c00;
		constexpr auto MenuDeauthorize_ShowIf = 0x8b6ba0;
		constexpr auto MenuClearList = 0x8b6bc0;
		constexpr auto MenuClearList_ShowIf = 0x8b6ba0;
		constexpr auto MenuTurretRotate = 0x8b6d90;
		constexpr auto MenuTurretRotate_ShowIf = 0x8b6ba0;
		constexpr auto MenuTurretPeacekeeper = 0x8b6d50;
		constexpr auto MenuTurretPeacekeeper_ShowIf = 0x8b6d10;
		constexpr auto MenuTurretAttackAll = 0x8b6cd0;
		constexpr auto MenuTurretAttackAll_ShowIf = 0x8b6c90;
		constexpr auto Menu_AssignToFriend = 0x8b6dd0;
		constexpr auto Menu_AssignToFriend_Test = 0x8b6ba0;
		constexpr auto PeacekeeperMode = 0x57da50;
		constexpr auto IsBeingRemoteControlled = 0x8b6900;
		constexpr auto GetEyes = 0x8b5200;
		constexpr auto Occupied = 0x2f6010;
		constexpr auto GetEnt = 0x325cd0;
		constexpr auto CanControl = 0x2f6010;
		constexpr auto get_RequiresMouse = 0x2f6010;
		constexpr auto RCSetup = 0x2f6e50;
		constexpr auto RCShutdown = 0x2f6e50;
		constexpr auto UpdateIdentifier = 0x8b7d00;
		constexpr auto GetIdentifier = 0x8b5210;
		constexpr auto ConsumptionAmount = 0x3ae290;
		constexpr auto IsOnline = 0x4729f0;
		constexpr auto IsOffline = 0x472a00;
		constexpr auto ResetState = 0x8b7680;
		constexpr auto GetCenterMuzzle = 0x8b51f0;
		constexpr auto AngleToTarget = 0x8b4800;
		constexpr auto InFiringArc = 0x8b6580;
		constexpr auto CanPickup = 0x8b4f90;
		constexpr auto Load = 0x8b6a60;
		constexpr auto Update = 0x8b8150;
		constexpr auto AimOffset = 0x8b4570;
		constexpr auto GetAimSpeed = 0x8b51c0;
		constexpr auto UpdateAiming = 0x8b7860;
		constexpr auto Lerp = 0x8b6960;
		constexpr auto IsAuthed = 0x8b6790;
		constexpr auto AnyAuthed = 0x8b49c0;
		constexpr auto CanChangeSettings = 0x8b4f30;
		constexpr auto ctor = 0x8b8290;
		constexpr auto Menu_AssignToFriendb__46_0 = 0x8b7740;
		constexpr auto Menu_AssignToFriendb__46_1 = 0x8b77f0;
	};

	namespace UnityEngine_Vector3 {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto oneVector = 0xc;
		constexpr auto upVector = 0x18;
		constexpr auto downVector = 0x24;
		constexpr auto leftVector = 0x30;
		constexpr auto rightVector = 0x3c;
		constexpr auto forwardVector = 0x48;
		constexpr auto backVector = 0x54;
		constexpr auto positiveInfinityVector = 0x60;
		constexpr auto negativeInfinityVector = 0x6c;

		constexpr auto Slerp = 0x219ef50;
		constexpr auto OrthoNormalize2 = 0x219e7d0;
		constexpr auto OrthoNormalize = 0x219e820;
		constexpr auto RotateTowards = 0x219ec30;
		constexpr auto Lerp = 0x219de90;
		constexpr auto LerpUnclamped = 0x219de10;
		constexpr auto MoveTowards = 0x219e240;
		constexpr auto SmoothDamp = 0x219f000;
		constexpr auto get_Item = 0x232f00;
		constexpr auto set_Item = 0x233110;
		constexpr auto ctor = 0x22c6a0;
		constexpr auto Set = 0x22c6a0;
		constexpr auto Scale = 0x219ece0;
		constexpr auto Cross = 0x219dae0;
		constexpr auto GetHashCode = 0x232c80;
		constexpr auto Equals = 0x232b60;
		constexpr auto Reflect = 0x219eab0;
		constexpr auto Normalize = 0x219e5d0;
		constexpr auto get_normalized = 0x233040;
		constexpr auto Dot = 0x219dc60;
		constexpr auto Project = 0x219e8a0;
		constexpr auto Angle = 0x219d930;
		constexpr auto SignedAngle = 0x219ed40;
		constexpr auto Distance = 0x219db80;
		constexpr auto Magnitude = 0x219df90;
		constexpr auto get_magnitude = 0x232fa0;
		constexpr auto SqrMagnitude = 0x219f540;
		constexpr auto get_sqrMagnitude = 0x2330e0;
		constexpr auto Min = 0x219e140;
		constexpr auto Max = 0x219e040;
		constexpr auto get_zero = 0x219fee0;
		constexpr auto get_one = 0x219fd30;
		constexpr auto get_forward = 0x219faf0;
		constexpr auto get_back = 0x219f9f0;
		constexpr auto get_up = 0x219fe60;
		constexpr auto get_down = 0x219fa70;
		constexpr auto get_left = 0x219fb70;
		constexpr auto get_right = 0x219fdb0;
		constexpr auto op_Addition = 0x219ff60;
		constexpr auto op_Subtraction = 0x21a01c0;
		constexpr auto op_UnaryNegation = 0x21a0210;
		constexpr auto op_Multiply = 0x21a0130;
		constexpr auto op_Division = 0x219ffb0;
		constexpr auto op_Equality = 0x21a0000;
		constexpr auto op_Inequality = 0x21a0070;
		constexpr auto ToString = 0x232ed0;
		constexpr auto cctor = 0x219f750;
		constexpr auto Slerp_Injected = 0x219eee0;
		constexpr auto RotateTowards_Injected = 0x219ebc0;
	};

	namespace PlayerBelt {
		constexpr auto player = 0x10;

		constexpr auto get_MaxBeltSlots = 0x5c2140;
		constexpr auto ctor = 0x5c2110;
		constexpr auto GetItemInSlot = 0x5c1fe0;
		constexpr auto GetActiveItem = 0x5c1f40;
		constexpr auto CanHoldItem = 0x5c1490;
		constexpr auto FrameUpdate = 0x5c1e80;
		constexpr auto ChangeSelect = 0x5c1580;
		constexpr auto DoNextItemDirection = 0x5c1d50;
		constexpr auto ClientInput = 0x5c1830;
		constexpr auto cctor = 0x5c20d0;
	};

	namespace UnityEngine_Camera {
		constexpr auto onPreRender = 0x8;
		constexpr auto onPostRender = 0x10;

		constexpr auto get_nearClipPlane = 0x18e2150;
		constexpr auto set_nearClipPlane = 0x18e2aa0;
		constexpr auto get_farClipPlane = 0x18e20a0;
		constexpr auto set_farClipPlane = 0x18e2910;
		constexpr auto get_fieldOfView = 0x18e20e0;
		constexpr auto set_fieldOfView = 0x18e2960;
		constexpr auto set_renderingPath = 0x18e2e10;
		constexpr auto get_actualRenderingPath = 0x18e1d50;
		constexpr auto get_allowHDR = 0x18e1d90;
		constexpr auto set_allowHDR = 0x18e26c0;
		constexpr auto get_allowMSAA = 0x18e1dd0;
		constexpr auto set_allowMSAA = 0x18e2710;
		constexpr auto set_forceIntoRenderTexture = 0x18e29b0;
		constexpr auto get_orthographicSize = 0x18e2240;
		constexpr auto set_orthographicSize = 0x18e2b90;
		constexpr auto get_orthographic = 0x18e2280;
		constexpr auto set_orthographic = 0x18e2be0;
		constexpr auto get_depth = 0x18e2020;
		constexpr auto get_aspect = 0x18e1e10;
		constexpr auto set_aspect = 0x18e2760;
		constexpr auto get_cullingMask = 0x18e1f70;
		constexpr auto set_cullingMask = 0x18e2890;
		constexpr auto get_eventMask = 0x18e2060;
		constexpr auto get_cameraType = 0x18e1ef0;
		constexpr auto GetLayerCullDistances = 0x18e0c80;
		constexpr auto SetLayerCullDistances = 0x18e1590;
		constexpr auto get_layerCullDistances = 0x18e0c80;
		constexpr auto set_layerCullDistances = 0x18e2a00;
		constexpr auto get_backgroundColor = 0x18e1ea0;
		constexpr auto set_backgroundColor = 0x18e2800;
		constexpr auto get_clearFlags = 0x18e1f30;
		constexpr auto set_clearFlags = 0x18e2850;
		constexpr auto get_depthTextureMode = 0x18e1fe0;
		constexpr auto set_depthTextureMode = 0x18e28d0;
		constexpr auto SetReplacementShader = 0x18e15e0;
		constexpr auto get_usePhysicalProperties = 0x18e25d0;
		constexpr auto set_usePhysicalProperties = 0x18e2ef0;
		constexpr auto set_rect = 0x18e2dc0;
		constexpr auto get_pixelRect = 0x18e2350;
		constexpr auto set_pixelRect = 0x18e2c80;
		constexpr auto get_pixelWidth = 0x18e23a0;
		constexpr auto get_pixelHeight = 0x18e22c0;
		constexpr auto get_targetTexture = 0x18e2590;
		constexpr auto set_targetTexture = 0x18e2e50;
		constexpr auto get_targetDisplay = 0x18e2550;
		constexpr auto get_worldToCameraMatrix = 0x18e2660;
		constexpr auto get_projectionMatrix = 0x18e2430;
		constexpr auto set_projectionMatrix = 0x18e2d20;
		constexpr auto get_nonJitteredProjectionMatrix = 0x18e21e0;
		constexpr auto set_nonJitteredProjectionMatrix = 0x18e2b40;
		constexpr auto set_useJitteredProjectionMatrixForTransparentRendering = 0x18e2ea0;
		constexpr auto ResetProjectionMatrix = 0x18e1180;
		constexpr auto WorldToScreenPoint = 0x18e1ae0;
		constexpr auto WorldToViewportPoint = 0x18e1c50;
		constexpr auto ScreenToViewportPoint = 0x18e1530;
		constexpr auto ViewportToScreenPoint = 0x18e1a10;
		constexpr auto ViewportPointToRay = 0x18e1850;
		constexpr auto ScreenPointToRay = 0x18e1460;
		constexpr auto CalculateFrustumCornersInternal = 0x18e07c0;
		constexpr auto CalculateFrustumCorners = 0x18e0830;
		constexpr auto get_main = 0x18e2120;
		constexpr auto get_current = 0x18e1fb0;
		constexpr auto get_stereoEnabled = 0x18e24d0;
		constexpr auto get_stereoTargetEye = 0x18e2510;
		constexpr auto get_stereoActiveEye = 0x18e2490;
		constexpr auto GetStereoNonJitteredProjectionMatrix = 0x18e0d10;
		constexpr auto GetStereoViewMatrix = 0x18e0e90;
		constexpr auto CopyStereoDeviceProjectionMatrixToNonJittered = 0x18e09a0;
		constexpr auto GetStereoProjectionMatrix = 0x18e0dd0;
		constexpr auto SetStereoProjectionMatrix = 0x18e1690;
		constexpr auto ResetStereoProjectionMatrices = 0x18e11c0;
		constexpr auto GetAllCamerasCount = 0x18e0af0;
		constexpr auto GetAllCamerasImpl = 0x18e0b20;
		constexpr auto get_allCamerasCount = 0x18e0af0;
		constexpr auto GetAllCameras = 0x18e0b60;
		constexpr auto Render = 0x18e1140;
		constexpr auto RenderWithShader = 0x18e10e0;
		constexpr auto CopyFrom = 0x18e0950;
		constexpr auto RemoveCommandBuffers = 0x18e10a0;
		constexpr auto RemoveAllCommandBuffers = 0x18e0f00;
		constexpr auto AddCommandBufferImpl = 0x18e05f0;
		constexpr auto RemoveCommandBufferImpl = 0x18e0f40;
		constexpr auto AddCommandBuffer = 0x18e0640;
		constexpr auto RemoveCommandBuffer = 0x18e0f90;
		constexpr auto GetCommandBuffers = 0x18e0c40;
		constexpr auto FireOnPreCull = 0x18e0a40;
		constexpr auto FireOnPreRender = 0x18e0a90;
		constexpr auto FireOnPostRender = 0x18e09e0;
		constexpr auto ctor = 0x18df320;
		constexpr auto get_backgroundColor_Injected = 0x18e1e50;
		constexpr auto set_backgroundColor_Injected = 0x18e27b0;
		constexpr auto set_rect_Injected = 0x18e2d70;
		constexpr auto get_pixelRect_Injected = 0x18e2300;
		constexpr auto set_pixelRect_Injected = 0x18e2c30;
		constexpr auto get_worldToCameraMatrix_Injected = 0x18e2610;
		constexpr auto get_projectionMatrix_Injected = 0x18e23e0;
		constexpr auto set_projectionMatrix_Injected = 0x18e2cd0;
		constexpr auto get_nonJitteredProjectionMatrix_Injected = 0x18e2190;
		constexpr auto set_nonJitteredProjectionMatrix_Injected = 0x18e2af0;
		constexpr auto WorldToScreenPoint_Injected = 0x18e1a70;
		constexpr auto WorldToViewportPoint_Injected = 0x18e1be0;
		constexpr auto ScreenToViewportPoint_Injected = 0x18e14d0;
		constexpr auto ViewportToScreenPoint_Injected = 0x18e19b0;
		constexpr auto ViewportPointToRay_Injected = 0x18e16e0;
		constexpr auto ScreenPointToRay_Injected = 0x18e1200;
		constexpr auto CalculateFrustumCornersInternal_Injected = 0x18e0750;
		constexpr auto GetStereoNonJitteredProjectionMatrix_Injected = 0x18e0cc0;
		constexpr auto GetStereoViewMatrix_Injected = 0x18e0e40;
		constexpr auto GetStereoProjectionMatrix_Injected = 0x18e0d80;
		constexpr auto SetStereoProjectionMatrix_Injected = 0x18e1640;
	};

	namespace MainCamera {
		constexpr auto mainCameraTransform = 0x8;
		constexpr auto velocityk__BackingField = 0x10;
		constexpr auto MipStreamingBudget = 0x20;
		constexpr auto totalFrameTime = 0x138;
		constexpr auto lowestFrameTime = 0x140;
		constexpr auto highestFrameTime = 0x148;
		constexpr auto totalFrames = 0x150;
		constexpr auto timeSinceFrameSubmit = 0x154;
		constexpr auto frameTime = 0x158;

		constexpr auto get_isValid = 0x81c6c0;
		constexpr auto get_velocity = 0x81c9d0;
		constexpr auto set_velocity = 0x81cd40;
		constexpr auto get_position = 0x81c7a0;
		constexpr auto set_position = 0x81cae0;
		constexpr auto get_forward = 0x81c630;
		constexpr auto set_forward = 0x81ca40;
		constexpr auto get_right = 0x81c830;
		constexpr auto set_right = 0x81cb70;
		constexpr auto get_up = 0x81c940;
		constexpr auto set_up = 0x81cc90;
		constexpr auto get_rotation = 0x81c8c0;
		constexpr auto set_rotation = 0x81cc10;
		constexpr auto get_Ray = 0x81c270;
		constexpr auto get_Raycast = 0x81c3f0;
		constexpr auto GetEnvironment = 0x81aef0;
		constexpr auto InEnvironment = 0x81afd0;
		constexpr auto Awake = 0x81a750;
		constexpr auto Setup = 0x81b890;
		constexpr auto OnDestroy = 0x81b2d0;
		constexpr auto AdjustTextureStreamingBudget = 0x81a560;
		constexpr auto Update = 0x81c190;
		constexpr auto RecordFrameTime = 0x81b3d0;
		constexpr auto LateUpdate = 0x81b0c0;
		constexpr auto Distance = 0x81ab60;
		constexpr auto SqrDistance = 0x81bd20;
		constexpr auto Distance2D = 0x81a830;
		constexpr auto SqrDistance2D = 0x81b950;
		constexpr auto Trace = 0x81bef0;
		constexpr auto ctor = 0x81c210;
		constexpr auto cctor = 0x81c1a0;
	};

	namespace System_GC {

		constexpr auto GetCollectionCount = 0x10558f0;
		constexpr auto GetMaxGeneration = 0x1055900;
		constexpr auto InternalCollect = 0x1055920;
		constexpr auto RecordPressure = 0x10559c0;
		constexpr auto register_ephemeron_array = 0xcda8d0;
		constexpr auto get_ephemeron_tombstone = 0x1055c20;
		constexpr auto AddMemoryPressure = 0x10556c0;
		constexpr auto RemoveMemoryPressure = 0x10559d0;
		constexpr auto Collect = 0x10557c0;
		constexpr auto CollectionCount = 0x1055850;
		constexpr auto KeepAlive = 0x2f6e50;
		constexpr auto get_MaxGeneration = 0x1055bd0;
		constexpr auto _SuppressFinalize = 0x1055b70;
		constexpr auto SuppressFinalize = 0x1055ad0;
		constexpr auto _ReRegisterForFinalize = 0x1055b60;
		constexpr auto ReRegisterForFinalize = 0x1055930;
		constexpr auto GetTotalMemory = 0x1055910;
		constexpr auto cctor = 0x1055b80;
	};

	namespace BaseOven {
		constexpr auto __menuOption_SwitchOff = 0x3c0;
		constexpr auto __menuOption_SwitchOn = 0x418;
		constexpr auto temperature = 0x470;
		constexpr auto switchOnMenu = 0x478;
		constexpr auto switchOffMenu = 0x498;
		constexpr auto startupContents = 0x4b8;
		constexpr auto allowByproductCreation = 0x4c0;
		constexpr auto fuelType = 0x4c8;
		constexpr auto canModFire = 0x4d0;
		constexpr auto disabledBySplash = 0x4d1;

		constexpr auto GetMenuOptions = 0x304bb0;
		constexpr auto get_HasMenuOptions = 0x305390;
		constexpr auto OnRpcMessage = 0x305120;
		constexpr auto HasSlot = 0x305100;
		constexpr auto SwitchOn = 0x3052e0;
		constexpr auto SwitchOn_ShowIf = 0x3052a0;
		constexpr auto SwitchOff = 0x305250;
		constexpr auto SwitchOff_ShowIf = 0x305210;
		constexpr auto ctor = 0x305330;
	};

	namespace StorageContainer {
		constexpr auto __menuOption_Menu_Occupied = 0x250;
		constexpr auto __menuOption_Menu_OnFire = 0x2a8;
		constexpr auto __menuOption_Menu_Open = 0x300;
		constexpr auto InUseMessage = 0x8;
		constexpr auto inventorySlots = 0x358;
		constexpr auto dropChance = 0x35c;
		constexpr auto isLootable = 0x360;
		constexpr auto isLockable = 0x361;
		constexpr auto isMonitorable = 0x362;
		constexpr auto panelName = 0x368;
		constexpr auto allowedContents = 0x370;
		constexpr auto allowedItem = 0x378;
		constexpr auto allowedItem2 = 0x380;
		constexpr auto maxStackSize = 0x388;
		constexpr auto needsBuildingPrivilegeToUse = 0x38c;
		constexpr auto openSound = 0x390;
		constexpr auto closeSound = 0x398;
		constexpr auto dropPosition = 0x3a0;
		constexpr auto dropVelocity = 0x3ac;
		constexpr auto onlyAcceptCategory = 0x3b8;
		constexpr auto onlyOneUser = 0x3bc;

		constexpr auto GetMenuOptions = 0x5e9520;
		constexpr auto get_HasMenuOptions = 0x5ea380;
		constexpr auto OnRpcMessage = 0x5ea010;
		constexpr auto ResetState = 0x5ea100;
		constexpr auto OnDrawGizmos = 0x5e9e60;
		constexpr auto HasSlot = 0x5e9cc0;
		constexpr auto OccupiedCheck = 0x5e9d80;
		constexpr auto GetMoveToContainerIndex = 0x2fe1c0;
		constexpr auto GetMoveToSlotIndex = 0x5e9cb0;
		constexpr auto ShouldShowLootMenus = 0x5ea110;
		constexpr auto Menu_Open = 0x5e9d40;
		constexpr auto Menu_Open_ShowIf = 0x5e9d20;
		constexpr auto Menu_Occupied = 0x2f6e50;
		constexpr auto Menu_Occupied_ShowIf = 0x5e9cf0;
		constexpr auto Menu_OnFire = 0x2f6e50;
		constexpr auto Menu_OnFire_ShowIf = 0x5e9d10;
		constexpr auto ctor = 0x5ea2d0;
		constexpr auto cctor = 0x5ea220;
	};

	namespace LocalPlayer {
		constexpr auto LastAttackerSteamIDk__BackingField = 0x8;
		constexpr auto LastAttackerNamek__BackingField = 0x10;
		constexpr auto LastDeathTime = 0x18;
		constexpr auto CraftCounts = 0x20;
		constexpr auto ItemBluePrintOrdered = 0x28;

		constexpr auto get_Entity = 0x8093d0;
		constexpr auto set_Entity = 0x809920;
		constexpr auto get_LastAttackerSteamID = 0x809490;
		constexpr auto set_LastAttackerSteamID = 0x8099f0;
		constexpr auto get_LastAttackerName = 0x809430;
		constexpr auto set_LastAttackerName = 0x809980;
		constexpr auto get_TimeSinceLastDeath = 0x8094f0;
		constexpr auto EndLooting = 0x807560;
		constexpr auto GetContainer = 0x8078f0;
		constexpr auto GetLootContainer = 0x808030;
		constexpr auto OnInventoryChanged = 0x808fc0;
		constexpr auto OnItemAmountChanged = 0x809160;
		constexpr auto HasUnlocked = 0x808840;
		constexpr auto GetCraftLevel = 0x807ba0;
		constexpr auto HasCraftLevel = 0x808260;
		constexpr auto MoveItem = 0x808e40;
		constexpr auto DropItemStack = 0x807310;
		constexpr auto DropItem = 0x8074f0;
		constexpr auto ItemCommand = 0x808990;
		constexpr auto get_isSleeping = 0x8097e0;
		constexpr auto get_isAdmin = 0x809560;
		constexpr auto get_isDeveloper = 0x8096a0;
		constexpr auto FindAmmo = 0x807770;
		constexpr auto ModifyCamera = 0x808cd0;
		constexpr auto HasItems = 0x8085f0;
		constexpr auto GetItemAmount = 0x807e10;
		constexpr auto BuildItemRequiredString = 0x806c50;
		constexpr auto HasInventoryItem = 0x8082c0;
		constexpr auto ResetCraftCounts = 0x8091b0;
		constexpr auto ListCraftCounts = 0x808b30;
		constexpr auto GetCraftCount = 0x807a40;
		constexpr auto AddCraftCount = 0x806b70;
		constexpr auto cctor = 0x809320;
	};

	namespace UIInventory {
		constexpr auto PlayerName = 0x18;
		constexpr auto LastOpened = 0x4;
		constexpr auto rightContents = 0x20;
		constexpr auto QuickCraft = 0x28;
		constexpr auto InventoryIconContainer = 0x30;
		constexpr auto contactsPanel = 0x38;
		constexpr auto currentQuickLootContainerID = 0x8;
		constexpr auto Inset = 0x40;
		constexpr auto returnX = 0x48;
		constexpr auto canvasGroup = 0x10;
		constexpr auto graphicRaycster = 0x18;
		constexpr auto inventoryItemIcons = 0x50;
		constexpr auto underwearSkinPicker = 0x58;

		constexpr auto Awake = 0x4a59a0;
		constexpr auto Open = 0x4a6590;
		constexpr auto ToggleInventory = 0x4a7280;
		constexpr auto Close = 0x4a5d50;
		constexpr auto PlayCloseSound = 0x4a6a20;
		constexpr auto OpenLoot = 0x4a6500;
		constexpr auto CanQuickLootItem = 0x4a5c10;
		constexpr auto Update = 0x4a74a0;
		constexpr auto ShouldShow = 0x4a7020;
		constexpr auto CloseUnderwearPicker = 0x4a5d20;
		constexpr auto ToggleUnderwearPicker = 0x4a7400;
		constexpr auto ContactsPressed = 0x4a6490;
		constexpr auto ctor = 0x4a77b0;
		constexpr auto cctor = 0x2f6e50;
	};

	namespace Chainsaw {
		constexpr auto attackFadeInTime = 0x2d8;
		constexpr auto attackFadeInDelay = 0x2dc;
		constexpr auto attackFadeOutTime = 0x2e0;
		constexpr auto idleFadeInTimeFromOff = 0x2e4;
		constexpr auto idleFadeInTimeFromAttack = 0x2e8;
		constexpr auto idleFadeInDelay = 0x2ec;
		constexpr auto idleFadeOutTime = 0x2f0;
		constexpr auto wasEngineOn = 0x2f4;
		constexpr auto wasAttackingAudio = 0x2f5;
		constexpr auto chainRenderer = 0x2f8;
		constexpr auto block = 0x300;
		constexpr auto saveST = 0x308;
		constexpr auto chainSpeed = 0x310;
		constexpr auto chainAmount = 0x314;
		constexpr auto chainSpinUpRate = 0x318;
		constexpr auto fuelPerSec = 0x31c;
		constexpr auto maxAmmo = 0x320;
		constexpr auto ammo = 0x324;
		constexpr auto fuelType = 0x328;
		constexpr auto reloadDuration = 0x330;
		constexpr auto idleLoop = 0x338;
		constexpr auto attackLoopAir = 0x340;
		constexpr auto revUp = 0x348;
		constexpr auto revDown = 0x350;
		constexpr auto offSound = 0x358;
		constexpr auto lastHitMaterial = 0x360;
		constexpr auto lastHitTime = 0x368;
		constexpr auto nextReleaseTime = 0x36c;
		constexpr auto nextPressTime = 0x370;
		constexpr auto wasAttacking = 0x374;
		constexpr auto reloadFinishedTime = 0x378;
		constexpr auto engineStartChance = 0x37c;

		constexpr auto OnRpcMessage = 0x5c9ef0;
		constexpr auto DelayedAttackLoop = 0x5c91f0;
		constexpr auto DelayedIdleLoop = 0x5c9220;
		constexpr auto UpdateAudio = 0x5ca2a0;
		constexpr auto SetupVisuals = 0x5ca0f0;
		constexpr auto UpdateChain = 0x5ca6c0;
		constexpr auto EngineOn = 0x5c94f0;
		constexpr auto IsAttacking = 0x475580;
		constexpr auto ClientInit = 0x5c90c0;
		constexpr auto Update = 0x5ca900;
		constexpr auto IsReloading = 0x5c9820;
		constexpr auto GetItemOptions = 0x5c96d0;
		constexpr auto DoAttack = 0x5c9260;
		constexpr auto SendServerReload = 0x5ca0b0;
		constexpr auto OnViewmodelEvent = 0x5c9fe0;
		constexpr auto OnInput = 0x5c9a30;
		constexpr auto PostNetworkUpdate = 0x5ca090;
		constexpr auto GetChainsawViewmodel = 0x5c95f0;
		constexpr auto OnFrame = 0x5c98e0;
		constexpr auto CleanupViewmodel = 0x5c9040;
		constexpr auto OnHolster = 0x5c9a10;
		constexpr auto OnDeploy = 0x5c98c0;
		constexpr auto UpdateAmmoDisplay = 0x5ca200;
		constexpr auto DoAttackShared = 0x5c9250;
		constexpr auto Load = 0x5c9850;
		constexpr auto HasAmmo = 0x5c9800;
		constexpr auto GetAmmo = 0x5c9500;
		constexpr auto ctor = 0x5ca960;
	};

	namespace TreeEntity {
		constexpr auto fallOnKilled = 0x178;
		constexpr auto fallDuration = 0x17c;
		constexpr auto fallStartSound = 0x180;
		constexpr auto fallImpactSound = 0x188;
		constexpr auto fallImpactParticles = 0x190;
		constexpr auto fallLeavesLoopDef = 0x198;
		constexpr auto usedHeights = 0x1a0;
		constexpr auto impactSoundPlayed = 0x1a8;
		constexpr auto treeDistanceUponFalling = 0x1ac;
		constexpr auto treeBaseRef = 0x1b0;
		constexpr auto oldSkinPos = 0x1b8;
		constexpr auto oldSkinRot = 0x1c4;
		constexpr auto lastTreeFallTickTime = 0x1d4;
		constexpr auto fallStartTime = 0x1d8;
		constexpr auto fallLeavesLoop = 0x1e0;
		constexpr auto fallLeavesGainMod = 0x1e8;
		constexpr auto hitDirection = 0x1f0;
		constexpr auto rotateDirection = 0x1fc;
		constexpr auto impactSoundCheckHeight = 0x208;
		constexpr auto prefab = 0x210;
		constexpr auto hasBonusGame = 0x218;
		constexpr auto bonusHitEffect = 0x220;
		constexpr auto bonusHitSound = 0x228;
		constexpr auto serverCollider = 0x230;
		constexpr auto clientCollider = 0x238;
		constexpr auto smallCrackSoundDef = 0x240;
		constexpr auto medCrackSoundDef = 0x248;
		constexpr auto lastAttackDamage = 0x250;
		constexpr auto skin = 0x258;

		constexpr auto OnRpcMessage = 0x6c6f60;
		constexpr auto TreeFall = 0x6c83b0;
		constexpr auto TreeFallTick = 0x6c7ba0;
		constexpr auto ResetState = 0x6c7940;
		constexpr auto ShouldLerp = 0x2f6010;
		constexpr auto ClientInit = 0x6c6b20;
		constexpr auto DoNetworkDestroy = 0x6c6e30;
		constexpr auto CrackSound = 0x6c6ce0;
		constexpr auto BoundsPadding = 0x2fe7e0;
		constexpr auto PreProcess = 0x6c7800;
		constexpr auto ctor = 0x6c8ac0;
	};

	namespace UnityEngine_Renderer {

		constexpr auto set_motionVectors = 0x1998680;
		constexpr auto get_bounds = 0x19982a0;
		constexpr auto GetMaterial = 0x1997ec0;
		constexpr auto GetSharedMaterial = 0x1997f90;
		constexpr auto SetMaterial = 0x1998200;
		constexpr auto GetMaterialArray = 0x1997e40;
		constexpr auto CopySharedMaterialArray = 0x1997df0;
		constexpr auto SetMaterialArray = 0x19981b0;
		constexpr auto Internal_SetPropertyBlock = 0x1998160;
		constexpr auto Internal_GetPropertyBlock = 0x1997f00;
		constexpr auto Internal_SetPropertyBlockMaterialIndex = 0x1998100;
		constexpr auto HasPropertyBlock = 0x19980c0;
		constexpr auto SetPropertyBlock = 0x1998160;
		constexpr auto GetPropertyBlock = 0x1997f00;
		constexpr auto get_enabled = 0x1998300;
		constexpr auto set_enabled = 0x19985b0;
		constexpr auto get_isVisible = 0x1998340;
		constexpr auto get_shadowCastingMode = 0x19984f0;
		constexpr auto set_shadowCastingMode = 0x1998760;
		constexpr auto get_receiveShadows = 0x19984b0;
		constexpr auto set_receiveShadows = 0x19986d0;
		constexpr auto get_motionVectorGenerationMode = 0x1998470;
		constexpr auto set_motionVectorGenerationMode = 0x1998640;
		constexpr auto get_lightProbeUsage = 0x1998380;
		constexpr auto set_lightProbeUsage = 0x1998600;
		constexpr auto set_reflectionProbeUsage = 0x1998720;
		constexpr auto get_sortingLayerID = 0x1998530;
		constexpr auto set_sortingLayerID = 0x19987a0;
		constexpr auto get_sortingOrder = 0x1998570;
		constexpr auto set_sortingOrder = 0x19987e0;
		constexpr auto get_localToWorldMatrix = 0x1998410;
		constexpr auto GetMaterialCount = 0x1997e80;
		constexpr auto GetSharedMaterialArray = 0x1997f50;
		constexpr auto get_materials = 0x1997e40;
		constexpr auto set_materials = 0x19981b0;
		constexpr auto get_material = 0x1997ec0;
		constexpr auto set_material = 0x1998200;
		constexpr auto get_sharedMaterial = 0x1997f90;
		constexpr auto set_sharedMaterial = 0x1998200;
		constexpr auto get_sharedMaterials = 0x1997f50;
		constexpr auto set_sharedMaterials = 0x19981b0;
		constexpr auto GetSharedMaterials = 0x1997fd0;
		constexpr auto get_bounds_Injected = 0x1998250;
		constexpr auto get_localToWorldMatrix_Injected = 0x19983c0;
	};

	namespace UnityEngine_Shader {

		constexpr auto Find = 0x199a3a0;
		constexpr auto get_globalMaximumLOD = 0x199b090;
		constexpr auto set_globalMaximumLOD = 0x199b140;
		constexpr auto get_isSupported = 0x199b0c0;
		constexpr auto EnableKeyword = 0x199a290;
		constexpr auto DisableKeyword = 0x199a250;
		constexpr auto IsKeywordEnabled = 0x199a770;
		constexpr auto TagToID = 0x199aff0;
		constexpr auto IDToTag = 0x199a6e0;
		constexpr auto PropertyToID = 0x199a7b0;
		constexpr auto get_passCount = 0x199b100;
		constexpr auto FindPassTagValue = 0x199a2d0;
		constexpr auto Internal_FindPassTagValue = 0x199a720;
		constexpr auto SetGlobalFloatImpl = 0x199a8e0;
		constexpr auto SetGlobalVectorImpl = 0x199aef0;
		constexpr auto SetGlobalMatrixImpl = 0x199aa50;
		constexpr auto SetGlobalTextureImpl = 0x199ab80;
		constexpr auto GetGlobalFloatImpl = 0x199a3e0;
		constexpr auto SetGlobalVectorArrayImpl = 0x199ac30;
		constexpr auto SetGlobalVectorArray = 0x199ad90;
		constexpr auto SetGlobalFloat = 0x199a930;
		constexpr auto SetGlobalInt = 0x199a9a0;
		constexpr auto SetGlobalVector = 0x199af30;
		constexpr auto SetGlobalColor = 0x199a850;
		constexpr auto SetGlobalMatrix = 0x199aa90;
		constexpr auto SetGlobalTexture = 0x199abc0;
		constexpr auto GetGlobalFloat = 0x199a420;
		constexpr auto ctor = 0x199b030;
		constexpr auto GetPropertyName = 0x199a4c0;
		constexpr auto GetPropertyType = 0x199a5d0;
		constexpr auto CheckPropertyIndex = 0x199a1b0;
		constexpr auto GetPropertyCount = 0x199a480;
		constexpr auto SetGlobalVectorImpl_Injected = 0x199aeb0;
		constexpr auto SetGlobalMatrixImpl_Injected = 0x199aa10;
	};

	namespace UnityEngine_Terrain {

		constexpr auto get_terrainData = 0x22bf330;
		constexpr auto set_heightmapPixelError = 0x22bf500;
		constexpr auto set_basemapDistance = 0x22bf370;
		constexpr auto set_shadowCastingMode = 0x22bf5e0;
		constexpr auto get_reflectionProbeUsage = 0x22bf2f0;
		constexpr auto set_reflectionProbeUsage = 0x22bf5a0;
		constexpr auto get_materialTemplate = 0x22bf2b0;
		constexpr auto set_materialTemplate = 0x22bf550;
		constexpr auto get_drawHeightmap = 0x22bf1f0;
		constexpr auto set_drawHeightmap = 0x22bf410;
		constexpr auto get_allowAutoConnect = 0x22bf1b0;
		constexpr auto get_groupingID = 0x22bf270;
		constexpr auto set_drawInstanced = 0x22bf460;
		constexpr auto get_drawTreesAndFoliage = 0x22bf230;
		constexpr auto set_drawTreesAndFoliage = 0x22bf4b0;
		constexpr auto SampleHeight = 0x22bf090;
		constexpr auto SetNeighbors = 0x22bf0e0;
		constexpr auto GetPosition = 0x22beff0;
		constexpr auto Flush = 0x22bef60;
		constexpr auto get_activeTerrain = 0x22bf150;
		constexpr auto get_activeTerrains = 0x22bf180;
		constexpr auto CreateTerrainGameObject = 0x22bef20;
		constexpr auto set_castShadows = 0x22bf3c0;
		constexpr auto set_materialType = 0x2f6e50;
		constexpr auto ctor = 0x18d1d70;
		constexpr auto SampleHeight_Injected = 0x22bf040;
		constexpr auto GetPosition_Injected = 0x22befa0;
	};

	namespace TerrainCollision {
		constexpr auto ignoredColliders = 0x30;
		constexpr auto terrainCollider = 0x38;

		constexpr auto Setup = 0x119ac20;
		constexpr auto Clear = 0x119a400;
		constexpr auto Reset = 0x119a900;
		constexpr auto GetIgnore = 0x119a690;
		constexpr auto SetIgnore = 0x119a9d0;
		constexpr auto LateUpdate = 0x119a7f0;
		constexpr auto ctor = 0x2f8b30;
	};

	namespace ItemIcon {
		constexpr auto selectedBackgroundColor = 0x10;
		constexpr auto containerSource = 0x18;
		constexpr auto slotOffset = 0x20;
		constexpr auto slot = 0x24;
		constexpr auto setSlotFromSiblingIndex = 0x28;
		constexpr auto slots = 0x30;
		constexpr auto iconContents = 0x38;
		constexpr auto iconImage = 0x40;
		constexpr auto underlayImage = 0x48;
		constexpr auto amountText = 0x50;
		constexpr auto hoverText = 0x58;
		constexpr auto hoverOutline = 0x60;
		constexpr auto cornerIcon = 0x68;
		constexpr auto lockedImage = 0x70;
		constexpr auto progressImage = 0x78;
		constexpr auto backgroundImage = 0x80;
		constexpr auto backgroundUnderlayImage = 0x88;
		constexpr auto emptySlotBackgroundSprite = 0x90;
		constexpr auto conditionObject = 0x98;
		constexpr auto conditionFill = 0xa0;
		constexpr auto maxConditionFill = 0xa8;
		constexpr auto allowSelection = 0xb0;
		constexpr auto allowDropping = 0xb1;
		constexpr auto allowMove = 0xb2;
		constexpr auto item = 0xb8;
		constexpr auto invalidSlot = 0xc0;
		constexpr auto hoverSound = 0xc8;
		constexpr auto slotImages = 0xd0;
		constexpr auto containerLootStartTimes = 0x20;
		constexpr auto queuedForLooting = 0xd8;
		constexpr auto queuedQuickLootContainerID = 0xdc;
		constexpr auto queuedLootAtTime = 0xe0;
		constexpr auto visible = 0xe4;
		constexpr auto hovering = 0xe5;
		constexpr auto canvasGroupParent = 0xe8;
		constexpr auto timedAction = 0xf0;
		constexpr auto timedActionTime = 0xf8;

		constexpr auto Awake = 0x96e3a0;
		constexpr auto OnEnable = 0x96f8e0;
		constexpr auto ClearLootTimers = 0x96e5d0;
		constexpr auto ClearProgressImage = 0x96e6b0;
		constexpr auto OnDisable = 0x96f350;
		constexpr auto OnShow = 0x9709c0;
		constexpr auto OnHide = 0x96fb00;
		constexpr auto ClearLooting = 0x96e690;
		constexpr auto Update = 0x972610;
		constexpr auto GetItemSprite = 0x96ef20;
		constexpr auto OnItemAmountChanged = 0x9702f0;
		constexpr auto OnItemIconChanged = 0x970330;
		constexpr auto OnInventoryChanged = 0x96fba0;
		constexpr auto UpdateHoverText = 0x972150;
		constexpr auto UpdateItemIcon = 0x972310;
		constexpr auto SetBackgroundUnderlayVisible = 0x970d50;
		constexpr auto UpdateCornerIcon = 0x972040;
		constexpr auto UpdateSlots = 0x972350;
		constexpr auto get_iconValue = 0x9727e0;
		constexpr auto Select = 0x970b40;
		constexpr auto Deselect = 0x96e950;
		constexpr auto SetActive = 0x970c80;
		constexpr auto OnDroppedValue = 0x96f4e0;
		constexpr auto TryToDropInsideItem = 0x9711f0;
		constexpr auto SetTimedLootAction = 0x970eb0;
		constexpr auto CalculateLootDelay = 0x96e470;
		constexpr auto StartTimedLootAction = 0x971170;
		constexpr auto RunTimedAction = 0x970b10;
		constexpr auto ClearTimedAction = 0x96e780;
		constexpr auto RemoveFromLootQueue = 0x9709d0;
		constexpr auto UpdateTimedActionIcon = 0x9725a0;
		constexpr auto TryToQuickMove = 0x971aa0;
		constexpr auto TryToMove = 0x971350;
		constexpr auto EquipAsClothingItem = 0x96e9e0;
		constexpr auto OnPointerClick = 0x970440;
		constexpr auto OnPointerEnter = 0x970520;
		constexpr auto OnPointerExit = 0x9708f0;
		constexpr auto GetDragData = 0x96ebc0;
		constexpr auto GetDragType = 0x96eef0;
		constexpr auto GetDragSprite = 0x96eec0;
		constexpr auto ctor = 0x9727c0;
		constexpr auto cctor = 0x9726b0;
		constexpr auto EquipAsClothingItemb__75_0 = 0x971cc0;
	};

	namespace CompoundBowWeapon {
		constexpr auto stringHoldDurationMax = 0x378;
		constexpr auto stringBonusDamage = 0x37c;
		constexpr auto stringBonusDistance = 0x380;
		constexpr auto stringBonusVelocity = 0x384;
		constexpr auto movementPenaltyRampUpTime = 0x388;
		constexpr auto chargeUpSoundDef = 0x390;
		constexpr auto stringHeldSoundDef = 0x398;
		constexpr auto drawFinishSoundDef = 0x3a0;
		constexpr auto chargeUpSound = 0x3a8;
		constexpr auto stringHeldSound = 0x3b0;
		constexpr auto movementPenalty = 0x3b8;
		constexpr auto lastMoveTime = 0x3bc;
		constexpr auto currentHoldProgress = 0x3c0;
		constexpr auto stringHoldTimeStart = 0x3c4;
		constexpr auto drawFinishPlayed = 0x3c8;

		constexpr auto OnRpcMessage = 0x4c3040;
		constexpr auto UpdateMovementPenalty = 0x4c37e0;
		constexpr auto DidAttackClientside = 0x4c2a90;
		constexpr auto OnInput = 0x4c2d00;
		constexpr auto OnHolstered = 0x4c2c60;
		constexpr auto SetStringHeld = 0x4c3230;
		constexpr auto OnViewmodelEvent = 0x4c3130;
		constexpr auto GetLastPlayerMovementTime = 0x4c2b30;
		constexpr auto GetStringBonusScale = 0x4c2ba0;
		constexpr auto GetDamageScale = 0x4c2ab0;
		constexpr auto GetDistanceScale = 0x4c2af0;
		constexpr auto GetProjectileVelocityScale = 0x4c2b60;
		constexpr auto StopDrawSounds = 0x4c32a0;
		constexpr auto UpdateDrawSounds = 0x4c33d0;
		constexpr auto ctor = 0x4c3970;
	};

	namespace AnimatedBuildingBlock {
		constexpr auto animatorNeedsInitializing = 0x260;
		constexpr auto animatorIsOpen = 0x261;
		constexpr auto isAnimating = 0x262;

		constexpr auto ClientOnEnable = 0x8a5e00;
		constexpr auto SetBatching = 0x8a6050;
		constexpr auto OnFlagsChanged = 0x8a5e70;
		constexpr auto UpdateAnimationParameters = 0x8a6090;
		constexpr auto OnAnimatorFinished = 0x8a5e30;
		constexpr auto PutAnimatorToSleep = 0x8a5ea0;
		constexpr auto OnAnimatorDisabled = 0x2f6e50;
		constexpr auto SupportsChildDeployables = 0x2f6010;
		constexpr auto ctor = 0x8a6340;
	};

	namespace UnityEngine_Animator {

		constexpr auto get_isInitialized = 0x22d6380;
		constexpr auto GetFloat = 0x22d5340;
		constexpr auto SetFloat = 0x22d5ab0;
		constexpr auto GetBool = 0x22d51e0;
		constexpr auto SetBool = 0x22d5930;
		constexpr auto GetInteger = 0x22d5420;
		constexpr auto SetInteger = 0x22d5ee0;
		constexpr auto SetTrigger = 0x22d6220;
		constexpr auto ResetTrigger = 0x22d5880;
		constexpr auto set_applyRootMotion = 0x22d6480;
		constexpr auto SetIKPosition = 0x22d5d50;
		constexpr auto SetGoalPosition = 0x22d5b60;
		constexpr auto SetIKRotation = 0x22d5e20;
		constexpr auto SetGoalRotation = 0x22d5c00;
		constexpr auto GetIKPositionWeight = 0x22d53d0;
		constexpr auto GetGoalWeightPosition = 0x22d5390;
		constexpr auto SetIKPositionWeight = 0x22d5cf0;
		constexpr auto SetGoalWeightPosition = 0x22d5c50;
		constexpr auto SetIKRotationWeight = 0x22d5dc0;
		constexpr auto SetGoalWeightRotation = 0x22d5ca0;
		constexpr auto SetLookAtPosition = 0x22d6030;
		constexpr auto SetLookAtPositionInternal = 0x22d5fe0;
		constexpr auto SetLookAtWeight = 0x22d6100;
		constexpr auto SetLookAtWeightInternal = 0x22d6090;
		constexpr auto get_layerCount = 0x22d63c0;
		constexpr auto GetLayerIndex = 0x22d5470;
		constexpr auto GetLayerWeight = 0x22d54c0;
		constexpr auto SetLayerWeight = 0x22d5f40;
		constexpr auto GetAnimatorStateInfo = 0x22d5180;
		constexpr auto GetCurrentAnimatorStateInfo = 0x22d5260;
		constexpr auto GetNextAnimatorStateInfo = 0x22d5540;
		constexpr auto GetCurrentAnimatorClipInfo = 0x22d5220;
		constexpr auto GetNextAnimatorClipInfo = 0x22d5500;
		constexpr auto IsInTransition = 0x22d5670;
		constexpr auto set_speed = 0x22d6600;
		constexpr auto CrossFade = 0x22d4f90;
		constexpr auto Play = 0x22d5820;
		constexpr auto get_cullingMode = 0x22d6300;
		constexpr auto set_cullingMode = 0x22d6520;
		constexpr auto get_runtimeAnimatorController = 0x22d6440;
		constexpr auto set_runtimeAnimatorController = 0x22d65b0;
		constexpr auto get_hasBoundPlayables = 0x22d6340;
		constexpr auto HasState = 0x22d55e0;
		constexpr auto StringToHash = 0x22d6270;
		constexpr auto set_avatar = 0x22d64d0;
		constexpr auto CheckIfInIKPass = 0x22d4dc0;
		constexpr auto IsInIKPass = 0x22d5630;
		constexpr auto SetFloatString = 0x22d5ab0;
		constexpr auto SetFloatID = 0x22d59f0;
		constexpr auto GetFloatString = 0x22d5340;
		constexpr auto GetFloatID = 0x22d5300;
		constexpr auto SetBoolString = 0x22d5930;
		constexpr auto SetBoolID = 0x22d58d0;
		constexpr auto GetBoolID = 0x22d51e0;
		constexpr auto SetIntegerString = 0x22d5ee0;
		constexpr auto SetIntegerID = 0x22d5e90;
		constexpr auto GetIntegerString = 0x22d5420;
		constexpr auto SetTriggerString = 0x22d6220;
		constexpr auto SetTriggerID = 0x22d61e0;
		constexpr auto ResetTriggerString = 0x22d5880;
		constexpr auto ResetTriggerID = 0x22d5840;
		constexpr auto SetFloatStringDamp = 0x22d5a40;
		constexpr auto SetFloatIDDamp = 0x22d5990;
		constexpr auto Update = 0x22d62b0;
		constexpr auto get_logWarnings = 0x22d6400;
		constexpr auto set_fireEvents = 0x22d6560;
		constexpr auto SetGoalPosition_Injected = 0x22d5b10;
		constexpr auto SetGoalRotation_Injected = 0x22d5bb0;
		constexpr auto SetLookAtPositionInternal_Injected = 0x22d5f90;
	};

	namespace UnityEngine_Behaviour {

		constexpr auto get_enabled = 0x18df380;
		constexpr auto set_enabled = 0x18df400;
		constexpr auto get_isActiveAndEnabled = 0x18df3c0;
		constexpr auto ctor = 0x18df320;
	};

	namespace Exports {
		constexpr auto il2cpp_method_get_param_count = 0x248ea0;
		constexpr auto il2cpp_class_from_name = 0x248630;
		constexpr auto il2cpp_assembly_get_image = 0x2485c0;
		constexpr auto il2cpp_domain_get_assemblies = 0x2489a0;
		constexpr auto il2cpp_domain_get = 0x248990;
		constexpr auto il2cpp_class_get_methods = 0x248720;
		constexpr auto il2cpp_array_new = 0x248580;
		constexpr auto il2cpp_string_new = 0x249800;
		constexpr auto il2cpp_object_new = 0x248fb0;
		constexpr auto il2cpp_type_get_object = 0x249a30;
		constexpr auto il2cpp_gc_wbarrier_set_field = 0x248ca0;
		constexpr auto il2cpp_resolve_icall = 0x2490a0;
	};
	namespace Indices {
		constexpr auto vFlintStrikeWeapon_DoAttack = 0xba0;
		constexpr auto vBowWeapon_DoAttack = 0xba0;
		constexpr auto vBaseProjectile_DoAttack = 0xba0;
		constexpr auto vBaseProjectile_LaunchProjectile = 0xbb0;
		constexpr auto vBasePlayer_GetInheritedProjectileVelocity = 0x770;
		constexpr auto vBasePlayer_ClientInput = 0xa50;
		constexpr auto vBasePlayer_BlockSprint = 0xa30;
		constexpr auto PlayerWalkMovement_DoFixedUpdate = 0xd8;
		constexpr auto PlayerTick_WriteToStreamDelta = 0x68;
		constexpr auto PlayerWalkMovement_TeleportTo = 0x38;
		constexpr auto PlayerWalkMovement_ClientInput = 0x48;
		constexpr auto PlayerWalkMovement_GetCollider = 0x8;
		constexpr auto Projectile_Update = 0x40;
		constexpr auto TOD_Sky_LateUpdate = 0x3c8;
		constexpr auto DDraw_OnGUI = 0xa8;
		constexpr auto DDraw_OnPostRender = 0xa0;
	};
}
